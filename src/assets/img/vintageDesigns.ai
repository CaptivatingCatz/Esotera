%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Set of decorative vintage golden dividers.eps
%%Creator: Adobe Illustrator(R) 16.2
%%For: ÿ
%%CreationDate: 2/19/2017
%%BoundingBox: 0 0 600 600
%%HiResBoundingBox: 0 0 600 599.9996
%%CropBox: 0 0 600 599.9996
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.2.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.2.0 x723 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 34813 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C4527F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827FD04F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F82027F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827FD04F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F82027F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820FD07F8
%20F8F8F820F8F8F820F8F8F820F8F8F820FD07F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F827F827
%F827F820757CF820F827F826F827F826F827F826F827F826F820F84B2627
%4B27F827F826F827F826F827F826F827F826F827F8F827A027F8F827F827
%F820F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F827F820F827
%F827F827F8F820F8F8F85151A02751272620272027202720272027202720
%2720274B76A07C51A7515126272027202720272027202720272027F82751
%4B757C4B27F820F8265152F820F826F820F826F820F826F820F826F820F8
%26F820F820F820F820F8F8F826F820F826F820F826F820F826F820F826F8
%20F82620762726F8F8F820F8F826F827F8277CA7A6517C7C4B514B515151
%4B5151514B5151514B5151A77CC97CA0A0A7A07C275151514B5151514B51
%51514B5151514BA7517CA0A75120F8277CCE7C7C51765176517651765176
%51765176517651765176517C7C7C4B7C27A07C7C51765176517651765176
%51765176517651765176517C7CCE5120F826F827FD04F820F8F826A027FD
%14F8265151267C2620FD13F827757CFD05F8265151F826F820F826F820F8
%26F820F826F820F826F820F82627A0FD0551A62620F826F820F826F820F8
%26F820F826F820F826F820F87C4B20F820F8F8F82027F827F827F827274B
%F827F827F827F827F827F827F827F827F827F826F827F827F827F826F827
%F827F827F827F827F827F827F827F82720512027F827F827F820F827F826
%F827F826F827F826F827F826F827F826F827F82651A07CA77CA04B20F827
%F826F827F826F827F826F827F826F827F826F827F8F8F827F827F827FD04
%F820FD05F820F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F826F8F827A0A67C
%26FD04F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F82027F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F820267C20F8F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820FD07F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827FD04F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F82027F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827FD04F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%2027F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F82020272026F82751512026F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F8F820FD07F820F8F8F820F8F8F820F8F8F820FD0BF8
%5151764B51272720515127F820F8F8F820F8F8F820FD07F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820FD07F820F8F8F820F8F827F827
%F82026765127F827F820F8F8F820F8F8F820F8F8F852272727512620F852
%51272627F82726272727F820F8F8F820F8F8F820F827F84B5151F827F827
%F827F84B7C4BF826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F820F8517627F827F827
%F827F827F8F820F8F826A051514B20F827FD0B5175A0A67CA07C51F85126
%F82775757C517C27FD0B514B27F82751517C7CF820F8F8F827757C262720
%26F8272026F8272026F8272026F8272027F8272027F8272027F8272026F8
%272026F8272026F8272026F827202726A05127F820F8F8F820F8F826F827
%F87C27F8F82727F875764B5151514B5151514B514B4B5176517C275127F8
%F851277C517C51514B5151514B5151514B514B7C26274BF8F8F8764BF827
%F876A6C97C76A0765176517651765176517651765176517C7C7C757C7C7C
%757C7C7C757C5176517651765176517651765176517CA651A0C9A651F827
%F826F827FD04F82627202626514BF876FD0FF827275126F8F8F82027264B
%FD0EF8274BF87C2627202726F8F820F8207B7C2620FD11F820F8F8F820F8
%F8F820FD13F82626A051FD04F820F8F8F82027F827F84BF8517C7CF85151
%20F827F827F827F827F827F827F8272627F827F827F827F827F827F827F8
%27F827F827F827F827F8277C2026A051272727F827F826F84B5127F827F8
%26F827F826F827F826F827F826F827F826F827F826F827F826F827F826F8
%27F826F827F826F827F826F827F8515127F827F827F827F827FD04F820F8
%512026F8517B27F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8517C27F826274BF8F8F820F8
%20F8F8F820F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F826F8F8F826F8F8F820F8
%F8F82027F826F8262676517C5127F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F851757C
%5151F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F8F820FD05F820FD05F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F827F827F827F826F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827FD04F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F82027F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827FD04F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%2027F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F827F827F827F827F827F826F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F826F827F827F827F827F827F820F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F820F827F827F827F827F8F820F8F8F8
%20F8F8F827F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820FD05F827F820F8F8F820F8F8F82726
%20F826F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8272626F820F8F8F820F8
%F826F827F820F826F8275152F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F8272027F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8207C4BF8F820
%F820F827F84B51517527F827F826F827F826F827F826F827F826F827F8F8
%F826F820F826F8F8F827F826F827F826F827F826F827F826F827F8FD0451
%27F827F826F827FD05F8267C7C51517C7C514B5127514B5127514B512751
%4B5127515127F851515126514B5127514B5127514B5127514B512751277C
%757C277C7C51F8F8F827262751275120FD11F8515120F84BF84BF8275151
%FD11F827512751272620F820F8F8F82027F827F84B517C275151A64B4B27
%512751275127512751275127512776275127205151275127512751275127
%51275127512751272775A0514B517C5127F8272751F8512751FD0427264B
%2727264B2727264B2727267C515151A77C767CA6752751762627264B2727
%264B2727264B272726275127274BF8512027F827F827FD04F826FD04F826
%7C27FD12F85120762627FD13F8205151FD05F820F8265151272026515176
%515151765151517651515176515175F8F87CA6A67CA6A076F8277CFD0451
%76515151765151517651515176F826277651F8F820F8F8F82027F826F827
%F826F82720F8F827F826F827F826F827F826F827F826F820277C27512720
%F827F826F827F826F827F826F827F826F827F8202027F826F827F826F827
%2727F826FD11F84B517C5176514B7C51517C7527FD11F827F8272627F826
%F827F826F8F820F8F8F820FD07F820F8F8F820F8F8F820F8F8F820FD05F8
%272020F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20FD07F820F8F8F820F8F8F820F8F8F820F8F8F820F826FD05F820F8F820
%26F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F826F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F826F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827FD04F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F82027F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827FD04F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F82026F820F826F820F826F820F826
%F820F826F820F826F820F826F820F826F820F826F820F826F820F826F820
%F826F820F826F820F826F820F826F820F826F820F826F820F826F820F826
%F820F826F820F826F820F826F820F826F820F826F820F826F820F826F820
%F826F820F826F820F826F820F826F820F826F820F826F820F8F827F826F8
%27F826F827F826F827F826F827F826F827F826F827F826F827F826F827F8
%26F827F826F827F826F827F826F827F826F827F826F827F826F827F826F8
%27F826F827F826F827F826F827F826F827F826F827F826F827F826F827F8
%26F827F826F827F826F827F826F827F826F827F826F827F826F827F826F8
%27F826524B5227524B5227524B5227524B5227524B5227524B5227524B52
%27524B5227524B5227524B5227524B5227524B5227524B5227524B522752
%4B5227524B5227524B5227524B5227524B5227524B5227524B5227524B52
%27524B5227524B5227524B5227524B5227524B5227524B5227524B522752
%4B5227524B5227524B52272751274B2751274B2751274B2751274B275127
%4B2751274B2752274B2751274B2752274B27514B4B2751274B2752274B27
%51274B2752274B2751274B27512751275227512751274B27512751275127
%4B2752274B2751274B2751274B2751274B275127512751274B2751274B27
%51274B2751274B2751274B2751274B2751274B5227524B5227524B522752
%4B5227524B5227524B5227524B5127A0A07C7C7C52A77CA776527CA7A07C
%7C7C51A67CA75276A05227A051524B52275227527CA77CA051A77651277C
%A07C7C7C76A7514B52A7517CA07C7C7C76A727767C7C7CA77CA6517CA0A7
%7C52275227524B5227524B5227524B5227524B5227524B5227524B274B27
%51274B2751274B2751274B2751274B2751274B275127277CA72752A67CA6
%514B527CA627524BA67CA7764B51524BCE7C277C522751274B274B27A7FD
%0451A67C272775A727524B7CC97C21A0A65151A727524B7CC97C27A05151
%7CA0277CA6524B762751274B2751274B2751274B2751274B2751274B2751
%274B27515227524B5227524B5227524B5227524B5227524B5227524B5227
%7CA04B27A7A6A77CA74B7CA7C97C527CC9A652277651767CC97C7C51524B
%5227522752A6A7A07627C97651277CA7A07C5276A7A0767CA7517CA7A07C
%5276A7A67C7C5227A77C274BC9A7A751524B5227524B5227524B5227524B
%5227524B5227524B5227524B274B2751274B2751274B2751274B2751274B
%2751274B2751272776A02727A0A6A0514B51275151CE7CA0A0C927277CA7
%517C51C9A0522751274B275127A751524B4BA076272776A72751277C76A0
%A07C7C5151A72751277C517CA67C27277CA0274B2752A0A72751274B2751
%274B2751274B2751274B2751274B2751274B2751524B5227524B5227524B
%5227524B5227524B5227524B52275227A0A6767CA752CE52767CA77C52A6
%A0A6A0A0A751A7A07CA04B7CCE514B27524B522752A77C517C76C97C7C7C
%A6A67676FD047CCE4BC9527CA676767C7CA027C9A65227A77C4B76A751A1
%A65227524B5227524B5227524B5227524B5227524B5227524B5227275127
%4B2751274B2751274B2751274B2751274B2751274B2751767C767C275276
%7C7C7C51A07C76277C515176A07651517C274B7552274B2751274B4B7C76
%7C75767C7C767C517C757C517C51525151767C517C757C5176514B517C27
%52767C27527C7C7651274B2751274B2751274B2751274B2751274B275127
%4B2751274B524B5227524B5227524B5227524B5227524B5227524B522752
%4B52275227522752274C2752275227522752275227522752275227524B52
%27524B524B52274C2752274B275227522752275227522752275227522752
%275227524B5227524B4B27524B4B27524B5227524B5227524B5227524B52
%27524B5227524B5227524B5227274B2727274B2727274B2727274B272727
%4B2727274B2727274B2727274B2727274B2727274B2727274B2727274B27
%27274B2727274B2727274B2727274B2727274B2727274B2727274B272727
%4B2727274B2727274B2727274B2727274B2727274B2727274B2727274B27
%27274B2727274B2727274B2727274B2727274B272726F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827FD04
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F82027F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827FD04F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F82027F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820FD
%07F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F820277CF8F8F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F820F82051A07C7626F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F82751A07CA6757C2620F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F820F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827FD04F820
%FD18F84BA04B51514B517CFD17F820F8F8F820FD1BF827F827F820FD1BF8
%20F8F8F82027F827F82026A7517C51512751275127512751275127512751
%2751277C7C7C517651A77C51275127512751275127512751275127512751
%7C767C7CF826F827F8525152515151525151515251515152FD0451275127
%514B27F85151A65151F8272751275127FD04515251515152515151525151
%51527C51F827F827F827FD04F820F8277551515120272627262726272627
%262726272627264B517CFD0451757C272726272627262726272627262726
%272627267C4B7C4B20FD04F82751264B2627264B2627264B2627264B2627
%262726272651272726277C2026274B5126272627264B2627264B2627264B
%2627264B2627265126F8F820F8F8F82027F826F827F8F8F820F820F826F8
%20F826F820F826F820F826F820F8517C76517C517C7B27F820F826F820F8
%26F820F826F820F826F820F820F8F8F827F826F820F820F820F820F820F8
%20F820F820F820F820F826F8F8F87C267627514B762676F820F826F820F8
%20F820F820F820F820F820F820F820F826F826F827F826F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F84BFD047C5126F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8267C27517B51277626
%FD04F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%517CA75127F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F82626
%51517C51512027F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8275120F820F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820FD05F87C7C7CF8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F826F827F826F827F826F827F826F827F8
%26F827F826F827F826F827F826F827F820F827F826F827F826F827F826F8
%27F826F827F826F827F826F827F826F827F826F827F826F827F826F827F8
%26F827F826F827F826F827F826F82626A02026F826F827F826F827F826F8
%27F826F827F826F827F826F827F826F827F826F827FD04F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F82026F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F82027
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F820F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827FD04F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F82027F826F827F826F827F826F827F826F8
%27F826F827F826F827F826F827F826F827F826F827F826F827F826F827F8
%26F827F826F827F826F827F826F827F826F827F826F827F826F827F826F8
%27F826F827F826F827F826F827F826F827F826F827F826F827F826F827F8
%26F827F826F827F826F827F826F827F826F827F826F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F820F820F8F8F826F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F826F8F8F820F820F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F826F827F8F8F826F826F826F820F8
%26F820F826F820F820F8F8F851F8F8F820204BF820F8F8F851F8F8F820F8
%20F826F820F826F820F826F826F827F820F827F826F826F826F827F826F8
%27F826F827F826F827F826F8202626F82726272027F827F820F826F827F8
%26F827F826F827F826F827F826F826F826F827F826F827FD05F826512620
%F8272027262720272627202720272651264B4B27264B26274B27264B2627
%4B27264B2627202720272627202726272026F8274B51FD19F84BF87C5127
%5176517C51275151F851FD17F820F8F8F82027F827207C26272727757651
%7651765176517651765176517C514B7676517C4B27757C517C5151767651
%7C51765176517651765176517C512727275151F82727764BA6515127514B
%5127514B5127514B5127512751517C517C7CA67C517CA6A07C517C515127
%514B5127514B5127514B5127514B4B75A04B7C2627F827F827FD04F82726
%27514B2727FD0DF827F8274BF8F826F82751F8F827F82651F8F826FD0DF8
%512651272726F8F8272751A0512627262726272627262726272627262727
%76517651517C7C27A67C7651765176262726272627262726272627262726
%2726767C4B4B26F820F8F8F82027F826F84B27514B76F820F827F826F827
%F826F827F820F827F827F827F820F827F820F827F827F827F820F827F826
%F827F826F827F8F8267C4B512727F826F820F827F826F820F826F820F826
%F820F826F820F82727275151267C7C517C76265251272627F820F826F820
%F826F820F826F820F826F827F820F826F827F826F8F820F8F8F8515151FD
%05F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F820514B27F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820FD05F826F8F8F820F826F8F8F826F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F827F827F827
%F8F8F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F8F8F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F826F827F826
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827FD04F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F82027F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827FD04F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F82027F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820FD07F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F827F827F827F826
%F827F827F827F827F827F827F827F827F827F826F826F827F827F820F827
%F827F827F827F827F827F827F827F827F827F827F826F827F827F827F826
%F827F826F827F826F827F826F827F826F827F826F8272627F826F84B2027
%F826F827F826F827F826F827F826F827F826F827F826F827F827F827F827
%F8F820F8F8F826FD15F8272751517C4B51274BF820FD13F820F8F8F820F8
%F8F827F820F826F820F820F8F8F820F8F8F820F8F8F820F827FD05517C51
%51FD05F820F8F8F820F8F8F820F8F8F820F8F8F820F820F820F8F8F820F8
%F826F826207C7CA751514B52517651765176517651765176515251A7517C
%517C517C4B7C517C7C765176517651765176517651765176517651517CA6
%7C51F827F8277C7C5176517651514B5151514B5151514B5151514B525151
%517CA6A75176517C5176517651765176517651765176517651765176517C
%7C20F827F826F827FD04F820264B26272026F82726272027262720272627
%202720272651517C4B7C4B51517627272027262720272627202726272027
%262720272027264BF8F8F820F826F826F820F826F826F826F826F826F826
%F826F826F8274B515176517C4B512026F827F826F827F826F827F826F827
%F826F827F826F827F8F8F820F8F8F82027F827F820F826F826F827F826F8
%27F826F827F826F827F826F820F8272051274B2627F820F827F826F827F8
%26F827F826F827F826F827F826F826F826F827F826F827F826F827F826F8
%27F826F827F826F827F826F827F8272727F820F8512620F827F826F827F8
%26F827F826F827F826F827F826F827F827F827F827F827FD04F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820FD07F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F82027F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827FD04F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F82027F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F826F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F826F827F826F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827FD04F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820FD17F820F8F8F8
%202627F8F8F827F820FD17F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F82027F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F820207CFD1651F827275151
%7C51525176515127FD16517CF827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F820274B2627264B262726
%4B2627264B2627264B2627264B2627264B2627204B2727F8F8F826264B26
%27264B2627264B2627264B2627264B2627264B27F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F820
%F820F827F820F827F820F827F820F827F820F827F820F827F820F827F820
%F827F827F827F820F827F820F827F820F827F820F827F820F827F820F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827FD04F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820
%F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F82027F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827FD04F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F82027F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F8
%20F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8
%F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8F820F8F8
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="ï»¿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Set of decorative vintage golden dividers</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Artur Aliev</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Set of decorative vintage golden dividers.Vector elements for your design on black background. Calligraphic design elements and page decoration</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>gold</rdf:li>
               <rdf:li>golden</rdf:li>
               <rdf:li>abstract</rdf:li>
               <rdf:li>accents</rdf:li>
               <rdf:li>arrow</rdf:li>
               <rdf:li>art</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>book</rdf:li>
               <rdf:li>border</rdf:li>
               <rdf:li>calligraphic</rdf:li>
               <rdf:li>calligraphy</rdf:li>
               <rdf:li>card</rdf:li>
               <rdf:li>certificate</rdf:li>
               <rdf:li>classic</rdf:li>
               <rdf:li>collection</rdf:li>
               <rdf:li>dashes</rdf:li>
               <rdf:li>decorative</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>divider</rdf:li>
               <rdf:li>document</rdf:li>
               <rdf:li>elegance</rdf:li>
               <rdf:li>elegant</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>festive</rdf:li>
               <rdf:li>filigree</rdf:li>
               <rdf:li>floral</rdf:li>
               <rdf:li>flourish</rdf:li>
               <rdf:li>foliate</rdf:li>
               <rdf:li>frame</rdf:li>
               <rdf:li>greeting</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>invitation</rdf:li>
               <rdf:li>label</rdf:li>
               <rdf:li>menu</rdf:li>
               <rdf:li>ornamental</rdf:li>
               <rdf:li>ornate</rdf:li>
               <rdf:li>page</rdf:li>
               <rdf:li>panel</rdf:li>
               <rdf:li>retro</rdf:li>
               <rdf:li>ruler</rdf:li>
               <rdf:li>scroll</rdf:li>
               <rdf:li>style</rdf:li>
               <rdf:li>swash</rdf:li>
               <rdf:li>swirl</rdf:li>
               <rdf:li>type</rdf:li>
               <rdf:li>typographic</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>victorian</rdf:li>
               <rdf:li>vignette</rdf:li>
               <rdf:li>vintage</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2017-02-19T15:36:07+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-02-19T15:36:07+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-02-19T15:36:07+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A80ZW2uxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvV/yg0T&#xA;8vLzUrCaa/vH1+FbqW5s3tYngWNLSU+pECZS7xsQ6bElh9juMDVTyAHYcO3Xz/H62yACSebbXyXJ&#xA;NNc6hqWqQ+ZJLlvrtqdKtrZVi9NSh+rpcKiE+0hr3UdTbiM+QA4ff+xBpjn1Xyd/1dNR/wC4fB/2&#xA;W5dc+4fP9jHZ31Xyd/1dNR/7h8H/AGW43PuHz/Yuzvqvk7/q6aj/ANw+D/stxufcPn+xdnC18m13&#xA;1TUad/8AcfB/2W4Ln3D5/sXZ6n5c8t/k7LZ6x+jb06k0Yh9OW+hT10ia3YztFE9xahuElDy41Vvh&#xA;+IGpwsmTNYsV7v7C2ARVNa8t/k1+gtElvLp9PtnuY40voI4Rdz2X1bl6ssUc0p+OWhaRouQJ48B1&#xA;wQyZuI1v912pEXlUtp5KEriPVdRaMMeDHT4Kla7f8fuZwM+4fP8AY17Lfqvk7/q6aj/3D4P+y3Dc&#xA;+4fP9i7O+q+Tv+rpqP8A3D4P+y3G59w+f7F2d9V8nf8AV01H/uHwf9luNz7h8/2Lsm/l6x8gNJK8&#xA;mq6mdTjaE6VCunW7rJP6q/C0TXMiybfssyD3P2TXklk7hXXf9iRTN/zN0fyAbWx1HWL+/tdbudLi&#xA;e3ii0+C3aadZ5hK1xbq0YQqaIByACqOLSZjaeeSyABw33/j8dzOQDyfQrPTLzV7W11S+/Rmnyvxu&#xA;L/02m9JaH4vTWjNvtmdMkCwLLWGcecvJf5e6YbQad5gIgkiRo7owvci5DRqzTAxcUio7MnpH4lpv&#xA;1zGw5skruLIxDGf0L5R/6mT/AKcpv65dxz/m/aig79C+Uf8AqZP+nKb+uPHP+b9q0HfoXyj/ANTJ&#xA;/wBOU39ceOf837VoO/QvlH/qZP8Apym/rjxz/m/atB36F8o/9TJ/05Tf1x45/wA37VoMhuPymjXS&#xA;YtQtddgujcSCG1hSJ/3khDMEEoLRBmVGKqWq3bbfKhqt6ITwK9n+T8F5qN9aQ66sQgIez9e1mSSa&#xA;DksZleOtYB6sgRRJTl1GA6ugDX2rwMbn8veU4JnibzMrMhoWjtJXU+4ZWIOXDJM/w/aih3qf6F8o&#xA;/wDUyf8ATlN/XHjn/N+1aDv0L5R/6mT/AKcpv648c/5v2rQd+hfKP/Uyf9OU39ceOf8AN+1aDv0L&#xA;5R/6mT/pym/rjxz/AJv2rQTjyr5V8k3+sxW0+tm8Vyo+rLby2xYF1Vj67EpFwQs/Jxx2yvLlmBdJ&#xA;ACU+e9D8r6NrTWvlzW/03ZUJab0jH6bBiPT5/Zl235rscswzlKNyHCUSAHJjmXMXYqvhmmglWWGR&#xA;opUNUkQlWB8QRuMBFq1JJJLI0kjF5HJZ3YksSepJOKrcKuxV2KuxV2KuxV2KuxV2KuxVwJBqOuKq&#xA;tzdXV1J6tzM88tAOcjF2oOgqxJwAAclUsKuxV2KuxV2KuxV2Ksu8l/mJqHl0iCeMahpoZGW0n/eK&#xA;gVi5SMNUIsjEF+NKkA9qHHzYBPyLKMqZD+Y35uPql5dW/l4fVbV5ef6RQNFcvxX0qhwVZecSojjv&#xA;T3yrT6XhFyZSn3PMMzWt2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kpvo3lLzFrML3Gn2&#xA;bPaxnjJdyMkFurUrxM8zRxBqduVcrnljHmUgEr7ryZ5ltlDNZGUNUr9XkjuKgbkj0WkqB3PQYBmi&#xA;eq8JXr5YRtFbUUvomeNOc1uKExdaCRuXwlqcV23Yge+PieqqWkiy1DsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVZ1f6jpXl+zTTtK0Oz1F4EhXV9Wv4zcM91PF6hhiHIJEifE&#xA;qlRybjWuYsYmZskjuAZ3SCTypbz+c9K0y4hksLXVVt7iW1QkyW8U682AMnIgBfiXnU8acidzkvFq&#xA;BI3pFbrOf5Xf741z/kbaf9U8P73+j9q7O5/ld/vjXP8Akbaf9U8f3v8AR+1dm0l/K1XVvq+ttQg8&#xA;TLaUNOx/d41l/o/auzNLLzH+VmrXqyxeXJ45y4R7e3htZGCUO6QMr8wzH4+I5IB8HHMY48sR9X3s&#xA;rCRec9L8pQ639eWGWx0qJeQ0+SNLW7uWrVYo4F5NEnjNIq7dAzD4rcMp8Ncz+PxSJAJTpOq2eqX3&#xA;ra0guIoGiitdPVuMUFozH1vq0XJAzoAoVampJZg2+TlExHpQCybU7T8r9NjmnK6rBHLCENmJbdGn&#xA;mYni6QOnqoIwQ4dwoqKLXplMTlPcyNJDd615DvIo4bubzHcwxf3Uct1buq9fshkIHXLRDIOXD8mN&#xA;hC8/yu/3xrn/ACNtP+qeS/e/0ftXZ3P8rv8AfGuf8jbT/qnj+9/o/auy+68p6fL5u0zS9L+sSWOp&#xA;wW1zbpMyeu4niEhiVlUJzLVRdvtYBlPASeYWt0do2taNfTDS9c8tWdro8kqWbXtpHJFd2csvIRv6&#xA;rOzSleJLJJXkB2yM4Ebxkb+wpBYTd27W11NbsQzQu0bMu4JQkVH3Zkg2LYPYfy18t+QVs7zVrHV3&#xA;1HU7bS5Jbi1uNMWcW1w08IhCQyFxKz/FFRSahj8SGma/UZMlgEUL722IDDdc0XyAkqSfp+6ivpWl&#xA;a/sl0v0hby+ow9IRmZOHHpxBNPwzIhPJ3be9gQEs/Rfkf/q/3f8A3Dh/2U5Pin3D5/sRQd+i/I//&#xA;AFf7v/uHD/spx4p9w+f7FoO/Rfkf/q/3f/cOH/ZTjxT7h8/2LQVYNI8hO9JfMl3EtPtfozlv4UFz&#xA;gM8n80fP9iaCI/QP5bf9Tbd/9wk/9lWDjyfzR8/2LQ73foH8tv8Aqbbv/uEn/sqx48n80fP9i0O9&#xA;RuNG/L6ML6Pma7mJ+0P0Xxp991hE8n80fP8AYtBQ/Rfkf/q/3f8A3Dh/2U4eKfcPn+xFB36L8j/9&#xA;X+7/AO4cP+ynHin3D5/sWg79F+R/+r/d/wDcOH/ZTjxT7h8/2LQRmlaJ+XM96kd95mu7a2KuXmOn&#xA;dCEJX7M8h3an7P3dcjKeQDaI+aQA9Cv/ACz5FvfIWl3mv6m+kx21y1qt1HpC2s1DZiSCN405SSCV&#xA;VEvqlmDVp8Na5iRyTGQiIv8AzvNnQrd4rdJbpcypbSNNbqxEUrr6bMoOzFKvxqO1TmyHLdqUsKux&#xA;Vl3lrzFb2sqXiaxd6DrMUYha8hi+sQXESUCCROSsrKFA+ywNAdm3OPkx3tQkGQKJ1LzTolil9caZ&#xA;dXet+ZdUR4rzzBfJ6IiilUpKttFzkbm6HgZHbZahVFcEccjV0IjoFJYRmSxdirsVdirsVdirsVdi&#xA;rsVdirLdH8w6Fd6Xa6V5hNxazaaSdG12xAee3VnMnpSxs0fqRiQl04urISadaZjzxyBuPXmCyB70&#xA;Z5i80wXbRXl55hvPMeo2tTp6SQfV4IX2AmkLOS7jiDxCb0HJiBQxx4q2EREJJYOSSSSak7knMpgi&#xA;dO1TU9NuPrOnXc1lccSnrW8jxPxbqvJCpocjKIOxFqChmZmYsxJYmpJ3JJwq1hV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxVFXWrapd21va3V5PcWtoONpBLI7xxKe0asSEHyyIiAbATaFySHYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FU+t&#xA;fIPna6099Rt9CvpLJAreuIJOLBiFBTar7t+zXKjngDVi08JT26/KfXx5cTVLWx1EXsUcct3p1zZP&#xA;GxSVuAkt2QyeoA+zKwVwPipx3yoaqPFRIr3suA0x3/BfnH/qxaj/ANIk/wDzRl3jQ7x82NF3+C/O&#xA;P/Vi1H/pEn/5ox8aHePmtF3+C/OP/Vi1H/pEn/5ox8aHePmtF3+C/OP/AFYtR/6RJ/8AmjHxod4+&#xA;a0UM/l/WotRTTbmzltL115iG7H1YhKFubGb0wqcQTyY0ph8SNWDstIq48m+ZYp4oYrF70zxtNBJY&#xA;Fb2N41YKzK9sZV+FiA29VJoaZEZY99e/ZaLX+C/OP/Vi1H/pEn/5ow+NDvHzWi7/AAX5x/6sWo/9&#xA;Ik//ADRj40O8fNaLv8F+cf8Aqxaj/wBIk/8AzRj40O8fNaLv8F+cf+rFqP8A0iT/APNGPjQ7x81o&#xA;sh8vflRr9/YTX2oWOpQKrtDaWdvZPLczSInqMSshhWONVI+Jm3PwqCcpyaqINAj5shApMPy989mx&#xA;a+Hl/UDbIxR3+ry1BABNU48gKN9qlMs8eF1xBjwlj5Rw/Aqedacab18KZahltl5L06XTprq5vbyB&#xA;bVljvbyOx9ayt5WPHhLKJhLxDfCzrCQD05VByg5jdAD57suFjmraXdaVqM9hdcTNAQOcZ5I6sAyS&#xA;I37SOhDKe4OXRkJCwghCZJDsVdiqvZWN7fXSWljbyXV1KaRQQo0kjHrRVUEnImQAsqrS6LrMN++n&#xA;S2FxHqEf95ZvE6zLtXeMjkPuxExV3smlE2F8FhY28vG5NLduDUkNaUTb4t/DHiCFbU9F1jSpUh1S&#xA;wuLCWReaR3UTwsy/zAOFJGMZiXI2khBZJDsVdiraI7uqIpZ2ICqBUknoAMCsyfyDZ29ncyXV7dyS&#xA;6e3p6nJY2QuLS1lP+6nnaeEuyU/eemjBeoLZj+OSdgN+VncsuFiV5ayWly8EhBK0KuteLKwDI61A&#xA;PFlIYbdMyAbDFRwq7FU1HmvzQNPfThq97+j3Cq1mbiUwkKwZf3Zbjsyg9Mr8KN3QtNlN778wr+by&#xA;6mj2wuEd4oob2+uLuS5keOBuaxQghFgi9T4yoBNQPioMrjgHFZ+5PFsxv9I6h/y1Tf8AIxv65dwh&#xA;i79I6h/y1Tf8jG/rjwhXfpHUP+Wqb/kY39ceEK79I6h/y1Tf8jG/rjwhWYaLrOiX1tA+qTxNfW1s&#xA;9hdWuoGYQ3dqZDLG0VxCsjwzxMafEOJCjfqDjzhIHblz26fsZgpLrWpJBFFp+n3SPDDLJOZLQSpC&#xA;rSpFGUjMoSRqLAvJiBybxoCbYRvcsSUp/SOof8tU3/Ixv65PhCHfpHUP+Wqb/kY39ceEK79I6h/y&#xA;1Tf8jG/rjwhXfpHUP+Wqb/kY39ceEKyTy1+YF9pNlLY3IuLm3MjT201vdSWl1BK6elIY5lD/AASI&#xA;AHRlINB0ynJgEjY+62QklNv5s8021m1lbaxewWkjtJJBHcSojOwClmVWAJooG+WHFEmyAiyliyyL&#xA;KJQx9QNzDHc8ga13ydIZFq3mbSbn17rT7O4sr+8jaKeM3IktI0lYvMsEfpq6q7MSFZyFqepoRVHG&#xA;RsTY+1kSs/xZYyRwi88uabfXEMMUBuppNSWR1gjWJOQivIo6hEA+FRj4R6SI+X6ltr/E+if9SjpP&#xA;/I3Vv+y/Hw5fzj/sf1Lfk7/E+if9SjpP/I3Vv+y/Hw5fzj/sf1Lfk7/E+if9SjpP/I3Vv+y/Hw5f&#xA;zj/sf1LfkmekeZtDntdS00WVn5Yk1C3EKataHUJacZUkMUwknu3EUgSjGNOXTqtRkJY5Ag2ZV02/&#xA;YoLNPJv5k+UvLmnNo15qMuoyJBbouqRxXAhpDcvcehGedtd8FD0WoUElqrx2ONl085niAry+HxDM&#xA;SAV/+VueS/8ADttp8EUumS3DOTDZrNJFYc4rmFWT1pKVha4WVfRVakdtsH5WfFfP9PL8brximCya&#xA;1omkeXzpTy2nm55rsXaLKNQitrUBGVyjcrCYyTFhzH2PhHU9MrglKV7w28t/vYXQ70r/AMT6J/1K&#xA;Ok/8jdW/7L8n4cv5x/2P6lvyd/ifRP8AqUdJ/wCRurf9l+Phy/nH/Y/qW/J3+J9E/wCpR0n/AJG6&#xA;t/2X4+HL+cf9j+pb8lS2836VbXEVxD5T0lJoXWSNvU1U0ZDVTQ3xHUYDiJ/iP+x/Ut+SH07XbAj0&#xA;9XiupYY7iS8txZTrbssswQS7vHN9oRJQjcU79pSgelIBS/WdRXUdSlu0gS1ibikNtHUrHFEgjjSp&#xA;3biiAFjueuShGhSkoLJodirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVVfqt1/vl/wDgT/TArvqt1/vl/wDgT/TFXfVbr/fL/wDAn+mKu+q3&#xA;X++X/wCBP9MVd9Vuv98v/wACf6Yq76rdf75f/gT/AExV31W6/wB8v/wJ/pirvqt1/vl/+BP9MVd9&#xA;Vuv98v8A8Cf6Yq76rdf75f8A4E/0xV31W6/3y/8AwJ/pirvqt1/vl/8AgT/TFXfVbr/fL/8AAn+m&#xA;Ku+q3X++X/4E/wBMVd9Vuv8AfL/8Cf6Yq76rdf75f/gT/TFXfVbr/fL/APAn+mKu+q3X++X/AOBP&#xA;9MVd9Vuv98v/AMCf6Yq76rdf75f/AIE/0xV31W6/3y//AAJ/pirvqt1/vl/+BP8ATFXfVbr/AHy/&#xA;/An+mKu+q3X++X/4E/0xV31W6/3y/wDwJ/pirvqt1/vl/wDgT/TFXfVbr/fL/wDAn+mKu+q3X++X&#xA;/wCBP9MVd9Vuv98v/wACf6Yq76rdf75f/gT/AExV31W6/wB8v/wJ/pirvqt1/vl/+BP9MVek4GTs&#xA;VdirsVdirsVTvyr5aXX57uE3iWZtLdrpmkRnBjjpzpx3qKg0plObNwAbXZpkBaPt/I0N9p81/per&#xA;w3sFo6i+RY5UlijY09T03ALKOppkDqeE1IVfJPC3rHkjT9Kv7rTbnXYF1C1j5mFoZlUkxiRV9SnA&#xA;cgwG564MeoMgCI7FTGnL5HtLeOwXWNYi0y81KJJ7a3eGV1EchohklACpXv4d8fzBN8MbAXhbtvy9&#xA;vb3TrS7066S8kvbp7OCJEZRyjqXcu2wQIvKtMTqgCQRVC14UPdeWNDiguxF5itp7+zRne3EUqxuU&#xA;+0sUzAK58Nt8lHNIkek0UU1qPki+tPLFl5jjlFxp92aS8VIeEklRyG+xYEV+XjjDUAzMOoUx2tL/&#xA;ADBoq6ReR2wuBcGSGKfmFKALMgkUbk/ssK5ZiycYukEUlmWIZNF5PshoFlrV3q8drb3zvHGjQSuw&#xA;eMkMDw5eHXMc5zxmIjdMuHZdbeS7e4g1i4h1WKWHR0jlkdI3IkjlXkpWpUhgaqytQg4DqCDEV9S8&#xA;KC8qeWf8Q3lxardLavBA1wWdGcFI6cvs71FcnmzeGAatQLVF8t6VNJaJZ61FctdXKWpQQyxuhlrx&#xA;fjIF5LUUPHpXB4shdxqha0iNY8halpvmey0EypPJf+mbe5QH0ysjFSx9k4mvtkcepEoGXcpjvSN/&#xA;5Vuf8R3GhHVIhPb2v1t5vTf0+FAxA3qTxIOR/N+jirrSeHekrXy3pMz2iWetxXDXVylqUEMqMpkB&#xA;4vxcLyUMKHj0rlniyF3HkLRSLufy+vbTzUPL97cpA0sbS215wZopFVC+3Qj7LD5jIDVAw4wE8O9L&#xA;tL8j2Gow3EkGuwFrS0N9doIpW9OEKGNWWqlwpFVUmh26jGeoMSLjzNKIrLfyRbS291qP6Yh/Qdok&#xA;Rk1FIpXPOUlRH6QHMMpHxcqdQe+E6gggcPqPReFJ9b0uxsHtzZajHqUFxH6qyRq0bL8RTi6PurVU&#xA;7fTluOZldimJCW5Yh2KuxV2KuxV2KuxV2KuxV2KuxV2Ksw/LT6st9qz3N3bWaSabcW8b3M0cIaWY&#xA;AIo5spPQ1I6d+2YmruhQJ9QZwTDyx9S8tWOpJc6haXGpaxELC2tre4jkjRJDSSWaZW9JAAdqtkM1&#xA;5CKBqO/JI2TbzpPeavrWqQ22uaSugXiwIXe5tTIFjEUjlQh9ViJIuhO/3ZVpwIRFxlxDyKZbqmh3&#xA;95aJZWWo6vo+seVVii9YXckLSwL6Y5IsZ/eclaoUEHbw7DJEGyIyjPyUH5IvQfMnljR9ItTHcwrp&#xA;z6hd0iE0bXENrcclikMQYybfDUcagdchlxTnI7b0PdaQQGN6B5b0PSLu/m1nUNKvdKaCT6lMJkld&#xA;5R/dssScpB1+IU+/MnLllMDhEhJiAArWPmO00m20C1vZYbrRr2way1i1jmjlZOc8jqzJGzMrIsgO&#xA;48R16RliMjIjaQNj5LdMe/MV9PPmZ00+5S8tIbe2hjuI3V1YRQqn2kqK7b5kaW+DcUbP3sZc2M5k&#xA;MXpunX15F5D0S10zVNOt7+KeaW4iubm0BWN2LJyWUkj5dc10og5ZGQlXuLYOSnolnBb6d5stp9W0&#xA;1rrU4YhEVu4FjaZi0jojM+4TmBy6V27HDkkSYECVDyKjq15C0y30DVJbu61jTRJPZ3MSql3bsqOf&#xA;T9PkxfiSxrtv03x1MzONCMuY6FYikH9X1K4v9Hu9W1fSnazu4vTSG5tQ3AyCSRn9NljVUWPr3rTc&#xA;5OwBIREtx3FCc6jr+lSaPezNdwNr2nXN7ZaVxmiPOHUXBWYSBuPGON2Fa0XvTKYYpcQFekgE/BkS&#xA;iludOH5i3Wprqlgtq2menDcG6tynreksQQ/H15Anp0yNHwRGjfF3FerHfS1Se80e51fV9LcWV5G0&#xA;UcNza8+LyK0jP6TLGqqsVan5eGX3ECQjGW47ixTvTvMmj3t5qWn6zdQrPpU15c6Hf+rG0bxTq4MH&#xA;qBipqHBUV9v2aZTPFIAGI+qrH6WQLG/y7e3jtPMgnube3N1pc9pbi4nhhLzSL8KqJGXr49MydVdx&#xA;oHaQPJjHq7yNPrdlZ3Vxo+s2VrctKIptLvJIkWeMLXkPV+E7tTYjHUiJIEokjvCxWfmRdaFcXOnP&#xA;Yparqfof7l/0fQ2vrEgjgy7MetSK9t8dIJAG7rpfNZUw7Mtg7FXYq7FXYq7FWK/40l/5ZV/4M/0w&#xA;0i3f40l/5ZV/4M/0xpbd/jSX/llX/gz/AExpbd/jSX/llX/gz/TGlt3+NJf+WVf+DP8ATGlt3+NJ&#xA;f+WVf+DP9MaW3f40l/5ZV/4M/wBMaW3f40l/5ZV/4M/0xpbd/jSX/llX/gz/AExpbd/jSX/llX/g&#xA;z/TGlt3+NJf+WVf+DP8ATGlt3+NJf+WVf+DP9MaW3f40l/5ZV/4M/wBMaW3f40l/5ZV/4M/0xpbd&#xA;/jSX/llX/gz/AExpbd/jSX/llX/gz/TGlt3+NJf+WVf+DP8ATGlt3+NJf+WVf+DP9MaW3f40l/5Z&#xA;V/4M/wBMaW3f40l/5ZV/4M/0xpbd/jSX/llX/gz/AExpbd/jSX/llX/gz/TGlt3+NJf+WVf+DP8A&#xA;TGlt3+NJf+WVf+DP9MaW3f40l/5ZV/4M/wBMaW3f40l/5ZV/4M/0xpbd/jSX/llX/gz/AExpbd/j&#xA;SX/llX/gz/TGlt3+NJf+WVf+DP8ATGlt3+NJf+WVf+DP9MaW3f40l/5ZV/4M/wBMaW3f40l/5ZV/&#xA;4M/0xpbY3hQ7FXYq7FXYq7FXYq7FWyCCQRQjYg4q1irsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirgCTQdcVepeSfy60y3ig1DzSr1vJY4bO1VXdRzQN&#xA;L66hCVKRypJy+yKMCedBmDm1BO0WyMe9NPzD8jaTr2qape6F+61b6168sLEJDJDdSEiQHj8TPPMs&#xA;YKsaUPPiBXIYMxiAJckyjbxplZWKsCrKaMp2II7HNg1NYVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVZJ5Z873GgaZqOnx6Vpt8mooUee9tlmljBp9hyRttWhqK75Tkw8R&#xA;BsimQlSprXn661S4infR9JtjFBHBxgs4wGEYoGPLlucEMAj1PzUyQH+J5/8Aq36d/wBIkX9Mn4fm&#xA;fmi3f4nn/wCrfp3/AEiRf0x8PzPzW3f4nn/6t+nf9IkX9MfD8z81tw8zzV30/T6f8wkX9MfD8z81&#xA;t7JY31t5o8swWulSJMHeOG5WcxGW39Vo3jBLmBGi9QOk0Sr8SKXqBQHXSiYSs/j8dG3mEfPcDy5H&#xA;q7atJbWFs88jGaGMRgXFxTnFbQI7yRRLGrmjj95IrL8J6xA46rf8fj3LyeJXnm2We7nmXT7IrLIz&#xA;qZreGSSjMT8b8V5N4tQVObIYqHMtVqP+J5/+rfp3/SJF/TD4fmfmtu/xPP8A9W/Tv+kSL+mPh+Z+&#xA;a27/ABPP/wBW/Tv+kSL+mPh+Z+a2jdG89XOl6nb6guk6VcNbtyEM1nGUOxG/Hidq1FD1yE8IkKs/&#xA;NIkqaz+YNzqvl1NEfRtJtY0mef63a2ixXFXbkQrg0UdthuKDGGARlxWfmplsxXL2LJZfPd66QL+i&#xA;tIX0IY4OX6OtmZxEoQO7OrEu1NzlIwjvl82XEp/42vv+rbpP/cNtP+qePgjvPzKOJ3+Nr7/q26T/&#xA;ANw20/6p4+CO8/MrxO/xtff9W3Sf+4baf9U8fBHefmV4lkvnC7lUBtO0sAGvwWFsh+9UGEYh3n5r&#xA;al/ief8A6t+nf9IkX9MPh+Z+a2zWz0qWxurzU9Dm1Cztr66W50u40iGSUXFnIa/UllgPKGaLlxeN&#xA;tievRa4xlYAlRrnff3s6TTztp/mPWr3UrS4F68rJCljosUMn6OilQJ6t1FMx+rwwqFfkw35FgaDf&#xA;IYZRiARXv6+7vWQJYHrGuWllfvZaba6fc2lokduLo20b+s8MaxyzBmBJEsis4r2OZMIEizbElCxe&#xA;bLmJiy6dphJFPjsYHH3MpGSOId5+aLVf8bX3/Vt0n/uG2n/VPB4I7z8yvE7/ABtff9W3Sf8AuG2n&#xA;/VPHwR3n5leJ3+Nr7/q26T/3DbT/AKp4+CO8/MrxKtt59v7e5inXS9IZonVwraba0JU1oaID9xwH&#xA;ACOcvmU8TH726e7vJ7uRUSS4keV0iURxguxYhEWgVRXYDplwFCmKjhV2KuxV2KuxV2KuxV2Kplof&#xA;mPWtDuDPpd3JbM9PVRT8D0BA5ofhbjyJWo2O43yE8cZcwkGkb5v856v5n1W6vbtzHBPPJPHZqxMa&#xA;c3Zlr05sqvw5kV4gDoAMjiwiAoKZWkGWodirsVdirsVdirsVdirsVdirsVdirsVTPy9rEWl6jHNc&#xA;wNeWBqLqwErQrMpUgBmAYfCTyFVI26ZXkhxDbYpBZL+anmbTNT8wTQ6KzmwQ1mufrDzC6kYBuZ5K&#xA;myV4Ly5Hb7VKAU6bGYx9XP7mUzuwfMpg7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqmM/l3XrfTk1KfT54rCRV&#xA;kS4eNghRzxV6kfZY7BuhyAyRJq900UuyaHYq7FUZp+j6vqPL9H2NxecPt/V4nl418eANMjKYHM0k&#xA;BWTy/qbabcX5iZVtpUheEqwkPKoZwtPsxtwVz2Z1HfB4gulpbceXfMFsImudMu4FmYLC0sEiB2PQ&#xA;KWUVOIyRPIhaKvN5V1wald2NnaS6ibRypns4pJo3Qn4JUKruki/Eh7jAMsaBJpaU08vao2nXV6YW&#xA;QWkiRyQsrCQ8qh2C0+zG3AP4F18Rh8QXS0pXuha3YwrPe6fc2sD/AGJZoZI0Nd9mYAHETieRWkDk&#xA;0OxV2KpjpvlzXtUhkm06wnu4o6hmhRn3UcmAp9ohTUgdBkJZIx5lIBS7JoXBHKGQKSikKz02BapA&#xA;J9+JwKtwq7FXYq7FU00/yzrV/cWUNtbl2v09aBgQwEQmNuZJOJJjUSIQS1MrlkiLvomkVbeRvNc5&#xA;uj+jpoYrNGkuZ5lKRIimhbmRxI71Hap6AnAc0B15rwlUu/y/83W1qbo6dJPEknoSm2/f8JOHqcGM&#xA;XMVC7tSvH9qhIwDPAmrTwlDTeT/MUMtlDJZskmoBPq4YhBzlLBI3Ziqo54E8Sa4RljvvyRRSbLUO&#xA;xV2KuxVcqOysyqSqULsBsKmgrgVbhV2KuxV6BALHVnv9XmktXuryOWOK5utTht1t1nQx8ZrSQfWJ&#xA;Tbo3GP0Bx2XbamYhuNDfby/Ty382fNK9T8969Zyxaf5d17UbfR7CGO3thDcTQLIUH7yX01ZePOQs&#xA;wB3AoDk44YneQFlBkeiD/wCVh+f/APqZtV/6Trn/AJryXgY/5o+S8R73f8rD8/8A/Uzar/0nXP8A&#xA;zXj4GP8Amj5LxHvWT+ePNd0ipqGoyamiHlGupBL8ITSvD60s3GtN+OEYYDkK9233I4irnz75gat5&#xA;LdzNrsTotlq4crNDbcXEsCEdEYsvED7I5AbOcHgR5V6e5PEUMvnPzEizrDcRwLdApd+hb28Hro32&#xA;kmMUaGRG7q9Qe+HwYo4irXvnTU3L2tpxj0SKRm07SrmOK7itk5EqEE6OOVPtuAC5qT1wDCOZ+rv5&#xA;J4lQefvMDIbiW6lbWIiiafqYbjLa2/FhJDCVA4K1V4hacRyC05NV8CPw7l4ih4/PHmmBpJLO+NhP&#xA;KazXFjHFZzP3+OW3WKRqnc1brvh8GJ5i/fujiK//AJWH5/8A+pm1X/pOuf8AmvB4GP8Amj5J4j3u&#xA;/wCVh+f/APqZtV/6Trn/AJrx8DH/ADR8l4j3ovS/zH82x6hAdU13VLzTWbhfWrXk7CSBxxkWjuVr&#xA;wJpXvglp4VsAD7lEimMum6Vb6XaT2t5atNp5YWutRajHGRG0jTJI2nfDei4QvQcfh6daEmAkSTY5&#xA;9K/TypNMSudVaTW5tUSKPlLcPcCGVEkj+Ny/FkYcWG9KUy8R9NMbZRZ/mb6Gk6xZvoOmtPqgiVJY&#xA;reKGGIRmprAqfvK9VqwCnehOUnT2QbOzLiSL/FM//Vu07/pDh/plnh+Z+bG3f4pn/wCrdp3/AEhw&#xA;/wBMfD8z81t3+KZ/+rdp3/SHD/THw/M/Nbd/imf/AKt2nf8ASHD/AEx8PzPzW2V6H+YOkiKwsbqF&#xA;bZPRMV1KkMMUCSNd+qD+7jmm9NYwrK0dGSSrKpO+UTwHcj8bfj4MhJkOjfmn5Vn/AElb6hLJZCXT&#xA;rm0sbhbZkPqSIURpZYZZpizAgu1DyIqRlU9NMVW+7ITCqfzX8p2HlmyispprjUkvZbho5bdpVSBk&#xA;oFYTSqiuzABjGxqpbdS5wflZmRvlS8YpJ7v8ydASW2eJXmFysUl4EhjZY2CzIyenOOXKL1AYAk3C&#xA;NaAFviBsGnl+Px89t0cQYN/imf8A6t2nf9IcP9MyfD8z82Fu/wAUz/8AVu07/pDh/pj4fmfmtu/x&#xA;TP8A9W7Tv+kOH+mPh+Z+a27/ABTP/wBW7Tv+kOH+mPh+Z+a2nNv+ZHpeVbrQ30SwaWe4W4iulhiV&#xA;FoFBDwlGDmifC3IFanqDlZ0/qErKeLZjet6xJq1+97Ja2tmXFBBZQJbQqKk7RxgDvl0IcIr70E2g&#xA;Mmh2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxVtFDOqlgoJALGtB7mgJwKzK58keVItKa7j876dLciOJ1thBeCpkdlZa+kX+ELX+7r4&#xA;hRQnHGad1wH7GXCO9KIvL2kO1G8zabGKfaaPUiP+Fs2OWHIf5p+z9aKVf8MaJ/1N2k/8itW/7IMH&#xA;iS/mn/Y/rTXm7/DGif8AU3aT/wAitW/7IMfEl/NP+x/Wtebv8MaJ/wBTdpP/ACK1b/sgx8SX80/7&#xA;H9a15pjpvkjy7cwSSHzZYXN0kkaQ6dbR3SSz8gxKo91BbhWqoA+Fhv48VaEs0h/Cfs/QoiO9l0P5&#xA;e+U4CkaW8t7HcqUs2aVOd2zI7rBA4dI47gMlVcgxlRxoz1VqDnmfL9H7PxyZcIQ035f+WL2K4uLe&#xA;rRReqLeezcRw3TREosUPqG54spHFyS3qNvHVeT4RnkPx+PxzXhDFNR8m+XbVoli856VKzpylBivz&#xA;wcOylQ0FtcKwota1HypQm+OaR/hP2frYmI70J/hjRP8AqbtJ/wCRWrf9kGS8SX80/wCx/Wtebv8A&#xA;DGif9TdpP/IrVv8Asgx8SX80/wCx/Wtebv8ADGif9TdpP/IrVv8Asgx8SX80/wCx/Wtebv8ADGif&#xA;9TdpP/IrVv8Asgx8SX80/wCx/WteaZad5I8qXMAe488aZBIXZeCwXxHFYy4assELbsOP2aeBJ+HI&#xA;SzTH8B+z9aiI72JXcMUNzLFFOl1EjEJcRh1RwP2lEio4B/ylGZANhindtonlR9Ls7m48xiC+nDm5&#xA;sRZzOYOL8UBkBCtzX4tumVGc7I4dveyoOOi+UqGnmSp7A2Uw/jjxz/m/atBD/ojQf+r7D/0j3P8A&#xA;zRkuKXcinfojQf8Aq+w/9I9z/wA0Y8Uu5ad+iNB/6vsP/SPc/wDNGPFLuWlex0Ty3LdRpNrsbRk7&#xA;xpFLGzkCoRZJVWNC5+Hk54r1O2RlOVcloM+sPInlXUnP1yOOyt4pPTaaORo1SRK/6CZTyR2DEK1z&#xA;xIY/Co5UriyzTHLf8c/2MxEL9S8keUdMrDY266hbzKyQXTyhjcsUdmt1nr6MMkbJVbhV4PxKUJWT&#xA;kxzTlz2/H42/YpiGB3HlzysszrF5ptvTB+HnbXfIDwb04pEqP8liPA5lDJL+b9zGh3qf+HvLf/U0&#xA;2n/SNff9UMfEl/NP2frRQ73f4e8t/wDU02n/AEjX3/VDHxJfzT9n61od7v8AD3lv/qabT/pGvv8A&#xA;qhj4kv5p+z9a0O93+HvLf/U02n/SNff9UMfEl/NP2frWh3q1t5b8pu7ifzbbRqscjqVtL1yzqhKp&#xA;RokHxMKVrtgOSf8AN+0Jod7GMvYuxV2KuxV2KuxV2KuxV2Koi21G/tY5o7a5khjuE9KdI3ZQ6Vrx&#xA;YA7jImIPNbW3V7eXcplup3nlIALyMWYhRRak+AwgAclUcKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;qs91dXHp+vM83ooIofUYtwjX7KLU7KK7AYAAFdDd3UCSpBM8STr6c6oxUOlQeLgH4hUVocSAVUsK&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KtqAWAJABPU1oPuwKye98l6db3UkKeatHmRDtK&#xA;r3RDVFf2YGH45SMxI+mX2frZcPmof4Tsf+pl0n/grv8A7JsPin+afs/Winf4Tsf+pl0n/grv/smx&#xA;8U/zT9n61p3+E7H/AKmXSf8Agrv/ALJsfFP80/Z+tad/hOx/6mXSf+Cu/wDsmx8U/wA0/Z+taUrv&#xA;yzbwwNJDrmm3ci0pBFJMrtU02M0MSbdd2GEZL6FaXaf5XtpXUajren6crdAZTcO21aD6uJY1P/GR&#xA;0HicZZD0BK0jpvKOgFC8HmCGGNVB9a99BVJqa0js7i+uBt0/dfOmQGWX838fEAJpLrnTPK6Uit9b&#xA;kmuK0MrWbJaD39T1Gn/5IZMSl3fb+PvRQVv8J2P/AFMuk/8ABXf/AGTYPFP80/Z+tad/hOx/6mXS&#xA;f+Cu/wDsmx8U/wA0/Z+tad/hOx/6mXSf+Cu/+ybHxT/NP2frWnf4Tsf+pl0n/grv/smx8U/zT9n6&#xA;1p3+E7H/AKmXSf8Agrv/ALJsfFP80/Z+taWX3lmxtdKnvl1/TruaF40Syt2nMsgkrVl9SKMUSm/+&#xA;1UxyEmuErSQ5ah2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:465A49FC9FF6E611909E90BD1A7F6E83</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:465A49FC9FF6E611909E90BD1A7F6E83</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D07F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:10+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T14:51:08-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T15:15:38-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0CC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:07:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:44AFDD2C36B1E011BD0CD94C0E61B83E</stEvt:instanceID>
                  <stEvt:when>2011-07-18T16:05:06+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B0EC69194DB1E011948EBC073C4CD6C9</stEvt:instanceID>
                  <stEvt:when>2011-07-18T18:49:11+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B1EC69194DB1E011948EBC073C4CD6C9</stEvt:instanceID>
                  <stEvt:when>2011-07-18T20:35:02+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BB508AB15DB1E011A22F9F688AF13B98</stEvt:instanceID>
                  <stEvt:when>2011-07-18T20:47:58+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0AB4B9B580D7E0118CBF9572801AAC25</stEvt:instanceID>
                  <stEvt:when>2011-09-05T09:34:22+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2133BED63C05E111A403850CE37D292E</stEvt:instanceID>
                  <stEvt:when>2011-11-02T14:24:25+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:338F55205709E1119EDE824AE1D54F0F</stEvt:instanceID>
                  <stEvt:when>2011-11-07T19:42:40+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C92BB23A5909E111B3B4EC4FD0D91375</stEvt:instanceID>
                  <stEvt:when>2011-11-07T19:57:43+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:40F135CA1740E11191A0A2F7B57B40D5</stEvt:instanceID>
                  <stEvt:when>2012-01-16T11:57:51+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:15209096215DE111A9C89799C27F2D77</stEvt:instanceID>
                  <stEvt:when>2012-02-22T10:51:03+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ADEBD7893AB9E111BF2AD3374391AC4E</stEvt:instanceID>
                  <stEvt:when>2012-06-18T15:41:26+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2FEEA44C46B9E111A974D4CE5902285E</stEvt:instanceID>
                  <stEvt:when>2012-06-18T17:05:38+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B90AB6D546B9E111A7EDA8D8D1DB4F7D</stEvt:instanceID>
                  <stEvt:when>2012-06-18T17:09:28+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:50F97E6E71BBE111A56EC1B1C6314FE6</stEvt:instanceID>
                  <stEvt:when>2012-06-21T11:19:25+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F79ACEA5C2D0E111975BEED0CBCD3B5A</stEvt:instanceID>
                  <stEvt:when>2012-07-18T14:23:42+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0DAF232436D2E111BB25BD97AF460D78</stEvt:instanceID>
                  <stEvt:when>2012-07-20T10:42:57+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0EAF232436D2E111BB25BD97AF460D78</stEvt:instanceID>
                  <stEvt:when>2012-07-20T10:53:34+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D7402F1E14D7E111B81AC0148190E4F6</stEvt:instanceID>
                  <stEvt:when>2012-07-26T15:22+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6C2DF2B532F4E611927AF16BAF497FC4</stEvt:instanceID>
                  <stEvt:when>2017-02-16T13:28:51+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:465A49FC9FF6E611909E90BD1A7F6E83</stEvt:instanceID>
                  <stEvt:when>2017-02-19T15:36:07+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:d1b6cf2a-881a-4145-b893-17ba5107dcdb</stRef:instanceID>
            <stRef:documentID>xmp.did:F49EABB99CF6E611B40C92A8F8464979</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>600.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=71 G=152 B=237</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>71</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>237</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=42 G=81 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>42</xmpG:red>
                           <xmpG:green>81</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=180 G=58 B=228</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>180</xmpG:red>
                           <xmpG:green>58</xmpG:green>
                           <xmpG:blue>228</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=214 G=149 B=68</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>214</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>68</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -600 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 600 li
600 600 li
600 0 li
cp
clp
600 600 mo
600 0 li
0 0 li
0 600 li
600 600 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.0862745 .054902 .0313726 rgb
f
55.2383 122.804 mo
55.209 122.841 88.332 122.847 134.279 122.861 cv
135.117 120.644 li
90.0435 120.644 56.1216 120.642 53.3608 120.64 cv
53.5957 120.64 57.2349 134.582 41.8813 140.8 cv
37.6611 142.511 32.9521 142.375 28.8081 140.513 cv
24.3335 138.509 22.1089 135.341 21.5303 130.958 cv
20.3638 122.099 30.9365 114.474 39.0127 119.569 cv
42.9219 122.035 42.6196 127.158 39.6904 130.265 cv
38.2607 131.783 36.1182 132.519 34.042 132.535 cv
32.8755 132.542 31.7686 132.083 30.7935 131.51 cv
29.5293 130.769 29.5942 130.666 29.3564 129.525 cv
29.1953 128.746 28.2271 128.127 28.0684 127.361 cv
28.6982 130.404 31.0205 133.697 34.1724 134.548 cv
39.1938 135.906 43.3887 130.955 43.2031 126.527 cv
43.082 123.607 40.7754 120.017 38.605 118.071 cv
34.8745 114.726 29.2012 115.167 25.3423 117.886 cv
18.1968 122.925 20.9043 131.998 21.2251 132.649 cv
22.0952 134.817 23.4438 136.904 24.8481 138.646 cv
31.3418 146.701 43.5327 145.089 50.2681 138.332 cv
54.3535 134.232 56.0293 128.406 55.2471 122.829 cv
55.2451 122.82 55.2402 122.812 55.2383 122.804 cv
cp
.921569 .854902 .541176 rgb
f
277.008 117.886 mo
273.148 115.167 267.476 114.726 263.745 118.071 cv
261.574 120.017 259.268 123.607 259.147 126.527 cv
258.961 130.955 263.156 135.906 268.178 134.548 cv
271.331 133.697 273.652 130.404 274.282 127.361 cv
274.123 128.127 273.155 128.746 272.993 129.525 cv
272.757 130.666 272.821 130.769 271.556 131.51 cv
270.583 132.083 269.475 132.542 268.308 132.535 cv
266.232 132.519 264.089 131.783 262.66 130.265 cv
259.731 127.158 259.429 122.035 263.337 119.569 cv
271.413 114.474 281.987 122.099 280.821 130.958 cv
280.241 135.341 278.017 138.509 273.543 140.513 cv
269.398 142.375 264.689 142.511 260.469 140.8 cv
245.115 134.582 248.754 120.64 248.989 120.64 cv
246.226 120.642 212.236 120.644 167.094 120.644 cv
167.094 122.88 li
213.113 122.867 247.142 122.841 247.111 122.804 cv
247.11 122.812 247.105 122.82 247.104 122.829 cv
246.32 128.406 247.998 134.232 252.082 138.332 cv
258.818 145.089 271.009 146.701 277.502 138.646 cv
278.907 136.904 280.256 134.817 281.125 132.649 cv
281.446 131.998 284.154 122.925 277.008 117.886 cv
cp
f
198.734 103.764 mo
196.538 103.22 193.582 103.442 191.994 105.032 cv
190.783 106.242 190.521 107.537 191.575 108.658 cv
191.57 108.656 191.564 108.653 191.562 108.65 cv
191.572 108.66 191.582 108.667 191.589 108.677 cv
191.596 108.683 191.599 108.691 191.606 108.697 cv
192.093 109.197 192.611 109.791 193.467 110.025 cv
195.339 110.541 198.676 109.966 198.688 108.109 cv
198.692 107.677 198.444 107.229 198.056 106.838 cv
198.147 106.892 198.234 106.951 198.319 107.015 cv
198.086 106.787 197.855 106.558 197.623 106.328 cv
197.687 106.41 197.734 106.5 197.777 106.587 cv
196.483 105.535 194.182 105.093 193.451 107.06 cv
193.375 107.265 194.218 107.552 194.146 107.748 cv
194.649 106.394 196.523 106.082 197.84 106.724 cv
198.195 107.652 197.612 108.835 196.079 109.303 cv
194.484 109.787 193.043 109.586 191.945 108.908 cv
191.02 107.347 192.282 105.21 194.926 104.49 cv
197.388 103.818 199.8 104.25 201.357 105.419 cv
202.821 107.521 201.529 110.406 198.334 111.888 cv
194.739 113.555 190.666 113.16 187.218 112.148 cv
183.669 111.109 180.463 109.564 176.766 108.718 cv
173.514 107.968 169.825 107.775 166.263 108.42 cv
161.073 109.367 156.856 111.715 153.456 114.556 cv
153.438 114.569 153.421 114.58 153.404 114.593 cv
153.402 114.595 153.403 114.598 153.401 114.601 cv
152.873 115.042 152.362 115.498 151.874 115.96 cv
151.862 115.972 151.866 115.989 151.876 116.005 cv
148.049 120.007 144.673 124.876 138.862 127.797 cv
132.754 130.865 123.262 129.871 121.727 124.798 cv
120.991 122.365 121.869 119.576 124.985 117.71 cv
127.707 116.082 131.776 115.08 134.904 116.117 cv
137.996 117.143 139.469 119.964 136.998 122.232 cv
134.848 124.205 130.539 125.181 128.204 123.449 cv
127.513 122.384 127.466 120.935 129.024 119.99 cv
130.596 119.035 132.834 118.75 134.228 119.341 cv
134.496 119.457 134.993 120.244 134.42 121.486 cv
133.998 122.404 134.35 122.826 134.244 122.826 cv
135.392 122.826 136.768 120.105 134.548 118.964 cv
133.338 118.343 131.139 117.785 128.704 119.084 cv
125.882 120.589 127.101 123.46 129.459 124.479 cv
133.861 126.38 139.884 122.882 138.771 119.478 cv
138.201 117.734 136.267 115.824 133.699 115.293 cv
129.766 114.486 125.004 115.886 122.554 118.371 cv
122.502 118.034 122.366 117.706 122.105 117.382 cv
121.727 116.912 121.231 116.48 120.773 116.047 cv
119.621 114.947 117.572 114.172 115.358 114.785 cv
112.801 115.496 111.409 117.115 112.426 118.765 cv
112.625 119.087 113.06 119.505 113.407 119.761 cv
114.742 120.757 118.857 120.682 118.766 118.654 cv
118.746 118.236 118.566 117.906 118.308 117.598 cv
118.32 117.609 118.333 117.613 118.347 117.623 cv
118.299 117.573 118.25 117.528 118.202 117.478 cv
118.051 117.312 117.879 117.15 117.702 116.979 cv
117.696 116.972 117.688 116.97 117.684 116.964 cv
117.672 116.954 117.662 116.945 117.651 116.933 cv
117.656 116.939 117.659 116.945 117.663 116.949 cv
116.407 115.832 113.481 116.931 114.491 118.304 cv
114.671 118.554 115.003 118.745 115.185 118.992 cv
114.235 117.698 116.472 116.832 117.947 117.417 cv
118.669 119.185 115.105 120.376 113.066 119.296 cv
111.878 117.158 115.404 114.602 118.863 115.384 cv
122.617 116.235 122.042 118.329 121.072 120.558 cv
121.058 120.585 121.072 120.619 121.097 120.656 cv
119.323 125.683 125.585 130.839 133.192 130.275 cv
142.78 129.564 148.051 121.36 152.765 116.49 cv
152.772 116.484 152.775 116.472 152.772 116.461 cv
153.21 116.052 153.669 115.645 154.146 115.247 cv
159.806 111.033 168.803 109.224 175.849 111.414 cv
179.568 112.57 182.498 114.467 183.155 117.367 cv
183.711 119.808 183.004 122.509 180.777 124.745 cv
178.521 127.01 175.107 128.796 171.15 129.083 cv
170.905 129.101 170.651 129.113 170.394 129.12 cv
169.548 129.091 168.617 129.046 167.633 129.005 cv
164.89 128.697 162.255 127.785 161.373 126.079 cv
160.174 123.753 161.007 120.591 164.32 118.812 cv
167.567 117.068 171.795 117.027 174.349 118.828 cv
175.42 120.326 175.138 122.492 172.878 123.742 cv
170.832 124.873 167.8 125.398 166.472 123.908 cv
165.822 123.178 166.487 122.791 167.121 122.896 cv
167.24 122.916 167.015 120.668 167.121 120.675 cv
166.099 120.605 165.077 121.839 165.998 123.539 cv
165.997 123.538 165.994 123.537 165.993 123.535 cv
165.995 123.537 166.096 123.777 166.099 123.777 cv
166.663 124.714 167.733 125.222 169.297 125.335 cv
174.616 125.724 176.886 121.546 174.631 119.031 cv
174.64 119.037 174.651 119.044 174.66 119.051 cv
174.627 119.019 174.595 118.99 174.562 118.958 cv
174.539 118.931 174.517 118.904 174.491 118.878 cv
174.456 118.844 174.417 118.812 174.379 118.777 cv
174.255 118.656 174.132 118.533 174.009 118.414 cv
174.048 118.454 174.083 118.5 174.123 118.542 cv
172.098 116.845 168.46 116.113 165.142 117.422 cv
160.458 119.271 158.982 123.198 161.146 126.066 cv
162.116 127.348 163.596 128.308 165.345 128.93 cv
167.508 129.73 170.229 129.783 171.507 129.744 cv
174.741 129.562 178.014 128.486 180.383 126.446 cv
185.586 121.958 184.946 115.938 179.386 112.591 cv
174.409 109.593 167.303 109.123 161.012 110.916 cv
163.057 110.004 165.285 109.323 167.692 108.992 cv
171.762 108.431 176.085 108.755 179.53 110 cv
183.115 111.296 186.997 113.013 191.139 113.531 cv
193.74 113.857 196.643 113.845 199.028 112.576 cv
200.947 111.554 202.511 110.046 202.681 108.427 cv
202.868 106.639 201.258 104.389 198.734 103.764 cv
cp
f
459.942 122.994 mo
328.038 122.994 li
327.733 121.606 326.501 120.568 325.021 120.568 cv
323.54 120.568 322.308 121.606 322.001 122.994 cv
320.851 122.994 317.151 122.783 316.749 122.842 cv
314.853 122.308 313.577 120.466 313.64 118.427 cv
313.669 117.402 314.341 116.169 315.362 115.835 cv
316.886 115.339 317.835 117.3 317.95 118.427 cv
318.032 119.232 320.606 118.679 320.513 117.741 cv
320.05 113.167 314.177 113.96 311.935 116.608 cv
310.765 117.989 310.835 120.202 311.729 121.688 cv
312.042 122.202 312.413 122.631 312.827 122.994 cv
310.354 122.994 li
310.048 121.606 308.815 120.568 307.335 120.568 cv
305.626 120.568 300.703 123.661 300.703 123.661 cv
300.703 123.661 305.626 126.756 307.335 126.756 cv
308.815 126.756 310.048 125.716 310.354 124.327 cv
313.237 124.327 li
311.384 125.755 310.343 128.013 311.509 130.524 cv
313.376 134.556 319.819 133.634 320.478 129.28 cv
320.671 128.005 318.056 128.36 317.884 129.487 cv
317.435 132.454 314.437 131.081 313.757 129.049 cv
313.052 126.938 314.89 124.521 317.058 124.585 cv
317.435 124.597 320.731 124.327 322.001 124.327 cv
322.308 125.716 323.54 126.756 325.021 126.756 cv
326.501 126.756 327.733 125.716 328.038 124.327 cv
459.942 124.327 li
459.942 122.994 li
cp
f
406.128 122.994 mo
538.03 122.994 li
538.337 121.606 539.569 120.568 541.05 120.568 cv
542.53 120.568 543.763 121.606 544.069 122.994 cv
545.22 122.994 548.919 122.783 549.321 122.842 cv
551.218 122.308 552.491 120.468 552.431 118.427 cv
552.401 117.402 551.728 116.169 550.708 115.835 cv
549.185 115.339 548.233 117.3 548.12 118.427 cv
548.038 119.232 545.462 118.679 545.558 117.741 cv
546.022 113.167 551.892 113.96 554.138 116.61 cv
555.306 117.989 555.237 120.202 554.341 121.688 cv
554.028 122.204 553.657 122.632 553.243 122.994 cv
555.718 122.994 li
556.022 121.606 557.255 120.568 558.735 120.568 cv
560.444 120.568 565.366 123.661 565.366 123.661 cv
565.366 123.661 560.444 126.756 558.735 126.756 cv
557.255 126.756 556.022 125.716 555.718 124.327 cv
552.833 124.327 li
554.687 125.755 555.726 128.014 554.563 130.526 cv
552.694 134.556 546.253 133.634 545.593 129.28 cv
545.399 128.005 548.015 128.36 548.187 129.487 cv
548.636 132.454 551.634 131.081 552.313 129.05 cv
553.019 126.938 551.181 124.521 549.011 124.585 cv
548.636 124.597 545.339 124.327 544.069 124.327 cv
543.763 125.716 542.53 126.756 541.05 126.756 cv
539.569 126.756 538.337 125.716 538.03 124.327 cv
406.128 124.327 li
406.128 122.994 li
cp
f
417.165 207.799 mo
419.619 210.256 419.619 214.255 417.17 216.715 cv
414.718 219.174 410.728 219.176 408.271 216.719 cv
405.818 214.264 405.815 210.26 408.268 207.803 cv
410.72 205.344 414.71 205.342 417.165 207.799 cv
cp
418.338 217.881 mo
421.432 214.779 421.427 209.73 418.33 206.631 cv
415.23 203.531 410.197 203.533 407.1 206.637 cv
404.006 209.741 404.011 214.787 407.108 217.886 cv
410.202 220.986 415.24 220.985 418.338 217.881 cv
cp
f
444.205 216.181 mo
438.082 221.051 435.175 218.58 435.175 218.58 cv
432.865 216.643 435.822 215.094 435.822 215.094 cv
438.255 214.477 436.802 216.608 436.802 216.608 cv
437.384 218.387 439.619 218.131 440.436 217.082 cv
441.456 215.768 440.855 214.018 439.669 213.256 cv
437.998 212.183 435.596 212.229 434.23 213.539 cv
433.685 214.068 433.268 214.661 433.007 215.287 cv
432.728 214.557 432.232 213.871 431.562 213.288 cv
430.132 212.046 427.729 212.123 426.114 213.278 cv
424.966 214.104 424.452 215.883 425.544 217.139 cv
426.413 218.146 428.659 218.287 429.146 216.48 cv
429.146 216.48 427.592 214.429 430.052 214.922 cv
430.052 214.922 433.084 216.314 430.873 218.369 cv
430.873 218.369 428.098 220.982 421.738 216.435 cv
423.082 213.914 423.115 210.875 421.855 208.321 cv
427.931 203.327 430.878 205.765 430.878 205.765 cv
433.219 207.668 430.282 209.258 430.282 209.258 cv
427.861 209.91 429.286 207.762 429.286 207.762 cv
428.674 205.991 426.443 206.277 425.643 207.342 cv
424.639 208.668 425.267 210.41 426.465 211.153 cv
428.151 212.201 430.553 212.12 431.9 210.789 cv
432.414 210.28 432.807 209.709 433.058 209.111 cv
433.335 209.814 433.809 210.479 434.448 211.049 cv
435.857 212.31 438.264 212.27 439.894 211.138 cv
441.049 210.332 441.586 208.559 440.52 207.285 cv
439.664 206.266 437.423 206.092 436.906 207.893 cv
436.906 207.893 438.434 209.967 435.979 209.437 cv
435.979 209.437 432.97 208 435.214 205.977 cv
435.214 205.977 438.03 203.396 444.339 208.063 cv
442.991 210.582 442.952 213.619 444.205 216.181 cv
cp
f
457.83 207.827 mo
460.268 210.299 460.24 214.3 457.775 216.744 cv
455.308 219.185 451.315 219.162 448.876 216.689 cv
446.438 214.219 446.463 210.217 448.929 207.774 cv
451.397 205.33 455.39 205.354 457.83 207.827 cv
cp
458.932 217.917 mo
462.049 214.834 462.076 209.785 459 206.668 cv
455.923 203.549 450.886 203.516 447.774 206.599 cv
444.659 209.682 444.627 214.729 447.703 217.85 cv
450.78 220.97 455.818 221.002 458.932 217.917 cv
cp
f
323.221 211.258 mo
323.196 211.226 361.026 211.208 405.292 211.201 cv
405.292 212.72 li
361.802 212.721 324.358 212.723 321.95 212.725 cv
322.108 212.725 324.573 203.283 314.177 199.072 cv
311.319 197.916 308.131 198.008 305.324 199.267 cv
302.296 200.625 300.788 202.77 300.396 205.737 cv
299.605 211.734 306.767 216.898 312.234 213.449 cv
314.881 211.779 314.676 208.31 312.693 206.205 cv
311.726 205.18 310.274 204.681 308.869 204.668 cv
308.079 204.664 307.33 204.977 306.67 205.363 cv
305.813 205.865 305.856 205.935 305.696 206.708 cv
305.587 207.234 304.932 207.654 304.823 208.172 cv
305.251 206.112 306.823 203.883 308.957 203.307 cv
312.357 202.387 315.198 205.741 315.071 208.738 cv
314.99 210.715 313.428 213.144 311.959 214.464 cv
309.433 216.729 305.592 216.43 302.978 214.588 cv
298.139 211.176 299.973 205.033 300.189 204.592 cv
300.779 203.125 301.693 201.711 302.644 200.533 cv
307.041 195.078 315.294 196.169 319.854 200.744 cv
322.621 203.52 323.756 207.465 323.227 211.243 cv
323.226 211.247 323.223 211.252 323.221 211.258 cv
cp
f
563.093 214.588 mo
560.479 216.43 556.638 216.729 554.111 214.464 cv
552.643 213.144 551.08 210.715 550.999 208.738 cv
550.873 205.741 553.714 202.387 557.113 203.307 cv
559.248 203.883 560.82 206.112 561.246 208.172 cv
561.14 207.654 560.483 207.234 560.374 206.708 cv
560.214 205.935 560.258 205.865 559.401 205.363 cv
558.741 204.977 557.991 204.664 557.202 204.668 cv
555.796 204.681 554.345 205.18 553.377 206.205 cv
551.395 208.31 551.189 211.779 553.837 213.449 cv
559.305 216.898 566.464 211.734 565.673 205.737 cv
565.282 202.77 563.775 200.625 560.745 199.267 cv
557.939 198.008 554.751 197.916 551.894 199.072 cv
541.497 203.283 543.962 212.725 544.12 212.725 cv
541.704 212.723 504.033 212.721 460.374 212.72 cv
460.374 211.201 li
504.813 211.208 542.875 211.226 542.85 211.258 cv
542.848 211.252 542.845 211.247 542.845 211.243 cv
542.314 207.465 543.449 203.52 546.216 200.744 cv
550.776 196.169 559.029 195.078 563.428 200.533 cv
564.377 201.711 565.291 203.125 565.88 204.592 cv
566.098 205.033 567.93 211.176 563.093 214.588 cv
cp
f
156.105 203.007 mo
153.491 201.166 149.65 200.867 147.123 203.13 cv
145.654 204.45 144.091 206.88 144.011 208.857 cv
143.884 211.855 146.726 215.208 150.125 214.289 cv
152.259 213.712 153.832 211.482 154.257 209.422 cv
154.151 209.941 153.495 210.36 153.386 210.888 cv
153.225 211.66 153.269 211.73 152.413 212.232 cv
151.753 212.619 151.003 212.931 150.213 212.926 cv
148.808 212.914 147.356 212.416 146.389 211.389 cv
144.406 209.285 144.201 205.816 146.848 204.146 cv
152.316 200.697 159.475 205.861 158.685 211.858 cv
158.294 214.826 156.787 216.97 153.757 218.328 cv
150.951 219.587 147.763 219.679 144.906 218.523 cv
134.509 214.312 136.672 204.843 136.831 204.843 cv
136.426 204.844 135.314 204.872 133.071 204.873 cv
133.071 206.351 li
134.889 206.347 135.866 206.341 135.861 206.336 cv
135.859 206.341 135.856 206.347 135.856 206.353 cv
135.326 210.128 136.461 214.076 139.227 216.851 cv
143.788 221.425 152.041 222.517 156.439 217.062 cv
157.389 215.884 158.302 214.47 158.892 213.003 cv
159.109 212.561 160.941 206.418 156.105 203.007 cv
cp
f
51.4746 204.655 mo
50.8286 200.006 46.5088 196.339 41.3237 196.339 cv
40.8179 196.339 li
40.8179 198.363 li
41.3237 198.363 li
45.3794 198.363 48.7905 201.137 49.3345 204.772 cv
45.7114 204.772 li
45.2832 203.48 44.0654 202.58 42.6738 202.58 cv
41.2827 202.58 40.0659 203.48 39.6367 204.772 cv
32.4492 204.772 li
32.4492 202.579 li
20.2197 205.758 li
20.2573 206.746 li
32.4492 208.942 li
32.4492 206.797 li
39.6362 206.797 li
40.0645 208.09 41.2813 208.988 42.6738 208.988 cv
44.0654 208.988 45.2832 208.09 45.7114 206.797 cv
49.335 206.797 li
48.793 210.432 45.3818 213.206 41.3237 213.206 cv
40.8179 213.206 li
40.8179 215.232 li
41.3237 215.232 li
46.5098 215.232 50.8291 211.564 51.3735 206.797 cv
136.124 206.797 li
136.226 204.852 li
51.4746 204.655 li
cp
f
269.902 202.579 mo
269.902 204.772 li
262.713 204.772 li
262.284 203.48 261.067 202.582 259.676 202.582 cv
258.284 202.582 257.067 203.48 256.638 204.772 cv
253.016 204.772 li
253.56 201.137 256.97 198.363 261.027 198.363 cv
261.533 198.363 li
261.533 196.34 li
261.027 196.34 li
255.842 196.34 251.521 200.006 250.977 204.772 cv
187.411 204.772 li
162.144 204.772 li
162.144 206.797 li
187.411 206.797 li
250.976 206.797 li
251.521 211.564 255.84 215.23 261.027 215.23 cv
261.533 215.23 li
261.533 213.206 li
261.027 213.206 li
256.969 213.206 253.558 210.432 253.016 206.797 cv
256.638 206.797 li
257.067 208.09 258.284 208.988 259.676 208.988 cv
261.069 208.988 262.286 208.09 262.714 206.797 cv
269.902 206.797 li
269.902 208.939 li
282.094 206.746 li
282.13 205.758 li
269.902 202.579 li
cp
f
437.142 378.393 mo
436.544 378.331 436.19 379.973 436.706 380.026 cv
437.423 380.098 438.673 380.704 438.356 381.676 cv
438.146 382.327 437.358 382.756 436.704 382.776 cv
435.403 382.813 434.229 381.999 433.89 380.792 cv
433.929 380.534 433.792 378.176 433.792 377.442 cv
434.677 377.247 435.341 376.461 435.341 375.518 cv
435.341 374.575 434.677 373.788 433.792 373.592 cv
433.792 370.442 li
432.94 370.442 li
432.94 373.592 li
432.058 373.788 431.394 374.575 431.394 375.518 cv
431.394 376.461 432.058 377.247 432.94 377.442 cv
432.94 378.252 432.771 380.354 432.778 380.594 cv
432.819 381.977 431.276 383.149 429.933 382.698 cv
428.636 382.266 427.759 380.352 429.651 380.067 cv
430.372 379.959 430.597 378.29 429.784 378.415 cv
427.007 378.834 426.419 382.942 428.991 384.133 cv
430.593 384.877 432.032 384.213 432.94 383.03 cv
432.94 384.87 li
432.058 385.065 431.394 385.85 431.394 386.793 cv
431.394 387.885 433.368 391.024 433.368 391.024 cv
433.368 391.024 435.341 387.885 435.341 386.793 cv
435.341 385.85 434.677 385.065 433.792 384.87 cv
433.792 383.293 li
434.022 383.557 434.296 383.795 434.626 383.995 cv
435.573 384.563 436.983 384.608 437.864 383.862 cv
439.552 382.432 440.058 378.688 437.142 378.393 cv
cp
f
435.331 367.961 mo
434.761 369.43 433.878 370.842 432.96 372.022 cv
428.706 377.479 420.722 376.385 416.31 371.809 cv
413.634 369.034 412.536 365.084 413.05 361.309 cv
413.05 361.301 413.056 361.295 413.056 361.292 cv
401.237 361.299 304.37 361.323 304.37 361.323 cv
304.751 359.583 li
304.751 359.583 408.083 359.829 414.282 359.823 cv
414.13 359.823 411.745 369.268 421.804 373.481 cv
424.565 374.639 427.651 374.547 430.366 373.288 cv
433.296 371.928 434.755 369.782 435.132 366.813 cv
435.896 360.813 428.972 355.647 423.683 359.098 cv
421.122 360.77 421.319 364.239 423.239 366.346 cv
424.175 367.374 425.577 367.872 426.937 367.881 cv
427.702 367.887 428.427 367.577 429.065 367.188 cv
429.894 366.688 429.851 366.616 430.007 365.844 cv
430.112 365.315 430.745 364.897 430.851 364.379 cv
430.438 366.438 428.917 368.668 426.851 369.247 cv
423.562 370.165 420.815 366.811 420.937 363.811 cv
421.017 361.834 422.526 359.403 423.95 358.084 cv
426.392 355.817 430.108 356.116 432.636 357.959 cv
437.315 361.372 435.542 367.518 435.331 367.961 cv
cp
f
431.368 367.961 mo
431.937 369.43 432.821 370.842 433.741 372.022 cv
437.995 377.479 445.979 376.385 450.392 371.809 cv
453.065 369.034 454.165 365.084 453.651 361.309 cv
453.651 361.301 453.647 361.295 453.646 361.292 cv
465.462 361.299 562.33 361.323 562.33 361.323 cv
562.238 359.583 li
562.238 359.583 458.616 359.829 452.415 359.823 cv
452.569 359.823 454.952 369.268 444.897 373.481 cv
442.134 374.639 439.05 374.547 436.335 373.288 cv
433.403 371.928 431.946 369.782 431.567 366.813 cv
430.804 360.813 437.729 355.647 443.019 359.098 cv
445.579 360.77 445.382 364.239 443.464 366.346 cv
442.526 367.374 441.122 367.872 439.761 367.881 cv
438.999 367.887 438.274 367.577 437.634 367.188 cv
436.806 366.688 436.851 366.616 436.694 365.844 cv
436.589 365.315 435.954 364.897 435.851 364.379 cv
436.263 366.438 437.784 368.668 439.849 369.247 cv
443.136 370.165 445.884 366.811 445.763 363.811 cv
445.683 361.834 444.173 359.403 442.751 358.084 cv
440.308 355.817 436.591 356.116 434.063 357.959 cv
429.386 361.372 431.159 367.518 431.368 367.961 cv
cp
f
303.909 357.915 mo
302.489 357.915 301.337 359.067 301.337 360.491 cv
301.337 361.913 302.489 363.063 303.909 363.063 cv
305.331 363.063 306.485 361.913 306.485 360.491 cv
306.485 359.067 305.331 357.915 303.909 357.915 cv
cp
f
562.158 357.663 mo
560.734 357.663 559.586 358.813 559.586 360.237 cv
559.586 361.659 560.734 362.809 562.158 362.809 cv
563.58 362.809 564.732 361.659 564.732 360.237 cv
564.732 358.813 563.58 357.663 562.158 357.663 cv
cp
f
44.5381 359.901 mo
44.2163 358.442 42.9194 357.348 41.3628 357.348 cv
39.8062 357.348 38.5112 358.442 38.1875 359.901 cv
37.9297 359.901 37.54 359.891 35.5713 359.875 cv
35.2407 358.43 33.9536 357.348 32.4063 357.348 cv
30.6079 357.348 25.4336 360.602 25.4336 360.602 cv
25.4336 360.602 30.6079 363.856 32.4063 363.856 cv
33.9507 363.856 35.2354 362.778 35.5693 361.336 cv
37.5098 361.317 37.9014 361.303 38.1875 361.303 cv
38.5112 362.762 39.8062 363.856 41.3628 363.856 cv
42.9194 363.856 44.2163 362.762 44.5381 361.303 cv
143.221 361.303 li
143.221 359.901 li
44.5381 359.901 li
cp
f
257.811 359.901 mo
258.133 358.442 259.43 357.348 260.987 357.348 cv
262.543 357.348 263.838 358.442 264.163 359.901 cv
264.42 359.901 264.81 359.891 266.779 359.875 cv
267.108 358.43 268.395 357.348 269.943 357.348 cv
271.742 357.348 276.917 360.602 276.917 360.602 cv
276.917 360.602 271.742 363.856 269.943 363.856 cv
268.399 363.856 267.114 362.778 266.781 361.336 cv
264.839 361.317 264.449 361.303 264.163 361.303 cv
263.838 362.762 262.543 363.856 260.987 363.856 cv
259.43 363.856 258.133 362.762 257.811 361.303 cv
159.128 361.303 li
159.128 359.901 li
257.811 359.901 li
cp
f
142.448 360.553 mo
142.45 360.584 142.453 360.62 142.455 360.655 cv
142.939 360.639 li
142.939 360.61 142.941 360.583 142.941 360.553 cv
143.335 360.553 li
143.334 360.604 143.333 360.653 143.333 360.702 cv
143.333 364.829 146.816 368.188 151.102 368.188 cv
155.386 368.188 158.872 364.829 158.872 360.702 cv
158.872 360.653 158.87 360.604 158.87 360.553 cv
159.261 360.553 li
159.261 360.557 159.262 360.561 159.262 360.565 cv
159.728 360.573 li
159.703 360.61 159.655 360.651 159.594 360.659 cv
159.874 360.637 160.186 360.602 160.538 360.553 cv
160.538 360.553 160.496 360.934 159.766 360.934 cv
159.766 360.934 li
159.759 360.874 159.753 360.809 159.749 360.745 cv
159.267 360.758 li
159.265 361.026 159.248 361.301 159.216 361.573 cv
159.187 361.823 li
159.446 361.831 li
160.626 361.877 166.514 362.178 169.245 363.749 cv
169.194 363.823 li
169.558 364.124 li
169.714 363.989 169.904 363.913 170.104 363.899 cv
170.124 363.899 170.144 363.899 170.162 363.899 cv
170.643 363.899 171.042 364.26 171.072 364.719 cv
171.105 365.202 170.724 365.622 170.222 365.653 cv
170.2 365.655 170.181 365.655 170.161 365.655 cv
169.683 365.655 169.285 365.295 169.252 364.833 cv
169.243 364.708 169.264 364.584 169.311 364.463 cv
169.382 364.288 li
169.222 364.184 li
166.651 362.553 160.521 362.252 159.321 362.208 cv
159.119 362.202 li
159.074 362.391 li
159.059 362.461 159.04 362.53 159.019 362.602 cv
158.904 363.022 li
159.256 362.979 li
159.585 362.94 159.943 362.918 160.317 362.918 cv
163.069 362.918 167.59 364.084 167.991 367.208 cv
168.134 368.327 167.875 369.286 167.239 369.981 cv
166.55 370.729 165.463 371.143 164.18 371.143 cv
164.142 371.143 li
162.512 371.133 160.907 369.772 160.489 368.047 cv
160.336 367.42 160.47 366.729 160.85 366.198 cv
161.089 365.862 161.533 365.442 162.287 365.34 cv
162.351 365.334 162.415 365.329 162.483 365.329 cv
163.119 365.329 163.8 365.696 164.144 366.223 cv
164.33 366.508 164.491 366.963 164.242 367.534 cv
163.897 367.616 163.101 367.862 163.011 368.395 cv
162.945 368.78 163.258 369.157 163.96 369.549 cv
163.985 369.561 li
164.012 369.571 li
164.033 369.577 164.511 369.711 165.083 369.711 cv
165.765 369.711 166.286 369.524 166.632 369.155 cv
166.996 368.768 167.14 368.196 167.06 367.456 cv
167.045 367.307 166.612 363.782 159.085 363.065 cv
158.893 363.047 li
158.833 363.221 li
157.985 365.62 155.985 367.491 153.478 368.227 cv
153.274 368.286 li
153.31 368.489 li
154.548 375.635 158.211 375.823 158.364 375.829 cv
158.42 375.831 158.474 375.833 158.526 375.833 cv
159.335 375.833 159.917 375.594 160.257 375.122 cv
160.911 374.221 160.382 372.821 160.36 372.762 cv
160.352 372.737 li
160.333 372.713 li
159.937 372.141 159.572 371.862 159.218 371.862 cv
158.569 371.862 158.332 372.768 158.265 373.116 cv
158.042 373.223 157.813 373.278 157.586 373.278 cv
157.167 373.278 156.752 373.086 156.419 372.743 cv
156.046 372.354 155.833 371.833 155.868 371.377 cv
155.962 370.122 157.126 369.442 158.174 369.442 cv
158.303 369.442 158.432 369.454 158.553 369.473 cv
160.369 369.764 161.883 371.217 161.999 372.786 cv
162.087 373.991 161.755 375.051 161.063 375.77 cv
160.442 376.409 159.548 376.749 158.478 376.749 cv
158.378 376.749 158.273 376.745 158.169 376.739 cv
157.15 376.682 156.229 376.217 155.439 375.358 cv
153.835 373.618 153.102 370.581 153.226 368.604 cv
153.244 368.293 li
152.929 368.362 li
152.826 368.385 152.725 368.409 152.621 368.426 cv
152.404 368.465 li
152.425 368.678 li
152.499 369.387 153.207 375.68 155.117 378.116 cv
155.234 378.266 li
155.412 378.188 li
155.537 378.131 155.663 378.106 155.791 378.106 cv
156.296 378.106 156.704 378.499 156.704 378.985 cv
156.704 379.469 156.296 379.862 155.791 379.862 cv
155.287 379.862 154.88 379.469 154.88 378.985 cv
154.88 378.79 154.948 378.604 155.076 378.446 cv
154.739 378.116 li
154.667 378.168 li
152.785 375.53 152.107 369.446 152.034 368.745 cv
152.009 368.518 li
151.774 368.536 li
151.571 368.551 151.388 368.561 151.218 368.563 cv
151.204 369.02 li
151.163 368.999 151.112 368.948 151.1 368.881 cv
151.187 370.004 151.528 371.686 152.09 374.456 cv
152.42 376.084 li
153.16 379.741 151.792 382.963 151.264 384.024 cv
150.675 382.999 149.135 379.883 149.818 376.399 cv
150.72 371.799 150.812 369.688 150.816 369.047 cv
150.883 369.04 150.958 369.034 151.029 369.03 cv
151.019 368.565 li
150.731 368.561 150.439 368.543 150.154 368.51 cv
149.896 368.481 li
149.884 368.731 li
149.832 369.866 149.485 375.54 147.841 378.163 cv
147.766 378.112 li
147.451 378.459 li
147.588 378.612 147.668 378.793 147.682 378.987 cv
147.709 379.471 147.328 379.887 146.825 379.917 cv
146.806 379.917 146.787 379.918 146.769 379.918 cv
146.287 379.918 145.889 379.555 145.859 379.092 cv
145.845 378.858 145.926 378.629 146.087 378.456 cv
146.249 378.28 146.472 378.176 146.717 378.163 cv
146.732 378.161 146.75 378.161 146.768 378.161 cv
146.878 378.161 146.99 378.182 147.101 378.223 cv
147.282 378.292 li
147.391 378.135 li
149.093 375.674 149.441 369.766 149.493 368.608 cv
149.501 368.415 li
149.306 368.37 li
149.216 368.35 149.129 368.329 149.04 368.305 cv
148.652 368.204 li
148.694 368.545 li
149.024 371.258 147.793 376.53 144.258 376.934 cv
144.057 376.958 143.856 376.969 143.667 376.969 cv
142.687 376.969 141.849 376.659 141.245 376.069 cv
140.552 375.391 140.177 374.375 140.193 373.206 cv
140.211 371.635 141.631 370.096 143.426 369.704 cv
143.594 369.665 143.769 369.647 143.948 369.647 cv
144.957 369.647 146.063 370.266 146.225 371.45 cv
146.29 371.915 146.092 372.481 145.719 372.889 cv
145.392 373.249 144.975 373.448 144.544 373.448 cv
144.345 373.448 144.144 373.405 143.94 373.323 cv
143.85 372.965 143.573 372.122 142.948 372.122 cv
142.583 372.122 142.223 372.422 141.849 373.04 cv
141.835 373.063 li
141.827 373.088 li
141.808 373.147 141.378 374.538 142.045 375.405 cv
142.378 375.836 142.911 376.055 143.628 376.055 cv
143.749 376.055 143.875 376.049 144.004 376.036 cv
144.161 376.024 147.822 375.622 148.606 368.375 cv
148.627 368.194 li
148.446 368.131 li
146.005 367.321 144.085 365.426 143.313 363.065 cv
143.25 362.872 li
143.042 362.905 li
135.592 364.069 135.384 367.61 135.38 367.758 cv
135.348 368.481 135.517 369.032 135.883 369.399 cv
136.213 369.731 136.689 369.899 137.294 369.899 cv
137.953 369.899 138.533 369.696 138.557 369.688 cv
138.583 369.678 li
138.608 369.663 li
139.286 369.231 139.57 368.836 139.481 368.456 cv
139.357 367.928 138.545 367.731 138.195 367.668 cv
137.9 367.094 138.051 366.618 138.236 366.311 cv
138.57 365.76 139.271 365.362 139.903 365.362 cv
139.939 365.362 139.973 365.362 140.006 365.364 cv
140.767 365.42 141.235 365.811 141.495 366.133 cv
141.909 366.641 142.088 367.323 141.977 367.958 cv
141.668 369.706 140.155 371.159 138.529 371.266 cv
138.401 371.274 138.277 371.278 138.152 371.278 cv
136.974 371.278 135.961 370.903 135.297 370.225 cv
134.663 369.575 134.365 368.655 134.433 367.565 cv
134.633 364.465 139.189 362.811 142.402 362.811 cv
142.58 362.811 142.754 362.817 142.918 362.829 cv
143.25 362.85 li
143.144 362.442 li
143.126 362.375 143.107 362.309 143.095 362.241 cv
143.053 362.036 li
142.833 362.055 li
142.096 362.124 135.561 362.78 133.012 364.624 cv
132.857 364.735 li
132.938 364.907 li
132.994 365.024 133.023 365.149 133.023 365.27 cv
133.02 365.756 132.612 366.147 132.108 366.147 cv
131.604 366.145 131.196 365.752 131.198 365.268 cv
131.2 364.784 131.609 364.391 132.112 364.391 cv
132.314 364.391 132.508 364.458 132.672 364.583 cv
133.013 364.26 li
132.958 364.188 li
135.708 362.379 142.029 361.747 142.755 361.678 cv
142.998 361.657 li
142.974 361.424 li
142.958 361.26 142.948 361.081 142.943 360.858 cv
142.485 360.854 li
142.512 360.821 142.557 360.786 142.611 360.78 cv
141.45 360.858 142.448 360.553 142.448 360.553 cv
cp
f
144.898 360.553 mo
144.897 360.604 144.893 360.653 144.893 360.702 cv
144.893 364 147.678 366.682 151.102 366.682 cv
154.526 366.682 157.312 364 157.312 360.702 cv
157.312 360.653 157.308 360.604 157.306 360.553 cv
157.639 360.553 li
157.639 360.604 157.645 360.653 157.645 360.702 cv
157.645 364.176 154.708 367.002 151.102 367.002 cv
147.495 367.002 144.562 364.176 144.562 360.702 cv
144.562 360.653 144.565 360.604 144.566 360.553 cv
144.898 360.553 li
cp
f
142.446 360.651 mo
142.449 360.618 142.453 360.584 142.455 360.551 cv
142.939 360.565 li
142.939 360.594 142.941 360.622 142.941 360.651 cv
143.334 360.651 li
143.333 360.602 143.331 360.551 143.331 360.502 cv
143.331 356.375 146.816 353.016 151.101 353.016 cv
155.386 353.016 158.872 356.375 158.872 360.502 cv
158.872 360.551 158.87 360.602 158.87 360.651 cv
159.26 360.651 li
159.26 360.647 159.261 360.643 159.261 360.639 cv
159.727 360.631 li
159.703 360.594 159.655 360.553 159.594 360.545 cv
159.872 360.567 160.185 360.602 160.537 360.651 cv
160.537 360.651 160.495 360.27 159.766 360.27 cv
159.766 360.27 li
159.759 360.331 159.753 360.395 159.749 360.459 cv
159.266 360.446 li
159.264 360.178 159.247 359.903 159.216 359.631 cv
159.187 359.381 li
159.446 359.374 li
160.625 359.327 166.514 359.028 169.245 357.456 cv
169.194 357.383 li
169.558 357.083 li
169.714 357.215 169.902 357.292 170.102 357.305 cv
170.123 357.305 170.144 357.305 170.162 357.305 cv
170.642 357.305 171.042 356.946 171.072 356.485 cv
171.104 356 170.724 355.583 170.221 355.551 cv
170.2 355.549 170.181 355.549 170.161 355.549 cv
169.682 355.549 169.283 355.909 169.252 356.372 cv
169.242 356.495 169.264 356.62 169.311 356.741 cv
169.382 356.917 li
169.221 357.02 li
166.651 358.651 160.521 358.952 159.32 358.997 cv
159.119 359.002 li
159.074 358.815 li
159.059 358.743 159.04 358.672 159.019 358.604 cv
158.904 358.182 li
159.256 358.225 li
159.585 358.264 159.942 358.284 160.316 358.284 cv
163.069 358.284 167.59 357.12 167.99 353.999 cv
168.134 352.877 167.875 351.918 167.239 351.225 cv
166.55 350.473 165.463 350.061 164.18 350.061 cv
164.141 350.061 li
162.512 350.071 160.907 351.432 160.489 353.157 cv
160.334 353.784 160.47 354.475 160.85 355.008 cv
161.087 355.342 161.533 355.762 162.287 355.864 cv
162.351 355.87 162.415 355.875 162.483 355.875 cv
163.118 355.875 163.8 355.508 164.142 354.983 cv
164.33 354.696 164.491 354.241 164.242 353.67 cv
163.897 353.588 163.1 353.342 163.011 352.809 cv
162.944 352.424 163.256 352.047 163.96 351.657 cv
163.984 351.641 li
164.012 351.635 li
164.031 351.629 164.511 351.493 165.082 351.493 cv
165.765 351.493 166.286 351.68 166.632 352.049 cv
166.996 352.436 167.14 353.008 167.058 353.749 cv
167.045 353.897 166.612 357.422 159.085 358.139 cv
158.893 358.157 li
158.833 357.985 li
157.985 355.584 155.985 353.713 153.478 352.977 cv
153.274 352.918 li
153.31 352.717 li
154.547 345.571 158.211 345.381 158.364 345.375 cv
158.419 345.374 158.473 345.372 158.526 345.372 cv
159.335 345.372 159.916 345.61 160.257 346.083 cv
160.911 346.983 160.381 348.383 160.359 348.442 cv
160.35 348.467 li
160.333 348.491 li
159.936 349.065 159.571 349.342 159.216 349.342 cv
158.569 349.342 158.33 348.436 158.264 348.088 cv
158.042 347.981 157.813 347.928 157.586 347.928 cv
157.167 347.928 156.752 348.116 156.417 348.461 cv
156.045 348.85 155.832 349.372 155.868 349.827 cv
155.962 351.083 157.125 351.762 158.174 351.762 cv
158.303 351.762 158.43 351.75 158.553 351.733 cv
160.369 351.44 161.883 349.985 161.999 348.42 cv
162.087 347.213 161.755 346.155 161.063 345.436 cv
160.442 344.795 159.548 344.456 158.478 344.456 cv
158.377 344.456 158.273 344.459 158.168 344.465 cv
157.15 344.522 156.229 344.987 155.439 345.846 cv
153.835 347.586 153.102 350.624 153.226 352.6 cv
153.242 352.911 li
152.928 352.842 li
152.826 352.819 152.725 352.795 152.62 352.778 cv
152.404 352.737 li
152.425 352.526 li
152.499 351.817 153.207 345.524 155.117 343.088 cv
155.234 342.938 li
155.412 343.016 li
155.535 343.073 155.662 343.1 155.791 343.1 cv
156.295 343.1 156.704 342.706 156.704 342.221 cv
156.704 341.737 156.295 341.342 155.791 341.342 cv
155.287 341.342 154.88 341.737 154.88 342.221 cv
154.88 342.415 154.947 342.6 155.076 342.758 cv
154.738 343.088 li
154.667 343.036 li
152.785 345.674 152.105 351.76 152.032 352.459 cv
152.009 352.688 li
151.773 352.668 li
151.569 352.653 151.388 352.643 151.217 352.641 cv
151.204 352.184 li
151.163 352.208 151.11 352.258 151.1 352.323 cv
151.187 351.2 151.527 349.518 152.09 346.749 cv
152.42 345.12 li
153.16 341.463 151.791 338.239 151.264 337.178 cv
150.675 338.208 149.134 341.321 149.818 344.803 cv
150.72 349.405 150.811 351.516 150.816 352.159 cv
150.882 352.163 150.958 352.17 151.029 352.174 cv
151.019 352.639 li
150.731 352.643 150.438 352.661 150.154 352.694 cv
149.896 352.723 li
149.884 352.473 li
149.832 351.338 149.485 345.667 147.84 343.043 cv
147.765 343.09 li
147.451 342.745 li
147.588 342.592 147.668 342.411 147.68 342.217 cv
147.709 341.733 147.327 341.317 146.825 341.288 cv
146.805 341.288 146.786 341.288 146.769 341.288 cv
146.287 341.288 145.889 341.649 145.858 342.114 cv
145.845 342.348 145.926 342.573 146.087 342.749 cv
146.249 342.924 146.47 343.03 146.717 343.043 cv
146.732 343.043 146.75 343.043 146.768 343.043 cv
146.878 343.043 146.99 343.024 147.101 342.981 cv
147.282 342.913 li
147.389 343.069 li
149.092 345.532 149.44 351.438 149.493 352.596 cv
149.5 352.792 li
149.305 352.833 li
149.216 352.854 149.128 352.877 149.039 352.899 cv
148.651 353 li
148.694 352.659 li
149.024 349.946 147.792 344.674 144.258 344.27 cv
144.057 344.247 143.856 344.235 143.667 344.235 cv
142.686 344.235 141.847 344.547 141.243 345.135 cv
140.552 345.813 140.176 346.829 140.193 347.999 cv
140.211 349.569 141.631 351.108 143.425 351.502 cv
143.594 351.54 143.769 351.557 143.948 351.557 cv
144.957 351.557 146.063 350.936 146.224 349.754 cv
146.288 349.29 146.092 348.723 145.717 348.315 cv
145.392 347.956 144.975 347.756 144.544 347.756 cv
144.345 347.756 144.143 347.799 143.938 347.881 cv
143.85 348.239 143.573 349.081 142.948 349.081 cv
142.583 349.081 142.222 348.782 141.847 348.167 cv
141.835 348.141 li
141.827 348.114 li
141.808 348.057 141.378 346.665 142.044 345.801 cv
142.377 345.368 142.91 345.149 143.627 345.149 cv
143.749 345.149 143.875 345.155 144.004 345.168 cv
144.159 345.182 147.822 345.583 148.606 352.829 cv
148.625 353.01 li
148.446 353.073 li
146.005 353.885 144.085 355.778 143.312 358.141 cv
143.25 358.333 li
143.042 358.301 li
135.591 357.135 135.384 353.594 135.378 353.446 cv
135.348 352.723 135.517 352.174 135.882 351.807 cv
136.212 351.475 136.689 351.305 137.294 351.305 cv
137.951 351.305 138.531 351.508 138.555 351.516 cv
138.583 351.526 li
138.608 351.542 li
139.284 351.973 139.57 352.368 139.479 352.749 cv
139.357 353.276 138.544 353.473 138.194 353.536 cv
137.9 354.11 138.051 354.586 138.235 354.893 cv
138.57 355.444 139.27 355.842 139.901 355.842 cv
139.937 355.842 139.973 355.842 140.005 355.84 cv
140.767 355.784 141.235 355.393 141.495 355.071 cv
141.908 354.563 142.087 353.881 141.977 353.249 cv
141.668 351.499 140.153 350.045 138.529 349.938 cv
138.401 349.93 138.277 349.926 138.152 349.926 cv
136.974 349.926 135.961 350.301 135.297 350.979 cv
134.663 351.629 134.365 352.549 134.431 353.637 cv
134.633 356.739 139.189 358.393 142.402 358.393 cv
142.58 358.393 142.752 358.387 142.918 358.375 cv
143.248 358.356 li
143.144 358.762 li
143.126 358.829 143.106 358.895 143.093 358.963 cv
143.052 359.168 li
142.833 359.149 li
142.096 359.081 135.561 358.424 133.011 356.583 cv
132.857 356.469 li
132.937 356.299 li
132.993 356.18 133.023 356.055 133.023 355.934 cv
133.02 355.45 132.611 355.057 132.107 355.057 cv
131.604 355.057 131.196 355.452 131.198 355.936 cv
131.2 356.42 131.608 356.813 132.112 356.813 cv
132.312 356.813 132.508 356.747 132.671 356.62 cv
133.013 356.946 li
132.958 357.014 li
135.708 358.823 142.028 359.459 142.754 359.526 cv
142.998 359.547 li
142.974 359.78 li
142.956 359.944 142.948 360.124 142.943 360.346 cv
142.483 360.352 li
142.511 360.383 142.555 360.418 142.611 360.426 cv
141.449 360.346 142.446 360.651 142.446 360.651 cv
cp
f
144.898 360.651 mo
144.896 360.602 144.891 360.551 144.891 360.502 cv
144.891 357.204 147.677 354.522 151.101 354.522 cv
154.525 354.522 157.312 357.204 157.312 360.502 cv
157.312 360.551 157.308 360.602 157.306 360.651 cv
157.639 360.651 li
157.639 360.602 157.644 360.551 157.644 360.502 cv
157.644 357.03 154.708 354.202 151.101 354.202 cv
147.495 354.202 144.56 357.03 144.56 360.502 cv
144.56 360.551 144.563 360.602 144.565 360.651 cv
144.898 360.651 li
cp
f
153.856 360.602 mo
153.856 359.092 152.63 357.866 151.12 357.866 cv
149.609 357.866 148.384 359.092 148.384 360.602 cv
148.384 362.114 149.609 363.338 151.12 363.338 cv
152.63 363.338 153.856 362.114 153.856 360.602 cv
cp
f
453.439 438.636 mo
452.977 438.096 452.553 437.511 452.135 436.943 cv
451.62 436.244 450.957 435.754 450.212 435.457 cv
450.954 435.161 451.612 434.676 452.098 433.98 cv
452.511 433.388 452.981 432.749 453.522 432.173 cv
454.335 433.644 455.684 434.717 457.237 435.335 cv
455.686 436.027 454.224 437.133 453.439 438.636 cv
cp
452.899 440.251 mo
452.867 440.465 452.75 440.675 452.736 440.883 cv
452.245 440.885 446.013 440.896 442.922 440.881 cv
443.184 439.66 443.091 438.267 442.409 437.345 cv
441.119 435.593 437.731 435.144 436.955 437.685 cv
436.549 439.015 436.739 441.144 438.383 441.5 cv
438.584 441.542 438.767 441.558 438.937 441.562 cv
438.938 441.575 438.938 441.583 438.938 441.583 cv
440.089 441.587 441.239 441.591 442.387 441.595 cv
440.705 443.826 437.654 444.41 435.327 442.715 cv
434.57 442.168 433.947 441.493 433.443 440.74 cv
434.283 439.059 434.587 437.083 434.58 435.234 cv
434.576 433.365 434.262 431.431 433.433 429.759 cv
433.998 428.746 434.75 427.878 435.749 427.338 cv
438.231 426 440.979 426.943 442.548 429.129 cv
441.523 429.125 440.505 429.119 439.483 429.116 cv
439.214 429.057 438.907 429.066 438.559 429.16 cv
437.046 429.57 436.514 431.294 436.877 432.717 cv
437.48 435.092 440.683 435.652 442.234 433.806 cv
443.116 432.757 443.346 431.219 443.091 429.849 cv
446.345 429.861 449.601 429.875 452.854 429.888 cv
452.879 430.468 453.003 431.051 453.24 431.606 cv
453.262 431.656 453.287 431.701 453.309 431.749 cv
452.863 432.253 452.458 432.798 452.057 433.326 cv
451.525 434.015 450.853 434.494 450.103 434.778 cv
450.195 434.563 450.252 434.327 450.257 434.069 cv
450.269 433.505 450.339 432.812 449.941 432.355 cv
449.357 431.69 447.973 431.451 447.605 432.5 cv
447.453 432.931 447.478 433.443 447.521 433.894 cv
447.51 433.781 447.515 433.668 447.521 433.553 cv
447.639 432.845 448.305 432.317 449.051 432.519 cv
449.674 432.686 450.083 433.121 450.207 433.71 cv
450.074 434.304 449.703 434.766 449.168 435.023 cv
448.992 434.623 448.597 434.345 448.135 434.344 cv
447.675 434.341 447.278 434.613 447.096 435.005 cv
445.858 435 444.621 434.994 443.381 434.988 cv
443.864 433.326 445.639 431.634 447.394 431.555 cv
447.411 431.555 447.391 430.837 447.396 430.837 cv
445.325 430.931 443.501 433 443.295 434.988 cv
443.252 434.988 443.205 434.988 443.162 434.988 cv
443.158 434.988 443.155 435.707 443.159 435.707 cv
443.202 435.707 443.246 435.707 443.291 435.707 cv
443.482 437.699 445.287 439.781 447.359 439.892 cv
447.353 439.89 447.379 439.175 447.362 439.171 cv
446.479 439.126 445.591 438.589 444.94 438.019 cv
444.382 437.531 443.456 436.591 443.313 435.707 cv
444.547 435.709 445.782 435.715 447.015 435.722 cv
447.126 436.236 447.578 436.621 448.125 436.621 cv
448.538 436.624 448.897 436.406 449.099 436.078 cv
449.644 436.323 450.036 436.798 450.169 437.412 cv
450.007 438.027 449.512 438.574 448.828 438.581 cv
448.103 438.583 447.525 438.121 447.512 437.361 cv
447.51 437.23 447.507 437.472 447.506 437.492 cv
447.505 437.654 447.504 437.818 447.506 437.982 cv
447.537 439.832 450.182 439.564 450.217 437.836 cv
450.229 437.406 450.285 436.88 450.127 436.471 cv
450.073 436.323 449.999 436.189 449.917 436.064 cv
450.816 436.351 451.62 436.892 452.179 437.726 cv
452.484 438.185 452.828 438.671 453.208 439.139 cv
453.07 439.491 452.962 439.86 452.899 440.251 cv
cp
442.718 440.881 mo
441.93 440.878 441.141 440.875 440.35 440.872 cv
440.584 440.541 440.716 440.119 440.763 439.662 cv
440.766 439.675 440.768 439.688 440.769 439.702 cv
440.769 439.702 440.769 439.702 440.769 439.703 cv
440.769 439.71 440.771 439.715 440.772 439.722 cv
440.771 439.674 440.771 439.625 440.771 439.578 cv
440.771 439.575 440.771 439.572 440.771 439.568 cv
440.789 439.303 440.778 439.028 440.737 438.751 cv
440.741 438.792 440.741 438.835 440.743 438.876 cv
440.741 438.855 440.737 438.833 440.733 438.81 cv
440.588 438.15 439.936 437.733 439.277 437.879 cv
438.616 438.027 438.201 438.679 438.348 439.339 cv
438.493 440 439.148 440.417 439.804 440.269 cv
440.279 440.166 440.628 439.795 440.729 439.35 cv
440.729 439.384 440.729 439.419 440.733 439.453 cv
440.545 440.206 439.936 440.793 439.175 440.867 cv
439.098 440.867 439.019 440.867 438.941 440.866 cv
438.941 440.866 438.941 440.869 438.941 440.872 cv
438.843 440.867 438.742 440.859 438.639 440.835 cv
437.619 440.616 436.997 439.912 436.835 438.935 cv
437.11 437.201 438.951 436.134 440.661 436.756 cv
442.503 437.429 443.271 439.169 442.718 440.881 cv
cp
433.208 430.196 mo
433.915 431.626 434.276 433.291 434.423 434.74 cv
434.624 436.704 434.222 438.728 433.235 440.406 cv
432.215 438.705 431.804 436.642 432.015 434.644 cv
432.167 433.224 432.522 431.601 433.208 430.196 cv
cp
431.079 442.798 mo
428.74 444.485 425.696 443.887 424.022 441.651 cv
425.172 441.651 426.322 441.651 427.473 441.651 cv
427.473 441.651 427.473 441.642 427.473 441.63 cv
427.645 441.63 427.829 441.611 428.026 441.57 cv
429.671 441.221 429.872 439.093 429.472 437.762 cv
428.706 435.218 425.316 435.653 424.016 437.4 cv
423.331 438.318 423.234 439.712 423.492 440.934 cv
420.399 440.934 414.167 440.898 413.676 440.896 cv
413.663 440.687 413.549 440.476 413.517 440.263 cv
413.459 439.871 413.351 439.501 413.211 439.149 cv
413.595 438.683 413.938 438.199 414.247 437.738 cv
414.809 436.91 415.614 436.371 416.515 436.088 cv
416.434 436.214 416.36 436.345 416.304 436.494 cv
416.144 436.903 416.199 437.427 416.209 437.858 cv
416.238 439.586 418.882 439.863 418.918 438.013 cv
418.924 437.851 418.921 437.688 418.92 437.525 cv
418.92 437.505 418.918 437.263 418.915 437.396 cv
418.898 438.153 418.318 438.613 417.597 438.607 cv
416.91 438.601 416.418 438.051 416.255 437.434 cv
416.396 436.822 416.786 436.349 417.335 436.103 cv
417.534 436.432 417.894 436.654 418.306 436.654 cv
418.85 436.654 419.307 436.269 419.416 435.756 cv
420.65 435.756 421.887 435.756 423.122 435.756 cv
422.975 436.638 422.045 437.577 421.485 438.063 cv
420.83 438.629 419.941 439.165 419.059 439.207 cv
419.04 439.208 419.065 439.923 419.059 439.925 cv
421.129 439.821 422.945 437.748 423.144 435.756 cv
423.188 435.756 423.231 435.756 423.275 435.756 cv
423.282 435.756 423.282 435.038 423.275 435.038 cv
423.231 435.038 423.188 435.038 423.144 435.038 cv
422.945 433.046 421.129 430.973 419.059 430.871 cv
419.065 430.871 419.04 431.587 419.059 431.587 cv
420.812 431.675 422.582 433.375 423.056 435.038 cv
421.817 435.038 420.58 435.038 419.34 435.038 cv
419.162 434.647 418.765 434.373 418.306 434.373 cv
417.845 434.373 417.446 434.652 417.269 435.048 cv
416.733 434.791 416.367 434.328 416.234 433.733 cv
416.36 433.142 416.773 432.711 417.396 432.546 cv
418.145 432.349 418.807 432.878 418.924 433.585 cv
418.928 433.702 418.936 433.816 418.921 433.928 cv
418.968 433.478 418.992 432.965 418.844 432.534 cv
418.479 431.481 417.093 431.715 416.509 432.378 cv
416.109 432.833 416.178 433.527 416.186 434.089 cv
416.19 434.347 416.244 434.584 416.335 434.801 cv
415.587 434.514 414.915 434.033 414.391 433.339 cv
413.988 432.811 413.582 432.264 413.142 431.757 cv
413.162 431.709 413.189 431.666 413.209 431.618 cv
413.451 431.061 413.577 430.478 413.604 429.9 cv
416.859 429.9 420.115 429.9 423.369 429.9 cv
423.107 431.272 423.331 432.808 424.208 433.861 cv
425.754 435.714 428.958 435.166 429.57 432.794 cv
429.938 431.373 429.41 429.648 427.901 429.229 cv
427.555 429.132 427.246 429.125 426.978 429.183 cv
425.957 429.183 424.935 429.183 423.913 429.183 cv
425.49 427.001 428.24 426.07 430.721 427.421 cv
431.688 427.949 432.42 428.785 432.976 429.762 cv
432.177 431.406 431.868 433.301 431.855 435.138 cv
431.841 437.025 432.149 439.048 433.023 440.751 cv
432.513 441.536 431.862 442.234 431.079 442.798 cv
cp
423.694 440.934 mo
423.15 439.219 423.921 437.481 425.769 436.817 cv
427.479 436.202 429.317 437.277 429.586 439.011 cv
429.418 439.99 428.794 440.689 427.773 440.904 cv
427.671 440.926 427.571 440.936 427.473 440.941 cv
427.473 440.936 427.473 440.934 427.473 440.934 cv
427.394 440.934 427.315 440.934 427.237 440.934 cv
426.476 440.856 425.872 440.268 425.684 439.516 cv
425.688 439.48 425.688 439.446 425.688 439.411 cv
425.792 439.857 426.137 440.228 426.61 440.335 cv
427.267 440.483 427.923 440.07 428.07 439.41 cv
428.22 438.751 427.806 438.096 427.149 437.947 cv
426.49 437.798 425.836 438.211 425.688 438.872 cv
425.684 438.896 425.681 438.918 425.677 438.939 cv
425.677 438.896 425.677 438.853 425.684 438.814 cv
425.644 439.088 425.631 439.365 425.648 439.629 cv
425.648 439.632 425.648 439.634 425.648 439.638 cv
425.647 439.688 425.647 439.734 425.647 439.784 cv
425.647 439.777 425.648 439.77 425.648 439.766 cv
425.648 439.763 425.648 439.763 425.648 439.763 cv
425.651 439.75 425.653 439.737 425.656 439.723 cv
425.698 440.181 425.83 440.603 426.063 440.934 cv
425.271 440.934 424.484 440.934 423.694 440.934 cv
cp
412.984 438.644 mo
412.204 437.139 410.748 436.027 409.2 435.328 cv
410.756 434.716 412.106 433.649 412.925 432.181 cv
413.464 432.757 413.935 433.401 414.345 433.996 cv
414.826 434.694 415.483 435.179 416.223 435.478 cv
415.478 435.773 414.813 436.261 414.294 436.958 cv
413.875 437.523 413.451 438.107 412.984 438.644 cv
cp
423.559 429.9 mo
424.365 429.9 425.172 429.9 425.978 429.9 cv
425.759 430.236 425.627 430.652 425.584 431.083 cv
425.583 431.067 425.579 431.048 425.576 431.033 cv
425.576 431.076 425.579 431.119 425.579 431.16 cv
425.556 431.441 425.571 431.725 425.622 431.997 cv
425.627 432.117 425.653 432.236 425.696 432.355 cv
425.926 432.989 426.63 433.316 427.264 433.08 cv
427.898 432.85 428.221 432.145 427.988 431.511 cv
427.757 430.877 427.054 430.551 426.423 430.784 cv
426.059 430.917 425.798 431.207 425.684 431.548 cv
425.683 431.542 425.683 431.534 425.68 431.525 cv
425.653 431.453 425.634 431.378 425.615 431.302 cv
425.865 429.994 427.435 429.611 428.555 430.208 cv
429.953 430.953 429.693 432.585 428.729 433.534 cv
427.734 434.51 426.099 434.401 424.97 433.773 cv
423.566 432.993 423.12 431.343 423.559 429.9 cv
cp
442.898 429.847 mo
443.332 431.292 442.88 432.94 441.475 433.713 cv
440.343 434.336 438.703 434.441 437.714 433.46 cv
436.752 432.507 436.502 430.874 437.901 430.134 cv
439.025 429.543 440.594 429.933 440.836 431.243 cv
440.817 431.318 440.799 431.391 440.771 431.464 cv
440.769 431.47 440.769 431.478 440.768 431.488 cv
440.657 431.144 440.396 430.855 440.032 430.719 cv
439.399 430.485 438.694 430.807 438.461 431.441 cv
438.229 432.075 438.55 432.779 439.184 433.016 cv
439.814 433.25 440.518 432.926 440.753 432.294 cv
440.795 432.175 440.819 432.054 440.829 431.936 cv
440.881 431.666 440.896 431.38 440.875 431.099 cv
440.875 431.056 440.878 431.015 440.878 430.971 cv
440.875 430.99 440.872 431.005 440.87 431.022 cv
440.828 430.589 440.696 430.174 440.481 429.837 cv
441.286 429.841 442.093 429.843 442.898 429.847 cv
cp
464.233 435.247 mo
465.37 434.728 466.354 433.914 467.036 432.752 cv
467.801 431.453 468.119 429.828 467.861 428.32 cv
467.861 428.318 467.861 428.317 467.861 428.316 cv
467.861 428.113 467.816 427.921 467.731 427.753 cv
467.727 427.731 467.723 427.708 467.714 427.687 cv
467.719 427.703 467.721 427.718 467.723 427.736 cv
467.515 427.324 467.089 427.039 466.593 427.035 cv
465.892 427.035 465.32 427.6 465.318 428.304 cv
465.316 429.007 465.883 429.582 466.585 429.583 cv
467.141 429.585 467.614 429.228 467.789 428.729 cv
468.136 430.55 467.061 432.5 465.663 433.635 cv
464.966 434.203 464.172 434.618 463.329 434.89 cv
461.718 434.376 459.929 434.417 458.274 434.939 cv
456.707 434.509 455.116 433.699 454.108 432.416 cv
453.992 432.271 453.875 432.106 453.759 431.929 cv
454.445 431.254 455.232 430.705 456.14 430.494 cv
456.943 430.308 457.884 430.377 458.541 430.931 cv
458.837 431.178 459.231 431.411 459.668 431.586 cv
459.496 432.007 459.392 432.863 460.381 434.159 cv
460.381 434.159 461.541 432.771 460.956 431.892 cv
460.997 431.892 461.037 431.894 461.077 431.894 cv
461.64 433.468 463.916 431.634 463.916 431.634 cv
461.929 430.199 461.218 431.099 461.038 431.434 cv
460.799 431.415 460.563 431.355 460.323 431.267 cv
461.846 430.968 460.888 428.637 460.888 428.637 cv
459.743 429.695 459.691 430.583 459.758 431.013 cv
458.594 430.41 457.415 429.421 456.144 429.777 cv
455.067 430.076 454.237 430.738 453.51 431.522 cv
453.198 430.964 452.947 430.326 452.917 429.733 cv
452.917 429.654 452.917 429.56 452.917 429.469 cv
452.924 429.371 452.935 429.271 452.957 429.176 cv
453.144 428.361 453.547 427.699 454.112 427.145 cv
454.189 427.773 454.72 428.261 455.367 428.266 cv
456.071 428.268 456.642 427.701 456.645 426.999 cv
456.65 426.294 456.082 425.72 455.38 425.719 cv
454.981 425.716 454.624 425.899 454.392 426.186 cv
453.519 426.965 452.999 428.037 452.876 429.171 cv
449.555 429.156 446.23 429.146 442.906 429.13 cv
442.88 429.042 442.846 428.956 442.813 428.871 cv
442.812 428.831 442.806 428.792 442.785 428.76 cv
441.076 426.018 437.44 424.98 434.869 427.24 cv
434.18 427.844 433.632 428.553 433.203 429.323 cv
432.784 428.585 432.26 427.91 431.601 427.324 cv
429.035 425.055 425.397 426.078 423.677 428.812 cv
423.658 428.843 423.65 428.882 423.647 428.923 cv
423.614 429.008 423.581 429.093 423.553 429.183 cv
420.23 429.183 416.907 429.183 413.585 429.183 cv
413.466 428.048 412.953 426.974 412.083 426.191 cv
411.851 425.902 411.494 425.719 411.096 425.719 cv
410.394 425.719 409.824 426.288 409.824 426.994 cv
409.824 427.695 410.394 428.266 411.096 428.266 cv
411.743 428.266 412.277 427.78 412.355 427.152 cv
412.918 427.708 413.319 428.371 413.504 429.189 cv
413.527 429.283 413.537 429.381 413.543 429.48 cv
413.543 429.57 413.543 429.666 413.544 429.744 cv
413.512 430.335 413.257 430.973 412.938 431.531 cv
412.218 430.744 411.389 430.078 410.314 429.773 cv
409.043 429.415 407.861 430.4 406.694 430.996 cv
406.764 430.564 406.716 429.676 405.574 428.615 cv
405.574 428.615 404.607 430.944 406.129 431.249 cv
405.893 431.333 405.651 431.393 405.413 431.411 cv
405.236 431.077 404.531 430.173 402.535 431.599 cv
402.535 431.599 404.803 433.445 405.371 431.873 cv
405.413 431.872 405.453 431.872 405.494 431.87 cv
404.905 432.746 406.061 434.138 406.061 434.138 cv
407.056 432.847 406.954 431.99 406.782 431.568 cv
407.221 431.395 407.617 431.165 407.913 430.919 cv
408.573 430.369 409.513 430.303 410.314 430.49 cv
411.225 430.705 412.008 431.259 412.689 431.937 cv
412.574 432.113 412.454 432.277 412.341 432.421 cv
411.328 433.702 409.733 434.503 408.165 434.926 cv
406.512 434.399 404.723 434.35 403.109 434.857 cv
402.269 434.582 401.477 434.164 400.778 433.593 cv
399.387 432.452 398.318 430.498 398.675 428.679 cv
398.848 429.179 399.318 429.539 399.876 429.539 cv
400.579 429.539 401.146 428.966 401.146 428.265 cv
401.146 427.56 400.579 426.992 399.876 426.992 cv
399.381 426.992 398.953 427.274 398.745 427.687 cv
398.747 427.67 398.749 427.653 398.752 427.638 cv
398.747 427.66 398.741 427.683 398.735 427.703 cv
398.651 427.873 398.605 428.062 398.605 428.265 cv
398.605 428.266 398.605 428.268 398.605 428.269 cv
398.34 429.776 398.651 431.402 399.41 432.705 cv
400.088 433.869 401.071 434.687 402.201 435.21 cv
401.477 435.553 400.806 436.018 400.218 436.621 cv
398.942 437.932 398.428 439.76 398.606 441.546 cv
398.603 441.678 398.619 441.806 398.654 441.928 cv
398.66 441.958 398.663 441.992 398.667 442.023 cv
398.663 441.996 398.662 441.968 398.66 441.942 cv
398.8 442.414 399.207 442.779 399.724 442.841 cv
400.423 442.926 401.055 442.426 401.139 441.73 cv
401.223 441.029 400.726 440.397 400.027 440.312 cv
399.399 440.237 398.825 440.634 398.655 441.224 cv
398.374 439.243 399.976 437.275 401.528 436.259 cv
402.009 435.946 402.528 435.714 403.066 435.546 cv
404.414 435.976 405.902 436.048 407.312 435.834 cv
407.603 435.791 407.889 435.73 408.17 435.66 cv
408.336 435.709 408.501 435.762 408.661 435.818 cv
410.253 436.381 411.816 437.474 412.736 438.918 cv
412.05 439.652 411.262 440.268 410.253 440.562 cv
409.027 440.922 407.847 440.097 406.685 439.575 cv
406.863 439.171 407.014 438.296 405.962 436.955 cv
405.962 436.955 404.852 438.318 405.388 439.193 cv
405.313 439.187 405.238 439.184 405.165 439.185 cv
404.523 437.818 402.461 439.53 402.461 439.53 cv
403.989 440.759 404.929 440.046 405.211 439.756 cv
405.451 439.766 405.693 439.809 405.938 439.878 cv
404.593 440.292 405.527 442.485 405.527 442.485 cv
406.624 441.443 406.695 440.575 406.631 440.132 cv
407.099 440.343 407.527 440.616 407.847 440.876 cv
408.514 441.418 409.452 441.478 410.253 441.281 cv
411.341 441.013 412.248 440.259 413.009 439.388 cv
413.457 440.265 413.681 441.291 413.415 442.24 cv
413.211 442.958 412.749 443.546 412.183 444.01 cv
412.164 443.394 411.696 442.864 411.064 442.787 cv
410.367 442.705 409.733 443.203 409.651 443.901 cv
409.567 444.6 410.066 445.234 410.763 445.318 cv
410.966 445.341 411.158 445.317 411.34 445.25 cv
411.338 445.281 411.33 445.303 411.314 445.312 cv
412.835 444.472 413.565 443.167 413.643 441.627 cv
414.173 441.633 420.542 441.651 423.688 441.651 cv
423.751 441.831 423.821 442.001 423.896 442.165 cv
423.901 442.192 423.912 442.217 423.925 442.238 cv
423.935 442.251 423.944 442.263 423.955 442.277 cv
423.987 442.341 424.016 442.404 424.054 442.462 cv
424.038 442.437 424.031 442.408 424.026 442.375 cv
425.91 444.894 429.206 445.105 431.605 443.108 cv
432.279 442.546 432.812 441.875 433.232 441.135 cv
433.643 441.839 434.156 442.481 434.802 443.023 cv
437.188 445.03 440.484 444.833 442.38 442.32 cv
442.377 442.353 442.369 442.383 442.354 442.408 cv
442.387 442.348 442.42 442.285 442.453 442.224 cv
442.461 442.21 442.474 442.198 442.481 442.184 cv
442.497 442.165 442.507 442.138 442.511 442.109 cv
442.59 441.948 442.658 441.777 442.721 441.6 cv
445.869 441.611 452.235 441.619 452.77 441.618 cv
452.838 443.156 453.563 444.462 455.079 445.31 cv
455.064 445.301 455.058 445.279 455.055 445.25 cv
455.235 445.316 455.43 445.341 455.632 445.318 cv
456.33 445.238 456.831 444.605 456.75 443.907 cv
456.67 443.208 456.038 442.707 455.341 442.787 cv
454.711 442.861 454.241 443.389 454.219 444.003 cv
453.652 443.539 453.193 442.949 452.992 442.228 cv
452.731 441.279 452.959 440.254 453.413 439.379 cv
454.168 440.252 455.071 441.01 456.158 441.283 cv
456.96 441.482 457.899 441.427 458.567 440.89 cv
458.886 440.629 459.318 440.36 459.787 440.149 cv
459.721 440.591 459.787 441.461 460.882 442.507 cv
460.882 442.507 461.824 440.318 460.479 439.899 cv
460.724 439.832 460.969 439.789 461.207 439.779 cv
461.49 440.071 462.423 440.787 463.959 439.564 cv
463.959 439.564 461.901 437.845 461.257 439.209 cv
461.184 439.207 461.105 439.21 461.032 439.214 cv
461.573 438.343 460.468 436.976 460.468 436.976 cv
459.412 438.313 459.556 439.191 459.734 439.591 cv
458.57 440.113 457.386 440.93 456.16 440.564 cv
455.154 440.265 454.369 439.646 453.685 438.909 cv
454.61 437.47 456.177 436.383 457.771 435.828 cv
457.935 435.771 458.098 435.718 458.265 435.671 cv
458.547 435.746 458.832 435.804 459.12 435.85 cv
460.531 436.07 462.021 436.003 463.369 435.58 cv
463.907 435.749 464.426 435.983 464.905 436.296 cv
466.453 437.322 468.048 439.292 467.756 441.275 cv
467.59 440.683 467.016 440.285 466.389 440.357 cv
465.69 440.438 465.189 441.069 465.27 441.768 cv
465.353 442.468 465.981 442.968 466.679 442.888 cv
467.198 442.826 467.606 442.462 467.75 441.994 cv
467.747 442.02 467.746 442.046 467.741 442.073 cv
467.746 442.042 467.75 442.01 467.754 441.98 cv
467.789 441.857 467.807 441.73 467.805 441.597 cv
467.99 439.812 467.481 437.982 466.213 436.664 cv
465.629 436.06 464.959 435.59 464.233 435.247 cv
cp
.964706 .894118 .564706 rgb
f
569.163 435.609 mo
569.149 435.086 li
562.711 433.856 li
562.698 434.994 li
557.637 434.994 li
557.409 434.31 556.766 433.833 556.029 433.833 cv
555.292 433.833 554.649 434.31 554.423 434.994 cv
552.146 434.994 li
552.267 434.228 552.624 433.519 553.193 432.933 cv
553.962 432.14 555.02 431.667 556.169 431.605 cv
556.436 431.589 li
556.377 430.521 li
556.109 430.537 li
554.69 430.613 553.38 431.199 552.424 432.189 cv
551.655 432.98 551.189 433.945 551.065 434.994 cv
464.888 434.994 li
464.888 436.064 li
551.056 436.064 li
551.338 438.679 553.777 440.678 556.654 440.515 cv
556.921 440.5 li
556.862 439.432 li
556.596 439.446 li
554.339 439.564 552.417 438.06 552.138 436.064 cv
554.423 436.064 li
554.648 436.749 555.291 437.224 556.029 437.224 cv
556.766 437.224 557.409 436.749 557.637 436.064 cv
562.688 436.064 li
562.675 437.221 li
569.163 435.609 li
cp
f
296.906 435.609 mo
296.921 435.086 li
303.357 433.856 li
303.37 434.994 li
308.434 434.994 li
308.66 434.31 309.303 433.833 310.04 433.833 cv
310.775 433.833 311.42 434.31 311.648 434.994 cv
313.922 434.994 li
313.803 434.228 313.445 433.519 312.875 432.933 cv
312.107 432.14 311.051 431.667 309.9 431.605 cv
309.634 431.589 li
309.691 430.521 li
309.959 430.537 li
311.378 430.613 312.689 431.199 313.646 432.189 cv
314.413 432.98 314.879 433.945 315.003 434.994 cv
401.181 434.994 li
401.181 436.064 li
315.013 436.064 li
314.731 438.679 312.292 440.678 309.416 440.515 cv
309.148 440.5 li
309.207 439.432 li
309.474 439.446 li
311.729 439.564 313.651 438.06 313.933 436.064 cv
311.648 436.064 li
311.42 436.749 310.777 437.224 310.04 437.224 cv
309.303 437.224 308.66 436.749 308.434 436.064 cv
303.381 436.064 li
303.394 437.221 li
296.906 435.609 li
cp
f
279.622 429.775 mo
277.04 427.957 273.247 427.661 270.752 429.899 cv
269.301 431.2 267.759 433.6 267.678 435.553 cv
267.553 438.513 270.358 441.824 273.717 440.917 cv
275.825 440.347 277.376 438.145 277.799 436.111 cv
277.692 436.625 277.045 437.037 276.937 437.558 cv
276.778 438.321 276.821 438.39 275.975 438.885 cv
275.325 439.269 274.584 439.576 273.803 439.571 cv
272.416 439.56 270.982 439.067 270.027 438.052 cv
268.068 435.974 267.867 432.549 270.479 430.9 cv
275.88 427.494 282.95 432.593 282.171 438.515 cv
281.784 441.447 280.296 443.565 277.304 444.907 cv
274.532 446.15 271.384 446.242 268.562 445.097 cv
258.294 440.939 260.728 431.616 260.884 431.616 cv
258.931 431.619 233.632 431.619 200.858 431.619 cv
202.041 432.345 li
200.858 433.116 li
234.264 433.108 259.65 433.089 259.629 433.063 cv
259.627 433.068 259.625 433.074 259.624 433.081 cv
259.101 436.81 260.222 440.707 262.954 443.449 cv
267.457 447.965 275.61 449.044 279.952 443.657 cv
280.892 442.491 281.792 441.096 282.375 439.648 cv
282.589 439.21 284.399 433.144 279.622 429.775 cv
cp
.905882 .831373 .529412 rgb
f
42.7212 433.063 mo
42.7007 433.089 68.2476 433.108 101.813 433.116 cv
100.63 432.445 li
101.813 431.619 li
68.8828 431.619 43.4258 431.619 41.4653 431.616 cv
41.623 431.616 44.0562 440.939 33.7891 445.097 cv
30.9673 446.242 27.8184 446.15 25.0474 444.907 cv
22.0547 443.565 20.5669 441.447 20.1802 438.515 cv
19.3999 432.593 26.4707 427.494 31.8706 430.9 cv
34.4849 432.549 34.2827 435.974 32.3242 438.052 cv
31.3682 439.067 29.9351 439.56 28.5474 439.571 cv
27.7671 439.576 27.0264 439.269 26.3745 438.885 cv
25.5293 438.39 25.5723 438.321 25.4136 437.558 cv
25.3062 437.037 24.6582 436.625 24.5522 436.111 cv
24.9736 438.145 26.5264 440.347 28.6343 440.917 cv
31.9922 441.824 34.7969 438.513 34.6733 435.553 cv
34.5923 433.6 33.0498 431.2 31.5981 429.899 cv
29.104 427.661 25.3096 427.957 22.729 429.775 cv
17.9512 433.144 19.7612 439.21 19.9766 439.648 cv
20.5576 441.096 21.4595 442.491 22.3984 443.657 cv
26.7412 449.044 34.8931 447.965 39.3975 443.449 cv
42.1289 440.707 43.25 436.81 42.7271 433.081 cv
42.7261 433.074 42.7222 433.068 42.7212 433.063 cv
cp
f
108.776 430.715 mo
108.776 429.697 li
104.538 429.588 99.2656 432.484 99.2656 432.484 cv
99.2656 432.484 103.798 435.157 108.344 435.249 cv
108.488 435.251 108.632 435.248 108.776 435.25 cv
108.776 434.208 li
108.632 434.21 108.488 434.222 108.344 434.222 cv
105.876 434.236 103.37 433.595 101.129 432.519 cv
103.266 431.504 105.652 430.871 108.062 430.73 cv
108.298 430.717 108.537 430.717 108.776 430.715 cv
cp
f
122.856 437.371 mo
122.421 436.581 119.961 433.667 118.01 432.46 cv
120.257 430.938 122.388 428.314 122.806 427.576 cv
123.24 428.366 124.987 430.722 127.649 432.484 cv
125.727 433.629 123.274 436.634 122.856 437.371 cv
cp
123.54 439.599 mo
123.422 439.941 123.019 440.259 122.586 440.116 cv
122.377 440.046 122.226 439.914 122.157 439.728 cv
122.14 439.649 122.128 439.605 122.119 439.574 cv
122.139 439.52 122.158 439.464 122.178 439.411 cv
122.218 439.32 122.266 439.231 122.318 439.144 cv
122.443 438.947 122.581 438.756 122.744 438.582 cv
122.742 438.595 122.742 438.613 122.737 438.623 cv
122.75 438.595 122.769 438.572 122.783 438.544 cv
122.845 438.49 122.85 438.533 122.929 438.626 cv
123.164 438.906 123.436 439.249 123.54 439.599 cv
cp
122.32 425.81 mo
122.268 425.724 122.219 425.635 122.178 425.544 cv
122.158 425.49 122.138 425.434 122.118 425.38 cv
122.128 425.35 122.14 425.305 122.156 425.226 cv
122.224 425.041 122.375 424.906 122.584 424.837 cv
123.017 424.695 123.42 425.01 123.54 425.353 cv
123.436 425.703 123.166 426.046 122.932 426.326 cv
122.841 426.435 122.854 426.484 122.756 426.382 cv
122.587 426.205 122.447 426.011 122.32 425.81 cv
cp
137.159 430.715 mo
137.159 429.697 li
134.15 429.591 131.082 430.488 128.477 431.984 cv
124.84 430.149 123.459 427.96 123.139 427.096 cv
123.417 426.724 123.591 426.318 123.661 425.879 cv
123.732 425.722 123.722 425.51 123.71 425.333 cv
123.71 425.299 123.707 425.263 123.705 425.229 cv
123.681 424.734 123.655 424.152 123.118 423.85 cv
122.637 423.58 122.208 424.001 122.08 424.347 cv
121.751 425.24 121.911 426.273 122.481 427.072 cv
122.129 427.997 120.405 430.365 117.111 431.94 cv
114.638 430.607 111.751 429.81 108.855 429.697 cv
108.828 429.695 108.802 429.697 108.776 429.697 cv
108.776 430.717 li
111.299 430.693 113.861 431.335 116.145 432.434 cv
113.882 433.504 111.334 434.136 108.776 434.208 cv
108.776 435.25 li
111.692 435.287 114.648 434.411 117.171 432.968 cv
120.158 434.492 122.129 436.895 122.508 437.834 cv
121.912 438.64 121.745 439.699 122.083 440.606 cv
122.212 440.953 122.644 441.375 123.123 441.103 cv
123.66 440.798 123.683 440.215 123.706 439.719 cv
123.707 439.685 123.711 439.654 123.711 439.619 cv
123.722 439.441 123.732 439.229 123.659 439.072 cv
123.591 438.649 123.427 438.253 123.165 437.892 cv
123.509 437.146 125.382 434.492 128.556 433.008 cv
131.006 434.33 133.861 435.127 136.727 435.249 cv
136.87 435.255 137.015 435.248 137.159 435.25 cv
137.159 434.208 li
137.015 434.21 136.871 434.222 136.727 434.222 cv
134.26 434.236 131.752 433.595 129.512 432.519 cv
131.648 431.504 134.035 430.871 136.444 430.73 cv
136.682 430.717 136.92 430.717 137.159 430.715 cv
cp
f
151.24 437.371 mo
150.804 436.581 148.344 433.667 146.394 432.46 cv
148.64 430.938 150.771 428.314 151.188 427.576 cv
151.623 428.366 153.37 430.722 156.032 432.484 cv
154.109 433.629 151.658 436.634 151.24 437.371 cv
cp
151.922 439.599 mo
151.804 439.941 151.402 440.259 150.97 440.116 cv
150.76 440.046 150.609 439.914 150.54 439.728 cv
150.523 439.649 150.512 439.605 150.501 439.574 cv
150.521 439.52 150.541 439.464 150.56 439.411 cv
150.601 439.32 150.649 439.231 150.701 439.144 cv
150.827 438.947 150.963 438.756 151.127 438.582 cv
151.125 438.595 151.125 438.613 151.12 438.623 cv
151.134 438.595 151.152 438.572 151.166 438.544 cv
151.228 438.49 151.233 438.533 151.312 438.626 cv
151.547 438.906 151.818 439.249 151.922 439.599 cv
cp
150.702 425.81 mo
150.65 425.724 150.602 425.635 150.562 425.544 cv
150.541 425.49 150.521 425.434 150.501 425.38 cv
150.511 425.35 150.523 425.305 150.54 425.226 cv
150.608 425.041 150.758 424.906 150.968 424.837 cv
151.4 424.695 151.803 425.01 151.922 425.353 cv
151.819 425.703 151.549 426.046 151.316 426.326 cv
151.225 426.435 151.236 426.484 151.139 426.382 cv
150.97 426.205 150.831 426.011 150.702 425.81 cv
cp
165.541 430.715 mo
165.541 429.697 li
162.533 429.591 159.464 430.488 156.859 431.984 cv
153.222 430.149 151.843 427.96 151.522 427.096 cv
151.8 426.724 151.974 426.318 152.045 425.879 cv
152.115 425.722 152.104 425.51 152.094 425.333 cv
152.094 425.299 152.089 425.263 152.088 425.229 cv
152.064 424.734 152.038 424.152 151.502 423.85 cv
151.021 423.58 150.591 424.001 150.462 424.347 cv
150.134 425.24 150.295 426.273 150.865 427.072 cv
150.513 427.997 148.788 430.365 145.494 431.94 cv
143.022 430.607 140.134 429.81 137.239 429.697 cv
137.212 429.695 137.185 429.697 137.159 429.697 cv
137.159 430.717 li
139.682 430.693 142.244 431.335 144.528 432.434 cv
142.265 433.504 139.718 434.136 137.159 434.208 cv
137.159 435.25 li
140.075 435.287 143.031 434.411 145.554 432.968 cv
148.542 434.492 150.513 436.895 150.891 437.834 cv
150.295 438.64 150.128 439.699 150.466 440.606 cv
150.595 440.953 151.025 441.375 151.506 441.103 cv
152.043 440.798 152.066 440.215 152.089 439.719 cv
152.09 439.685 152.094 439.654 152.094 439.619 cv
152.104 439.441 152.115 439.229 152.043 439.072 cv
151.974 438.649 151.81 438.253 151.548 437.892 cv
151.892 437.146 153.764 434.492 156.939 433.008 cv
159.39 434.33 162.244 435.127 165.11 435.249 cv
165.252 435.255 165.397 435.248 165.541 435.25 cv
165.541 434.208 li
165.397 434.21 165.254 434.222 165.11 434.222 cv
162.643 434.236 160.135 433.595 157.895 432.519 cv
160.032 431.504 162.418 430.871 164.827 430.73 cv
165.064 430.717 165.303 430.717 165.541 430.715 cv
cp
f
179.622 437.371 mo
179.186 436.581 176.727 433.667 174.776 432.46 cv
177.023 430.938 179.153 428.314 179.571 427.576 cv
180.005 428.366 181.753 430.722 184.415 432.484 cv
182.493 433.629 180.041 436.634 179.622 437.371 cv
cp
180.306 439.599 mo
180.187 439.941 179.785 440.259 179.353 440.116 cv
179.143 440.046 178.992 439.914 178.922 439.728 cv
178.906 439.649 178.895 439.605 178.884 439.574 cv
178.904 439.52 178.923 439.464 178.943 439.411 cv
178.984 439.32 179.032 439.231 179.084 439.144 cv
179.21 438.947 179.346 438.756 179.51 438.582 cv
179.507 438.595 179.507 438.613 179.502 438.623 cv
179.516 438.595 179.535 438.572 179.548 438.544 cv
179.61 438.49 179.616 438.533 179.695 438.626 cv
179.93 438.906 180.201 439.249 180.306 439.599 cv
cp
179.084 425.81 mo
179.033 425.724 178.984 425.635 178.945 425.544 cv
178.923 425.49 178.903 425.434 178.884 425.38 cv
178.893 425.35 178.906 425.305 178.922 425.226 cv
178.99 425.041 179.141 424.906 179.351 424.837 cv
179.783 424.695 180.187 425.01 180.306 425.353 cv
180.201 425.703 179.931 426.046 179.699 426.326 cv
179.607 426.435 179.619 426.484 179.522 426.382 cv
179.353 426.205 179.213 426.011 179.084 425.81 cv
cp
193.924 430.715 mo
193.924 429.697 li
190.916 429.591 187.848 430.488 185.242 431.984 cv
181.605 430.149 180.226 427.96 179.905 427.096 cv
180.182 426.724 180.357 426.318 180.427 425.879 cv
180.499 425.722 180.487 425.51 180.476 425.333 cv
180.476 425.299 180.472 425.263 180.471 425.229 cv
180.447 424.734 180.42 424.152 179.884 423.85 cv
179.403 423.58 178.973 424.001 178.844 424.347 cv
178.517 425.24 178.677 426.273 179.247 427.072 cv
178.895 427.997 177.17 430.365 173.876 431.94 cv
171.404 430.607 168.518 429.81 165.621 429.697 cv
165.594 429.695 165.567 429.697 165.541 429.697 cv
165.541 430.717 li
168.065 430.693 170.626 431.335 172.911 432.434 cv
170.647 433.504 168.101 434.136 165.541 434.208 cv
165.541 435.25 li
168.458 435.287 171.414 434.411 173.937 432.968 cv
176.924 434.492 178.895 436.895 179.273 437.834 cv
178.678 438.64 178.511 439.699 178.849 440.606 cv
178.978 440.953 179.409 441.375 179.889 441.103 cv
180.426 440.798 180.449 440.215 180.472 439.719 cv
180.473 439.685 180.476 439.654 180.476 439.619 cv
180.487 439.441 180.498 439.229 180.425 439.072 cv
180.357 438.649 180.193 438.253 179.93 437.892 cv
180.274 437.146 182.147 434.492 185.322 433.008 cv
187.772 434.33 190.627 435.127 193.492 435.249 cv
193.635 435.255 193.78 435.248 193.924 435.25 cv
193.924 434.208 li
193.78 434.21 193.637 434.222 193.492 434.222 cv
191.026 434.236 188.518 433.595 186.277 432.519 cv
188.415 431.504 190.801 430.871 193.209 430.73 cv
193.448 430.717 193.686 430.717 193.924 430.715 cv
cp
f
203.085 432.46 mo
203.085 432.46 197.768 429.637 193.93 429.697 cv
193.904 429.697 193.877 429.697 193.851 429.697 cv
193.851 430.717 li
196.374 430.693 198.936 431.335 201.22 432.434 cv
198.957 433.504 196.41 434.136 193.851 434.208 cv
193.851 435.25 li
198.064 435.255 203.085 432.46 203.085 432.46 cv
cp
f
424.538 48.3276 mo
424.54 48.3589 424.544 48.3911 424.547 48.4243 cv
425.026 48.4102 li
425.026 48.3823 425.029 48.3555 425.029 48.3276 cv
425.42 48.3276 li
425.419 48.3755 425.417 48.4224 425.417 48.4688 cv
425.417 52.394 428.879 55.5903 433.136 55.5903 cv
437.393 55.5903 440.855 52.394 440.855 48.4688 cv
440.855 48.4224 440.854 48.3755 440.854 48.3276 cv
441.241 48.3276 li
441.241 48.332 441.242 48.3359 441.242 48.3389 cv
441.705 48.3467 li
441.681 48.3823 441.633 48.4209 441.572 48.4282 cv
441.849 48.4087 442.159 48.3745 442.51 48.3276 cv
442.51 48.3276 442.467 48.6899 441.743 48.6899 cv
441.743 48.6899 li
441.736 48.6343 441.73 48.5703 441.727 48.5103 cv
441.247 48.5229 li
441.245 48.7783 441.228 49.0391 441.196 49.2979 cv
441.168 49.5352 li
441.426 49.5435 li
442.597 49.5869 448.446 49.8735 451.16 51.3677 cv
451.109 51.437 li
451.471 51.7231 li
451.625 51.5952 451.813 51.5229 452.012 51.5107 cv
452.032 51.5103 452.053 51.5103 452.07 51.5103 cv
452.548 51.5103 452.945 51.853 452.975 52.2915 cv
453.008 52.7505 452.628 53.1489 452.13 53.1792 cv
452.109 53.1802 452.089 53.1802 452.069 53.1802 cv
451.594 53.1802 451.198 52.8379 451.167 52.3979 cv
451.157 52.2803 451.179 52.1616 451.227 52.0469 cv
451.297 51.8794 li
451.136 51.7817 li
448.583 50.2295 442.493 49.9443 441.3 49.9023 cv
441.1 49.896 li
441.057 50.0752 li
441.04 50.1431 441.021 50.2095 441.001 50.2759 cv
440.886 50.6763 li
441.237 50.6353 li
441.564 50.5991 441.919 50.5791 442.29 50.5791 cv
445.025 50.5791 449.516 51.686 449.913 54.6567 cv
450.057 55.7212 449.8 56.6343 449.167 57.2944 cv
448.481 58.0083 447.402 58.4004 446.128 58.4004 cv
446.09 58.4004 li
444.471 58.3911 442.877 57.0972 442.461 55.4556 cv
442.31 54.8599 442.442 54.2017 442.82 53.6963 cv
443.058 53.3779 443.498 52.9785 444.247 52.8823 cv
444.311 52.8755 444.375 52.8706 444.442 52.8706 cv
445.074 52.8706 445.751 53.2197 446.092 53.7202 cv
446.276 53.9927 446.436 54.4253 446.19 54.9673 cv
445.848 55.0454 445.056 55.2793 444.967 55.7861 cv
444.901 56.1523 445.211 56.5107 445.91 56.8833 cv
445.935 56.8965 li
445.962 56.9043 li
445.981 56.9097 446.457 57.0386 447.024 57.0386 cv
447.702 57.0386 448.22 56.8599 448.564 56.5103 cv
448.925 56.1401 449.068 55.5967 448.988 54.8931 cv
448.975 54.7515 448.543 51.3984 441.066 50.7173 cv
440.876 50.7007 li
440.815 50.8647 li
439.976 53.147 437.986 54.9268 435.495 55.627 cv
435.294 55.6836 li
435.33 55.8745 li
436.559 62.6724 440.199 62.8521 440.351 62.8569 cv
440.406 62.8599 440.459 62.8604 440.512 62.8604 cv
441.315 62.8604 441.893 62.6343 442.231 62.1841 cv
442.88 61.3271 442.355 59.9966 442.333 59.9399 cv
442.324 59.9165 li
442.307 59.894 li
441.912 59.3491 441.551 59.0835 441.198 59.0835 cv
440.554 59.0835 440.317 59.9458 440.252 60.2759 cv
440.029 60.3789 439.803 60.4307 439.578 60.4307 cv
439.162 60.4307 438.75 60.2495 438.418 59.9214 cv
438.047 59.5522 437.836 59.0557 437.871 58.6235 cv
437.965 57.4282 439.12 56.7827 440.161 56.7827 cv
440.289 56.7827 440.417 56.7935 440.538 56.811 cv
442.342 57.0894 443.846 58.4722 443.961 59.9619 cv
444.048 61.1099 443.72 62.1167 443.031 62.8003 cv
442.414 63.4092 441.527 63.7319 440.464 63.7319 cv
440.364 63.7319 440.261 63.729 440.157 63.7231 cv
439.145 63.6689 438.23 63.2271 437.443 62.4087 cv
435.852 60.7544 435.123 57.8647 435.246 55.9849 cv
435.263 55.6895 li
434.95 55.7554 li
434.85 55.7769 434.748 55.7993 434.645 55.8164 cv
434.429 55.855 li
434.451 56.0562 li
434.524 56.731 435.227 62.7163 437.124 65.0332 cv
437.241 65.1753 li
437.417 65.1011 li
437.54 65.0474 437.667 65.022 437.794 65.022 cv
438.295 65.022 438.701 65.3965 438.701 65.8579 cv
438.701 66.3188 438.295 66.6934 437.794 66.6934 cv
437.294 66.6934 436.89 66.3188 436.89 65.8579 cv
436.89 65.6743 436.956 65.4966 437.084 65.3457 cv
436.748 65.0332 li
436.679 65.0825 li
434.808 62.5728 434.134 56.7847 434.062 56.1191 cv
434.038 55.9028 li
433.804 55.9199 li
433.601 55.9351 433.42 55.9443 433.251 55.9468 cv
433.236 56.3809 li
433.196 56.3604 433.145 56.311 433.134 56.2495 cv
433.22 57.3179 433.559 58.916 434.118 61.5503 cv
434.446 63.1001 li
435.181 66.5767 433.821 69.644 433.297 70.6528 cv
432.712 69.6763 431.183 66.7144 431.861 63.4004 cv
432.756 59.0244 432.847 57.0171 432.852 56.4063 cv
432.918 56.4004 432.993 56.394 433.063 56.3896 cv
433.054 55.9478 li
432.769 55.9453 432.478 55.9272 432.194 55.896 cv
431.938 55.8687 li
431.927 56.106 li
431.874 57.186 431.53 62.5811 429.896 65.0757 cv
429.821 65.0298 li
429.509 65.3599 li
429.646 65.5039 429.725 65.6772 429.737 65.8608 cv
429.766 66.3213 429.386 66.7183 428.887 66.7451 cv
428.868 66.7451 428.85 66.7461 428.831 66.7461 cv
428.353 66.7461 427.956 66.4009 427.927 65.9604 cv
427.914 65.7373 427.994 65.522 428.153 65.3555 cv
428.314 65.1885 428.536 65.0889 428.779 65.0757 cv
428.795 65.0747 428.813 65.0747 428.83 65.0747 cv
428.94 65.0747 429.052 65.0947 429.161 65.1343 cv
429.342 65.1992 li
429.448 65.0503 li
431.14 62.7095 431.485 57.0913 431.537 55.9893 cv
431.546 55.8037 li
431.351 55.7637 li
431.264 55.7446 431.176 55.7227 431.087 55.7012 cv
430.702 55.6045 li
430.744 55.9302 li
431.072 58.5103 429.848 63.5244 426.338 63.9087 cv
426.137 63.9307 425.938 63.9419 425.749 63.9419 cv
424.776 63.9419 423.943 63.6455 423.343 63.0854 cv
422.655 62.4419 422.282 61.4751 422.298 60.3618 cv
422.317 58.8687 423.728 57.4048 425.51 57.0303 cv
425.677 56.9946 425.852 56.9771 426.028 56.9771 cv
427.031 56.9771 428.13 57.5669 428.29 58.6919 cv
428.354 59.1348 428.158 59.6724 427.788 60.061 cv
427.463 60.4038 427.049 60.5923 426.622 60.5923 cv
426.423 60.5923 426.223 60.5522 426.021 60.4727 cv
425.932 60.1343 425.657 59.332 425.036 59.332 cv
424.673 59.332 424.315 59.6172 423.943 60.2036 cv
423.93 60.2256 li
423.922 60.2515 li
423.902 60.3071 423.477 61.6299 424.138 62.4531 cv
424.47 62.8643 424.998 63.0723 425.711 63.0723 cv
425.83 63.0723 425.956 63.0664 426.085 63.0542 cv
426.239 63.042 429.878 62.6606 430.657 55.7681 cv
430.677 55.5952 li
430.497 55.5366 li
428.073 54.7642 426.165 52.9629 425.398 50.7163 cv
425.335 50.5332 li
425.13 50.564 li
417.728 51.6724 417.521 55.0396 417.517 55.1807 cv
417.486 55.8677 417.653 56.3911 418.017 56.7407 cv
418.345 57.0562 418.818 57.2163 419.419 57.2163 cv
420.072 57.2163 420.648 57.0239 420.673 57.0161 cv
420.7 57.0073 li
420.724 56.9927 li
421.396 56.582 421.679 56.2056 421.592 55.8442 cv
421.468 55.3433 420.661 55.1548 420.313 55.0952 cv
420.021 54.5493 420.17 54.0957 420.354 53.8042 cv
420.687 53.2813 421.382 52.9019 422.01 52.9019 cv
422.045 52.9019 422.08 52.9019 422.112 52.9043 cv
422.868 52.9575 423.333 53.3296 423.592 53.6348 cv
424.003 54.1187 424.182 54.7671 424.071 55.3701 cv
423.765 57.0332 422.261 58.4146 420.646 58.5171 cv
420.52 58.5249 420.396 58.5293 420.272 58.5293 cv
419.102 58.5293 418.095 58.1729 417.436 57.5269 cv
416.805 56.9087 416.509 56.0337 416.576 54.998 cv
416.774 52.0488 421.302 50.4761 424.494 50.4761 cv
424.67 50.4761 424.843 50.481 425.007 50.4917 cv
425.334 50.5122 li
425.23 50.1245 li
425.213 50.061 425.194 49.998 425.181 49.9331 cv
425.14 49.7373 li
424.922 49.7573 li
424.189 49.8213 417.697 50.4458 415.165 52.1987 cv
415.011 52.3057 li
415.091 52.4683 li
415.146 52.5806 415.176 52.6992 415.176 52.8159 cv
415.173 53.2759 414.768 53.6489 414.266 53.6489 cv
413.766 53.6484 413.36 53.2729 413.362 52.812 cv
413.364 52.3521 413.771 51.9785 414.271 51.9785 cv
414.471 51.9785 414.664 52.0425 414.827 52.1616 cv
415.166 51.853 li
415.112 51.7861 li
417.843 50.0659 424.122 49.4629 424.844 49.3989 cv
425.084 49.3774 li
425.062 49.1567 li
425.044 49.0005 425.036 48.8301 425.031 48.6187 cv
424.575 48.6133 li
424.603 48.5825 424.646 48.5493 424.701 48.5435 cv
423.547 48.6187 424.538 48.3276 424.538 48.3276 cv
cp
.921569 .854902 .541176 rgb
f
426.974 48.3276 mo
426.972 48.3755 426.967 48.4224 426.967 48.4688 cv
426.967 51.6064 429.734 54.1577 433.136 54.1577 cv
436.537 54.1577 439.305 51.6064 439.305 48.4688 cv
439.305 48.4224 439.301 48.3755 439.3 48.3276 cv
439.631 48.3276 li
439.631 48.3755 439.636 48.4224 439.636 48.4688 cv
439.636 51.7739 436.719 54.4629 433.136 54.4629 cv
429.553 54.4629 426.638 51.7739 426.638 48.4688 cv
426.638 48.4224 426.642 48.3755 426.643 48.3276 cv
426.974 48.3276 li
cp
f
564.514 50.5063 mo
564.514 50.5063 564.344 56.4111 556.618 54.1475 cv
556.618 54.1475 561.511 54.4224 561.366 49.25 cv
561.322 47.6294 561.301 45.0103 556.545 44.4673 cv
556.545 44.4673 563.933 41.9102 564.513 48.0591 cv
564.513 48.0591 565.685 44.5083 570.733 49.2441 cv
570.733 49.2441 565.925 54.4165 564.514 50.5063 cv
cp
f
557.19 51.3423 mo
556.398 51.3374 555.718 50.8779 555.381 50.2163 cv
555.381 50.3062 li
440.736 50.3062 li
440.736 48.2974 li
555.381 48.2974 li
555.381 48.3623 li
555.72 47.6963 556.408 47.2354 557.209 47.2388 cv
558.341 47.2441 559.256 48.166 559.25 49.3008 cv
559.243 50.4312 558.323 51.3452 557.19 51.3423 cv
cp
f
301.557 50.5063 mo
301.557 50.5063 301.726 56.4111 309.451 54.1475 cv
309.451 54.1475 304.559 54.4224 304.701 49.25 cv
304.745 47.6294 304.769 45.0103 309.522 44.4673 cv
309.522 44.4673 302.137 41.9102 301.557 48.0591 cv
301.557 48.0591 300.384 44.5083 295.336 49.2441 cv
295.336 49.2441 300.144 54.4165 301.557 50.5063 cv
cp
f
308.878 51.3423 mo
309.671 51.3374 310.351 50.8779 310.688 50.2163 cv
310.688 50.3062 li
425.333 50.3062 li
425.333 48.2974 li
310.688 48.2974 li
310.688 48.3623 li
310.349 47.6963 309.661 47.2354 308.859 47.2388 cv
307.728 47.2441 306.813 48.166 306.817 49.3008 cv
306.825 50.4312 307.745 51.3452 308.878 51.3423 cv
cp
f
435.571 49.2354 mo
435.571 47.7983 434.406 46.6328 432.97 46.6328 cv
431.532 46.6328 430.367 47.7983 430.367 49.2354 cv
430.367 50.6724 431.532 51.8379 432.97 51.8379 cv
434.406 51.8379 435.571 50.6724 435.571 49.2354 cv
cp
f
273.933 44.7935 mo
272.452 44.7935 271.22 45.8335 270.915 47.2212 cv
268.441 47.2212 li
268.855 46.8584 269.226 46.4307 269.538 45.9146 cv
270.435 44.4287 270.502 42.2163 269.334 40.8364 cv
267.09 38.187 261.219 37.3931 260.755 41.9668 cv
260.66 42.9058 263.236 43.4595 263.318 42.6538 cv
263.432 41.5264 264.382 39.5649 265.905 40.063 cv
266.926 40.395 267.6 41.6289 267.629 42.6538 cv
267.689 44.6938 266.415 46.5347 264.519 47.0684 cv
264.116 47.0093 260.417 47.2212 259.268 47.2212 cv
258.96 45.8335 257.728 44.7935 256.248 44.7935 cv
254.768 44.7935 253.534 45.8335 253.228 47.2212 cv
160.33 47.2212 li
160.33 48.5547 li
253.228 48.5547 li
253.534 49.9429 254.768 50.9824 256.248 50.9824 cv
257.728 50.9824 258.96 49.9429 259.268 48.5547 cv
260.536 48.5547 263.833 48.8228 264.209 48.811 cv
266.378 48.7466 268.216 51.166 267.512 53.2769 cv
266.831 55.3091 263.833 56.6821 263.384 53.7139 cv
263.212 52.5864 260.596 52.2319 260.79 53.5083 cv
261.45 57.8613 267.892 58.7827 269.761 54.7534 cv
270.924 52.2407 269.885 49.9824 268.031 48.5547 cv
270.915 48.5547 li
271.22 49.9429 272.452 50.9824 273.933 50.9824 cv
275.643 50.9824 280.565 47.8872 280.565 47.8872 cv
280.565 47.8872 275.643 44.7935 273.933 44.7935 cv
cp
f
28.417 44.7935 mo
29.8975 44.7935 31.1304 45.8335 31.4351 47.2212 cv
33.9082 47.2212 li
33.4941 46.8584 33.1235 46.4307 32.812 45.9146 cv
31.915 44.4287 31.8472 42.2163 33.0151 40.8364 cv
35.2598 38.187 41.1304 37.3931 41.5942 41.9668 cv
41.6895 42.9058 39.1138 43.4595 39.0317 42.6538 cv
38.918 41.5264 37.9673 39.5649 36.4448 40.063 cv
35.4238 40.395 34.75 41.6289 34.7207 42.6538 cv
34.6602 44.6938 35.9346 46.5347 37.8311 47.0684 cv
38.2339 47.0093 41.9331 47.2212 43.0825 47.2212 cv
43.3892 45.8335 44.6221 44.7935 46.1025 44.7935 cv
47.582 44.7935 48.8154 45.8335 49.1216 47.2212 cv
142.02 47.2212 li
142.02 48.5547 li
49.1216 48.5547 li
48.8154 49.9429 47.582 50.9824 46.1025 50.9824 cv
44.6221 50.9824 43.3892 49.9429 43.0825 48.5547 cv
41.814 48.5547 38.5171 48.8228 38.1406 48.811 cv
35.9712 48.7466 34.1333 51.166 34.8384 53.2769 cv
35.5186 55.3091 38.5171 56.6821 38.9658 53.7139 cv
39.1372 52.5864 41.7534 52.2319 41.5596 53.5083 cv
40.8999 57.8613 34.458 58.7827 32.5889 54.7534 cv
31.4258 52.2407 32.4648 49.9824 34.3188 48.5547 cv
31.4351 48.5547 li
31.1304 49.9429 29.8975 50.9824 28.417 50.9824 cv
26.707 50.9824 21.7852 47.8872 21.7852 47.8872 cv
21.7852 47.8872 26.707 44.7935 28.417 44.7935 cv
cp
f
161.81 44.0171 mo
155.687 39.1455 152.779 41.6167 152.779 41.6167 cv
150.469 43.5552 153.427 45.1021 153.427 45.1021 cv
155.859 45.7207 154.406 43.5894 154.406 43.5894 cv
154.988 41.8096 157.224 42.0659 158.04 43.1147 cv
159.061 44.4287 158.46 46.1792 157.273 46.9419 cv
155.602 48.0142 153.2 47.9683 151.834 46.6572 cv
151.289 46.1284 150.872 45.5356 150.611 44.9097 cv
150.332 45.6401 149.836 46.3271 149.166 46.9087 cv
147.736 48.1509 145.333 48.0747 143.718 46.9189 cv
142.57 46.0938 142.057 44.314 143.148 43.0591 cv
144.018 42.0503 146.263 41.9102 146.75 43.7173 cv
146.75 43.7173 145.196 45.7681 147.656 45.2749 cv
147.656 45.2749 150.688 43.8823 148.478 41.8286 cv
148.478 41.8286 145.702 39.2148 139.342 43.7603 cv
140.686 46.2827 140.719 49.3213 139.46 51.8755 cv
145.535 56.8711 148.482 54.4331 148.482 54.4331 cv
150.823 52.5288 147.887 50.9395 147.887 50.9395 cv
145.465 50.2861 146.89 52.4351 146.89 52.4351 cv
146.278 54.2075 144.048 53.9199 143.247 52.8555 cv
142.243 51.5293 142.871 49.7866 144.069 49.0439 cv
145.756 47.9956 148.157 48.0767 149.504 49.4087 cv
150.018 49.9165 150.411 50.4878 150.662 51.085 cv
150.939 50.3823 151.413 49.7188 152.053 49.1484 cv
153.462 47.8862 155.868 47.9277 157.498 49.0591 cv
158.653 49.8657 159.19 51.6387 158.124 52.9121 cv
157.269 53.9312 155.027 54.1045 154.51 52.3047 cv
154.51 52.3047 156.038 50.2305 153.584 50.7603 cv
153.584 50.7603 150.574 52.1978 152.818 54.2192 cv
152.818 54.2192 155.635 56.8003 161.943 52.1343 cv
160.595 49.6143 160.557 46.5771 161.81 44.0171 cv
cp
f
170.99 48.0088 mo
170.99 50.1377 169.264 51.8633 167.135 51.8633 cv
165.006 51.8633 163.28 50.1377 163.28 48.0088 cv
163.28 45.8799 165.006 44.1538 167.135 44.1538 cv
169.264 44.1538 170.99 45.8799 170.99 48.0088 cv
cp
f
138.224 48.0088 mo
138.224 50.1377 136.498 51.8633 134.37 51.8633 cv
132.241 51.8633 130.515 50.1377 130.515 48.0088 cv
130.515 45.8799 132.241 44.1538 134.37 44.1538 cv
136.498 44.1538 138.224 45.8799 138.224 48.0088 cv
cp
f
408.376 498.794 mo
382.101 498.744 307.603 498.566 307.603 498.566 cv
307.222 500.307 li
307.222 500.307 382.405 500.289 408.376 500.279 cv
408.376 498.794 li
cp
f
306.761 496.899 mo
305.341 496.899 304.188 498.052 304.188 499.474 cv
304.188 500.896 305.341 502.046 306.761 502.046 cv
308.183 502.046 309.337 500.896 309.337 499.474 cv
309.337 498.052 308.183 496.899 306.761 496.899 cv
cp
f
452.786 500.53 mo
559.479 500.561 li
559.388 498.82 li
452.786 499.059 li
452.786 500.53 li
cp
f
559.308 496.9 mo
557.884 496.9 556.733 498.052 556.733 499.474 cv
556.733 500.896 557.884 502.046 559.308 502.046 cv
560.728 502.046 561.882 500.896 561.882 499.474 cv
561.882 498.052 560.728 496.9 559.308 496.9 cv
cp
f
430.638 504.102 mo
428.575 502.081 li
431.056 499.695 li
428.462 497.061 li
430.706 494.759 li
430.843 495.012 li
435.173 499.574 li
430.638 504.102 li
cp
428.03 501.545 mo
427.358 500.888 426.013 499.57 426.013 499.57 cv
428.265 497.259 li
430.364 499.364 li
430.364 499.364 428.808 500.82 428.03 501.545 cv
cp
424.179 505.152 mo
424.124 505.087 li
422.286 503.388 li
425.813 499.776 li
427.819 501.742 li
424.179 505.152 li
cp
421.735 502.876 mo
418.011 499.433 li
421.751 495.793 li
425.276 499.248 li
421.735 502.876 li
cp
417.034 507.554 mo
417.034 507.554 li
416.89 507.648 li
413.157 504.159 li
417.79 499.649 li
421.521 503.098 li
417.034 507.554 li
cp
408.54 499.841 mo
413.202 495.404 li
417.231 499.134 li
412.603 503.641 li
408.54 499.841 li
cp
417.341 491.468 mo
421.21 495.261 li
417.454 498.918 li
413.427 495.191 li
417.341 491.468 li
cp
424.31 493.304 mo
427.733 496.73 li
425.478 499.042 li
421.956 495.591 li
424.31 493.304 li
cp
430.431 493.967 mo
427.929 496.531 li
423.974 492.572 li
421.417 495.06 li
417.177 490.574 li
407.761 499.535 li
417.235 508.373 li
422.071 503.609 li
424.462 505.916 li
428.364 502.277 li
431.056 504.753 li
435.886 499.925 li
430.431 493.967 li
cp
f
426.317 499.574 mo
430.647 495.012 li
430.784 494.759 li
433.03 497.061 li
430.437 499.695 li
432.915 502.081 li
430.854 504.102 li
426.317 499.574 li
cp
431.126 499.364 mo
433.226 497.259 li
435.478 499.57 li
435.478 499.57 434.132 500.888 433.46 501.545 cv
432.683 500.82 431.126 499.364 431.126 499.364 cv
cp
433.671 501.742 mo
435.677 499.776 li
439.204 503.388 li
437.366 505.087 li
437.312 505.152 li
433.671 501.742 li
cp
436.214 499.248 mo
439.739 495.793 li
443.479 499.433 li
439.755 502.876 li
436.214 499.248 li
cp
439.972 503.098 mo
443.7 499.649 li
448.333 504.159 li
444.601 507.648 li
444.458 507.554 li
444.458 507.554 li
439.972 503.098 li
cp
448.888 503.641 mo
444.259 499.134 li
448.288 495.404 li
452.95 499.841 li
448.888 503.641 li
cp
448.065 495.191 mo
444.036 498.918 li
440.28 495.261 li
444.149 491.468 li
448.065 495.191 li
cp
439.534 495.591 mo
436.013 499.042 li
433.757 496.73 li
437.181 493.304 li
439.534 495.591 li
cp
425.604 499.925 mo
430.437 504.753 li
433.126 502.277 li
437.028 505.916 li
439.419 503.609 li
444.255 508.373 li
453.729 499.535 li
444.313 490.574 li
440.073 495.06 li
437.517 492.572 li
433.562 496.531 li
431.062 493.967 li
425.604 499.925 li
cp
f
126.515 499.564 mo
25.5317 499.507 li
25.4116 500.954 li
126.515 501.048 li
126.515 499.564 li
cp
f
24.9009 497.669 mo
23.481 497.669 17.5103 500.244 17.5103 500.244 cv
17.5103 500.244 23.481 502.817 24.9009 502.817 cv
26.3228 502.817 27.4761 501.666 27.4761 500.244 cv
27.4761 498.822 26.3228 497.669 24.9009 497.669 cv
cp
f
170.926 501.187 mo
277.619 501.216 li
277.527 499.476 li
170.926 499.714 li
170.926 501.187 li
cp
f
277.447 497.556 mo
276.023 497.556 274.873 498.708 274.873 500.13 cv
274.873 501.552 276.023 502.704 277.447 502.704 cv
278.867 502.704 284.84 500.13 284.84 500.13 cv
284.84 500.13 278.867 497.556 277.447 497.556 cv
cp
f
166.331 504.759 mo
164.269 502.738 li
166.749 500.351 li
164.155 497.718 li
166.399 495.416 li
166.536 495.667 li
170.866 500.23 li
166.331 504.759 li
cp
163.723 502.201 mo
163.051 501.544 161.706 500.227 161.706 500.227 cv
163.958 497.916 li
166.057 500.02 li
166.057 500.02 164.5 501.476 163.723 502.201 cv
cp
159.872 505.808 mo
159.817 505.744 li
157.979 504.044 li
161.506 500.432 li
163.512 502.399 li
159.872 505.808 li
cp
157.428 503.534 mo
153.704 500.089 li
157.444 496.449 li
160.969 499.905 li
157.428 503.534 li
cp
152.726 508.211 mo
152.726 508.211 li
152.583 508.303 li
148.85 504.816 li
153.484 500.306 li
157.212 503.754 li
152.726 508.211 li
cp
144.233 500.498 mo
148.895 496.06 li
152.924 499.791 li
148.296 504.298 li
144.233 500.498 li
cp
153.034 492.125 mo
156.904 495.918 li
153.147 499.576 li
149.12 495.847 li
153.034 492.125 li
cp
160.002 493.96 mo
163.426 497.386 li
161.17 499.7 li
157.649 496.248 li
160.002 493.96 li
cp
166.124 494.624 mo
163.622 497.187 li
159.667 493.229 li
157.111 495.717 li
152.87 491.23 li
143.454 500.191 li
152.928 509.03 li
157.764 504.266 li
160.155 506.572 li
164.058 502.933 li
166.749 505.411 li
171.58 500.583 li
166.124 494.624 li
cp
f
126.51 500.23 mo
130.84 495.667 li
130.975 495.416 li
133.221 497.718 li
130.627 500.351 li
133.106 502.738 li
131.045 504.759 li
126.51 500.23 li
cp
131.318 500.02 mo
133.417 497.916 li
135.669 500.227 li
135.669 500.227 134.324 501.544 133.652 502.201 cv
132.875 501.476 131.318 500.02 131.318 500.02 cv
cp
133.862 502.399 mo
135.87 500.432 li
139.395 504.044 li
137.557 505.744 li
137.502 505.808 li
133.862 502.399 li
cp
136.405 499.905 mo
139.93 496.449 li
143.67 500.089 li
139.946 503.534 li
136.405 499.905 li
cp
140.163 503.754 mo
143.891 500.306 li
148.524 504.816 li
144.792 508.303 li
144.649 508.211 li
144.649 508.211 li
140.163 503.754 li
cp
149.079 504.298 mo
144.45 499.791 li
148.48 496.06 li
153.142 500.498 li
149.079 504.298 li
cp
148.256 495.847 mo
144.228 499.576 li
140.471 495.918 li
144.34 492.125 li
148.256 495.847 li
cp
139.725 496.248 mo
136.206 499.7 li
133.948 497.386 li
137.374 493.96 li
139.725 496.248 li
cp
125.795 500.583 mo
130.627 505.411 li
133.317 502.933 li
137.219 506.572 li
139.611 504.266 li
144.446 509.03 li
153.921 500.191 li
144.504 491.23 li
140.264 495.717 li
137.708 493.229 li
133.753 497.187 li
131.252 494.624 li
125.795 500.583 li
cp
f
126.399 500.13 mo
126.399 501.86 124.997 503.262 123.266 503.262 cv
121.537 503.262 120.134 501.86 120.134 500.13 cv
120.134 498.4 121.537 496.998 123.266 496.998 cv
124.997 496.998 126.399 498.4 126.399 500.13 cv
cp
f
33.2417 500.13 mo
33.2417 501.86 31.8394 503.262 30.1099 503.262 cv
28.3794 503.262 26.9771 501.86 26.9771 500.13 cv
26.9771 498.4 28.3794 496.998 30.1099 496.998 cv
31.8394 496.998 33.2417 498.4 33.2417 500.13 cv
cp
f
177.155 500.13 mo
177.155 501.86 175.752 503.262 174.022 503.262 cv
172.293 503.262 170.891 501.86 170.891 500.13 cv
170.891 498.4 172.293 496.998 174.022 496.998 cv
175.752 496.998 177.155 498.4 177.155 500.13 cv
cp
f
274.97 500.13 mo
274.97 501.86 273.567 503.262 271.838 503.262 cv
270.107 503.262 268.705 501.86 268.705 500.13 cv
268.705 498.4 270.107 496.998 271.838 496.998 cv
273.567 496.998 274.97 498.4 274.97 500.13 cv
cp
f
276.727 557.116 mo
278.352 556.704 280.016 556.262 281.754 555.824 cv
284.485 555.136 287.772 554.055 290.448 554.07 cv
292.965 554.081 294.456 555.507 296.543 556.539 cv
288.887 558.848 282.11 560.64 276.727 557.116 cv
cp
423.611 554.318 mo
422.414 554.318 421.42 555.137 421.131 556.244 cv
317.17 556.477 li
315.096 555.081 313.76 553.979 311.416 553.717 cv
310.391 553.604 309.338 553.584 308.285 553.649 cv
306.389 553.82 304.365 554.247 302.504 554.769 cv
300.53 555.323 298.602 555.917 296.725 556.483 cv
294.125 554.826 292.78 553.464 290.125 553.168 cv
289.102 553.055 288.049 553.036 286.997 553.1 cv
285.098 553.271 283.077 553.698 281.215 554.22 cv
272.614 556.633 264.864 559.822 258.588 557.997 cv
256.661 556.637 li
154.549 556.405 li
154.26 555.298 153.266 554.479 152.067 554.479 cv
150.647 554.479 149.494 555.63 149.494 557.053 cv
149.494 558.475 150.647 559.625 152.067 559.625 cv
153.1 559.625 153.983 559.016 154.393 558.139 cv
258.127 558.109 li
259.782 558.785 261.555 559.055 263.7 559.077 cv
268.217 559.118 272.327 558.23 276.719 557.117 cv
279.208 558.958 281.653 559.592 284.989 559.624 cv
291.18 559.682 296.602 557.995 303.043 556.373 cv
305.771 555.684 309.063 554.604 311.734 554.618 cv
313.945 554.628 315.367 555.727 317.092 556.693 cv
319.02 557.948 li
421.287 557.978 li
421.697 558.854 422.578 559.465 423.611 559.465 cv
425.033 559.465 426.186 558.314 426.186 556.892 cv
426.186 555.47 425.033 554.318 423.611 554.318 cv
cp
ef
600 308.765 mo
0 308.765 li
0 261.765 li
600 261.765 li
600 308.765 li
cp
.32549 .278431 .254902 rgb
f
142.534 284.496 mo
142.534 281.808 141.785 279.646 140.287 278.003 cv
138.79 276.362 136.769 275.542 134.227 275.542 cv
133.836 275.542 133.436 275.551 133.025 275.572 cv
132.615 275.593 132.195 275.634 131.765 275.695 cv
131.332 275.756 130.943 275.824 130.594 275.896 cv
130.247 275.967 129.846 276.084 129.394 276.25 cv
129.394 294.19 li
129.701 294.311 129.999 294.416 130.287 294.496 cv
130.574 294.581 131.025 294.681 131.641 294.805 cv
132.42 294.886 132.933 294.933 133.179 294.943 cv
133.426 294.954 133.703 294.958 134.011 294.958 cv
136.678 294.958 138.764 294.015 140.272 292.128 cv
141.781 290.241 142.534 287.697 142.534 284.496 cv
cp
124.871 279.602 mo
124.594 274.833 li
122.379 274.463 li
122.379 273.203 li
127.147 273.295 li
136.318 273.11 li
139.969 273.11 142.74 274.101 144.627 276.08 cv
146.514 278.058 147.457 280.958 147.457 284.774 cv
147.457 288.322 146.217 291.329 143.734 293.79 cv
142.504 294.98 141.108 295.881 139.549 296.498 cv
137.99 297.113 136.287 297.42 134.442 297.42 cv
127.147 297.205 li
122.379 297.297 li
122.379 296.067 li
124.594 295.667 li
124.871 290.896 li
124.871 279.602 li
cp
.921569 .854902 .541176 rgb
f
151.888 297.205 mo
147.119 297.267 li
147.119 296.037 li
149.334 295.638 li
149.612 290.875 li
149.612 279.595 li
149.334 274.832 li
147.119 274.463 li
147.119 273.203 li
151.888 273.295 li
166.075 273.295 li
167.152 277.85 li
165.891 278.372 li
164.784 276.464 li
164.617 276.384 164.26 276.29 163.705 276.187 cv
163.151 276.084 162.475 275.984 161.674 275.879 cv
160.033 275.695 158.319 275.604 156.535 275.604 cv
154.381 275.604 li
154.259 277.541 li
154.259 277.971 154.236 278.761 154.196 279.912 cv
154.154 281.06 154.134 281.768 154.134 282.034 cv
154.134 282.926 li
155.457 282.926 li
161.796 282.681 li
162.536 281.112 li
163.829 281.112 li
163.645 284.126 li
163.645 284.475 163.659 284.882 163.689 285.342 cv
163.719 285.803 163.777 286.405 163.86 287.142 cv
162.566 287.142 li
161.766 285.358 li
156.105 285.142 li
154.134 285.142 li
154.134 288.466 li
154.134 289.267 154.151 290.087 154.182 290.928 cv
154.211 291.769 154.236 292.445 154.259 292.959 cv
154.381 294.896 li
157.18 294.896 li
158.822 294.896 160.603 294.798 162.521 294.604 cv
164.438 294.409 165.541 294.25 165.829 294.128 cv
167.152 291.697 li
168.351 292.159 li
167.213 297.205 li
151.888 297.205 li
cp
f
190.046 289.758 mo
190.046 292.119 189.016 294.045 186.953 295.542 cv
184.892 297.042 182.292 297.789 179.154 297.789 cv
177.306 297.789 175.553 297.605 173.891 297.237 cv
173.07 297.072 172.305 296.85 171.6 296.575 cv
170.891 296.297 170.177 295.942 169.461 295.511 cv
169.665 295.082 169.881 294.651 170.105 294.22 cv
170.27 293.871 170.464 293.42 170.692 292.865 cv
171.039 292.004 171.347 291.113 171.614 290.188 cv
172.967 290.528 li
172.845 292.865 li
173.521 293.295 174.556 293.783 175.953 294.328 cv
177.348 294.871 178.825 295.144 180.386 295.144 cv
181.738 295.144 182.906 294.774 183.893 294.036 cv
184.835 293.255 185.307 292.324 185.307 291.234 cv
185.307 289.963 184.717 288.988 183.537 288.312 cv
182.358 287.636 180.835 287.071 178.968 286.621 cv
175.892 285.84 173.686 284.948 172.353 283.942 cv
171.02 282.938 170.352 281.603 170.352 279.942 cv
170.352 277.83 171.323 276.101 173.26 274.756 cv
175.199 273.415 177.646 272.742 180.6 272.742 cv
182.301 272.742 183.862 272.885 185.275 273.172 cv
186.691 273.458 188.003 273.808 189.215 274.218 cv
189.051 274.568 188.882 274.947 188.707 275.357 cv
188.534 275.769 188.343 276.25 188.139 276.804 cv
187.307 279.357 li
186.046 279.019 li
186.168 277.172 li
185.758 276.844 184.958 276.455 183.77 276.003 cv
183.215 275.819 182.604 275.665 181.938 275.542 cv
181.271 275.418 180.61 275.357 179.952 275.357 cv
178.415 275.357 177.184 275.644 176.26 276.219 cv
175.337 276.792 174.875 277.603 174.875 278.651 cv
174.875 279.798 175.469 280.645 176.66 281.188 cv
177.851 281.731 179.378 282.228 181.246 282.681 cv
184.61 283.48 186.917 284.435 188.17 285.542 cv
189.42 286.651 190.046 288.056 190.046 289.758 cv
cp
f
198.108 290.875 mo
198.385 295.638 li
200.632 296.037 li
200.632 297.267 li
195.861 297.205 li
191.094 297.297 li
191.094 296.067 li
193.308 295.667 li
193.586 290.896 li
193.586 279.602 li
193.308 274.833 li
191.094 274.463 li
191.094 273.203 li
195.861 273.295 li
200.632 273.203 li
200.632 274.463 li
198.385 274.832 li
198.108 279.595 li
198.108 290.875 li
cp
f
205.156 284.958 mo
205.156 287.809 205.964 290.185 207.586 292.082 cv
209.205 293.978 211.258 294.926 213.74 294.926 cv
214.909 294.926 215.914 294.786 216.756 294.496 cv
217.063 294.395 217.351 294.291 217.617 294.19 cv
218.068 294.005 218.459 293.84 218.786 293.696 cv
218.786 289.635 li
218.633 286.496 li
216.079 286.126 li
216.079 284.927 li
224.88 284.927 li
224.88 286.096 li
223.311 286.526 li
223.311 293.39 li
224.725 294.281 li
223.967 294.795 223.156 295.266 222.295 295.697 cv
221.433 296.127 220.514 296.502 219.541 296.82 cv
218.567 297.139 217.565 297.378 216.54 297.542 cv
215.514 297.708 214.459 297.789 213.372 297.789 cv
209.514 297.789 206.359 296.611 203.91 294.25 cv
201.458 291.892 200.232 288.897 200.232 285.265 cv
200.232 281.778 201.586 278.819 204.293 276.387 cv
207.002 273.956 210.324 272.742 214.264 272.742 cv
215.166 272.742 215.967 272.772 216.665 272.833 cv
217.36 272.895 218.059 273.018 218.755 273.203 cv
220.13 273.533 221.258 273.878 222.141 274.249 cv
221.402 276.865 li
220.94 279.387 li
219.834 279.266 li
219.586 277.111 li
218.786 276.7 217.803 276.33 216.633 276.003 cv
216.037 275.859 215.484 275.751 214.971 275.681 cv
214.459 275.607 213.926 275.572 213.372 275.572 cv
210.951 275.572 208.975 276.445 207.447 278.188 cv
205.918 279.932 205.156 282.188 205.156 284.958 cv
cp
f
245.805 291.604 mo
245.805 279.602 li
245.497 274.833 li
243.189 274.463 li
243.189 273.203 li
247.158 273.295 li
251.036 273.203 li
251.036 274.463 li
248.82 274.833 li
248.544 279.602 li
248.544 297.573 li
244.698 297.573 li
244.174 296.804 li
232.326 278.833 li
232.326 290.896 li
232.326 293.605 li
232.326 294.076 232.352 294.496 232.406 294.866 cv
232.458 295.236 232.516 295.501 232.579 295.667 cv
234.943 296.067 li
234.943 297.297 li
230.973 297.205 li
227.096 297.297 li
227.096 296.067 li
229.311 295.667 li
229.588 290.896 li
229.588 278.926 li
229.495 276.434 li
229.311 274.833 li
227.096 274.463 li
227.096 273.203 li
231.619 273.295 li
233.713 273.295 li
235.762 276.515 237.773 279.572 239.745 282.464 cv
240.399 283.469 241.066 284.464 241.743 285.45 cv
242.769 286.968 243.445 287.984 243.773 288.497 cv
244.677 289.873 245.352 290.908 245.805 291.604 cv
cp
f
289.236 297.205 mo
284.469 297.267 li
284.469 296.037 li
286.682 295.638 li
286.96 290.875 li
286.96 279.595 li
286.682 274.832 li
284.469 274.463 li
284.469 273.203 li
289.236 273.295 li
303.423 273.295 li
304.5 277.85 li
303.24 278.372 li
302.131 276.464 li
301.967 276.384 301.608 276.29 301.055 276.187 cv
300.5 276.084 299.822 275.984 299.022 275.879 cv
297.381 275.695 295.667 275.604 293.885 275.604 cv
291.73 275.604 li
291.608 277.541 li
291.608 277.971 291.586 278.761 291.545 279.912 cv
291.504 281.06 291.483 281.768 291.483 282.034 cv
291.483 282.926 li
292.807 282.926 li
299.146 282.681 li
299.884 281.112 li
301.177 281.112 li
300.993 284.126 li
300.993 284.475 301.009 284.882 301.04 285.342 cv
301.069 285.803 301.126 286.405 301.209 287.142 cv
299.916 287.142 li
299.115 285.358 li
293.453 285.142 li
291.483 285.142 li
291.483 288.466 li
291.483 289.267 291.5 290.087 291.53 290.928 cv
291.561 291.769 291.586 292.445 291.608 292.959 cv
291.73 294.896 li
294.529 294.896 li
296.171 294.896 297.951 294.798 299.87 294.604 cv
301.787 294.409 302.889 294.25 303.178 294.128 cv
304.5 291.697 li
305.701 292.159 li
304.561 297.205 li
289.236 297.205 li
cp
f
314.654 279.602 mo
314.654 288.466 li
314.654 289.267 314.67 290.087 314.7 290.928 cv
314.732 291.769 314.758 292.445 314.777 292.959 cv
314.902 294.896 li
317.673 294.896 li
319.846 294.896 321.657 294.798 323.102 294.604 cv
324.549 294.409 325.394 294.25 325.641 294.128 cv
326.902 291.697 li
328.196 292.189 li
327.057 297.205 li
312.409 297.205 li
307.608 297.267 li
307.608 296.037 li
309.855 295.638 li
310.132 290.875 li
310.132 279.595 li
309.855 274.832 li
307.608 274.463 li
307.608 273.203 li
312.409 273.295 li
317.609 273.203 li
317.609 274.463 li
314.992 274.833 li
314.777 276.895 li
314.694 277.86 314.654 278.761 314.654 279.602 cv
cp
f
333.762 297.205 mo
328.994 297.267 li
328.994 296.037 li
331.21 295.638 li
331.485 290.875 li
331.485 279.595 li
331.21 274.832 li
328.994 274.463 li
328.994 273.203 li
333.762 273.295 li
347.949 273.295 li
349.025 277.85 li
347.765 278.372 li
346.657 276.464 li
346.491 276.384 346.135 276.29 345.58 276.187 cv
345.026 276.084 344.349 275.984 343.549 275.879 cv
341.908 275.695 340.193 275.604 338.41 275.604 cv
336.255 275.604 li
336.133 277.541 li
336.133 277.971 336.111 278.761 336.071 279.912 cv
336.029 281.06 336.009 281.768 336.009 282.034 cv
336.009 282.926 li
337.332 282.926 li
343.671 282.681 li
344.41 281.112 li
345.703 281.112 li
345.519 284.126 li
345.519 284.475 345.534 284.882 345.564 285.342 cv
345.595 285.803 345.652 286.405 345.735 287.142 cv
344.442 287.142 li
343.641 285.358 li
337.98 285.142 li
336.009 285.142 li
336.009 288.466 li
336.009 289.267 336.027 290.087 336.057 290.928 cv
336.086 291.769 336.111 292.445 336.133 292.959 cv
336.255 294.896 li
339.056 294.896 li
340.698 294.896 342.476 294.798 344.395 294.604 cv
346.313 294.409 347.416 294.25 347.703 294.128 cv
349.025 291.697 li
350.228 292.159 li
349.087 297.205 li
333.762 297.205 li
cp
f
377.057 273.295 mo
382.352 273.203 li
382.352 274.463 li
380.352 274.832 li
380.105 279.595 li
380.105 290.875 li
380.412 295.638 li
382.966 296.037 li
382.966 297.267 li
377.983 297.205 li
373.367 297.297 li
373.367 296.067 li
375.613 295.667 li
375.891 290.896 li
375.891 275.542 li
368.229 297.205 li
365.09 297.205 li
357.611 275.542 li
357.549 286.173 li
357.643 292.472 li
357.643 294.254 357.734 295.31 357.921 295.638 cv
359.918 296.037 li
359.918 297.267 li
356.194 297.205 li
352.134 297.297 li
352.134 296.067 li
354.472 295.667 li
354.513 295.542 354.571 295.164 354.643 294.528 cv
354.713 293.892 354.75 293.215 354.75 292.497 cv
354.75 291.574 354.761 290.856 354.78 290.343 cv
354.882 287.799 354.936 286.416 354.936 286.188 cv
354.936 279.602 li
354.75 274.803 li
352.689 274.463 li
352.689 273.203 li
358.019 273.295 li
361.1 273.291 li
367.604 291.951 li
374.042 273.293 li
377.057 273.295 li
cp
f
390.167 297.205 mo
385.398 297.267 li
385.398 296.037 li
387.613 295.638 li
387.891 290.875 li
387.891 279.595 li
387.613 274.832 li
385.398 274.463 li
385.398 273.203 li
390.167 273.295 li
404.354 273.295 li
405.432 277.85 li
404.17 278.372 li
403.063 276.464 li
402.897 276.384 402.539 276.29 401.985 276.187 cv
401.432 276.084 400.755 275.984 399.953 275.879 cv
398.312 275.695 396.599 275.604 394.814 275.604 cv
392.659 275.604 li
392.539 277.541 li
392.539 277.971 392.516 278.761 392.476 279.912 cv
392.434 281.06 392.414 281.768 392.414 282.034 cv
392.414 282.926 li
393.736 282.926 li
400.076 282.681 li
400.814 281.112 li
402.107 281.112 li
401.923 284.126 li
401.923 284.475 401.938 284.882 401.969 285.342 cv
402.001 285.803 402.058 286.405 402.139 287.142 cv
400.845 287.142 li
400.044 285.358 li
394.386 285.142 li
392.414 285.142 li
392.414 288.466 li
392.414 289.267 392.43 290.087 392.461 290.928 cv
392.49 291.769 392.516 292.445 392.539 292.959 cv
392.659 294.896 li
395.462 294.896 li
397.101 294.896 398.883 294.798 400.801 294.604 cv
402.717 294.409 403.82 294.25 404.108 294.128 cv
405.432 291.697 li
406.632 292.159 li
405.492 297.205 li
390.167 297.205 li
cp
f
427.311 291.604 mo
427.311 279.602 li
427.002 274.833 li
424.692 274.463 li
424.692 273.203 li
428.662 273.295 li
432.541 273.203 li
432.541 274.463 li
430.325 274.833 li
430.048 279.602 li
430.048 297.573 li
426.201 297.573 li
425.679 296.804 li
413.832 278.833 li
413.832 290.896 li
413.832 293.605 li
413.832 294.076 413.857 294.496 413.91 294.866 cv
413.963 295.236 414.02 295.501 414.083 295.667 cv
416.447 296.067 li
416.447 297.297 li
412.477 297.205 li
408.601 297.297 li
408.601 296.067 li
410.814 295.667 li
411.092 290.896 li
411.092 278.926 li
410.999 276.434 li
410.814 274.833 li
408.601 274.463 li
408.601 273.203 li
413.122 273.295 li
415.217 273.295 li
417.266 276.515 419.277 279.572 421.248 282.464 cv
421.903 283.469 422.57 284.464 423.247 285.45 cv
424.272 286.968 424.951 287.984 425.278 288.497 cv
426.183 289.873 426.857 290.908 427.311 291.604 cv
cp
f
447.313 290.877 mo
447.619 295.639 li
450.174 296.038 li
450.174 297.267 li
445.035 297.205 li
439.929 297.297 li
439.929 296.067 li
442.481 295.667 li
442.789 290.896 li
442.789 281.112 li
442.789 280.464 li
442.789 279.912 li
442.789 279.449 li
442.789 279.081 li
442.789 278.156 442.735 277.46 442.635 276.988 cv
442.513 275.634 li
441.731 275.634 440.973 275.665 440.234 275.725 cv
439.495 275.789 438.885 275.859 438.404 275.942 cv
437.921 276.024 437.469 276.105 437.049 276.187 cv
436.628 276.27 436.337 276.352 436.172 276.434 cv
435.002 278.711 li
433.741 278.218 li
434.449 275.789 li
434.531 275.5 434.619 275.141 434.709 274.71 cv
434.803 274.279 434.89 273.808 434.974 273.295 cv
455.128 273.295 li
455.189 273.726 455.252 274.101 455.313 274.418 cv
455.374 274.736 455.485 275.194 455.652 275.789 cv
456.357 278.218 li
455.098 278.711 li
453.928 276.434 li
453.641 276.373 453.333 276.31 453.007 276.25 cv
452.534 276.125 452.153 276.035 451.865 275.972 cv
451.107 275.849 450.424 275.762 449.818 275.711 cv
449.214 275.66 448.479 275.634 447.619 275.634 cv
447.464 276.988 li
447.362 277.971 447.313 279.346 447.313 281.112 cv
447.313 290.877 li
cp
f
477.621 289.758 mo
477.621 292.119 476.589 294.045 474.529 295.542 cv
472.468 297.042 469.866 297.789 466.729 297.789 cv
464.882 297.789 463.127 297.605 461.466 297.237 cv
460.646 297.072 459.881 296.85 459.175 296.575 cv
458.468 296.297 457.753 295.942 457.036 295.511 cv
457.238 295.082 457.456 294.651 457.682 294.22 cv
457.845 293.871 458.038 293.42 458.267 292.865 cv
458.614 292.004 458.922 291.113 459.189 290.188 cv
460.543 290.528 li
460.42 292.865 li
461.096 293.295 462.132 293.783 463.528 294.328 cv
464.923 294.871 466.399 295.144 467.96 295.144 cv
469.313 295.144 470.482 294.774 471.467 294.036 cv
472.411 293.255 472.883 292.324 472.883 291.234 cv
472.883 289.963 472.293 288.988 471.113 288.312 cv
469.934 287.636 468.41 287.071 466.544 286.621 cv
463.466 285.84 461.26 284.948 459.928 283.942 cv
458.594 282.938 457.927 281.603 457.927 279.942 cv
457.927 277.83 458.896 276.101 460.836 274.756 cv
462.773 273.415 465.221 272.742 468.176 272.742 cv
469.877 272.742 471.438 272.885 472.853 273.172 cv
474.268 273.458 475.581 273.808 476.791 274.218 cv
476.625 274.568 476.457 274.947 476.283 275.357 cv
476.106 275.769 475.917 276.25 475.715 276.804 cv
474.881 279.357 li
473.621 279.019 li
473.744 277.172 li
473.335 276.844 472.533 276.455 471.344 276.003 cv
470.789 275.819 470.18 275.665 469.514 275.542 cv
468.847 275.418 468.186 275.357 467.528 275.357 cv
465.989 275.357 464.757 275.644 463.835 276.219 cv
462.912 276.792 462.45 277.603 462.45 278.651 cv
462.45 279.798 463.045 280.645 464.236 281.188 cv
465.427 281.731 466.955 282.228 468.821 282.681 cv
472.187 283.48 474.492 284.435 475.745 285.542 cv
476.996 286.651 477.621 288.056 477.621 289.758 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.2.0
%%For: (\777) ()
%%Title: (Set of decorative vintage golden dividers.eps)
%%CreationDate: 2/19/2017 3:36 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"+`H!:s(e*l2k4Sp/Y\gec>3P/pW<H8X('El'M0dHih6@q5Qp%R_.W]mG06:(kkF)4[9cr44U?!U`;+1ZQsf^?66NRhOCrU7Fi
%PB.thaYES`!lt-8[qjS:27A_:80C-Wo5Pb*#[)&sqBnk8\(,3EP&@bYDRMX_Hb%S6C+K%[H3d<H\[P/:g&<@#CfY>l:oEeBgoE9#
%8Yt6'WV1?`mta;[:K2erKj'!,5DsQrp\4lKG*6/BL]Q:__X3+I]1F7Zs"1qA:(A6!?DlLmZs+Vi,&#piPGi\ge#IcqaR8.pppUA:
%F62JUg2H[qRlLQS++#qfLuNSqo+Xj/U)$+6LjtH]-i\33.a\3]?2SWVc@3XV?I$k#ZCS,"1:H.5!9W?o&0?1uJpX?q/6NTR+pW=U
%PLF-OQ\ZgV*@DA_*>kn4onNa+0bAkAhW$>OTjp4-a,q%t_O0Ms)tTR9H>_U0<"1Y9ak'#Qcb8,/UfpPTC.o#+hG3*\0Qp+sMCRKN
%2j;P1<hfoDPDE[.*7*@3U^<SLeLSnE(gsDJi`/;2<]c(.%j\L;m,Md7b=0q'oDZj$oiokL)VI5I>.a0'K$`U%MEnbJ(l'P`]NjfW
%HG#nE%&n'eV<5!Gf%,(+a!'.<=kr@#%NDNsE_\#+IFr8`NJtFl2ABmLa[ap#XFCtUd-G!kBk^>PhHoH7-1+J,foBfWpS`SIhl8Sr
%CL/98,G_:E1>aQ_HW:pT+EDlIQ[a(qDnVqS:EB6#I=,T7?fMu19-mm/qtTUVpsf'.WUJ$.Q&;LmX"f?:N8\-&+W+\p``T(3OiB,m
%`%f,ZJqukg3(C,37POanY6\/Y+]t^s<D+Wc;CWh`V1MJn'uiZ78d,5F'j4*@/P26BaYr6ZXK%oi5#fQ]"N,]I.tV3EFDp7slkI/X
%%!Dtb7GfsaA7b*D^>`MP.==Q`P$&DTFp_SFhsgdaA&#6Ja\tb3Jmm:#'k&R,/CU@>LmOWt]TfM7='8Ps??SSs0<(0&$f^hUBb:)m
%@+[ts79":MA^BHo2/r<k_6AuHUa9eeAaCYUia:>(.0oXJLrU]e754'Q^<49ViZad@.DRjL/-t7C,jD"d,YHo<Qt2fNNU4@FJ080]
%-<leGorq"!rIZfV5qSka5uCq]>X$.ki[]UP=iW]u^<"IlMD3[KW32t%cQpUrfnP`5/^@O5[+kuIV8u3$d$$kYXlR3l:\%i#/=@lA
%f)qfF-cnk4h7c91&]j/+7hIC%Wg%<[p6%]S77I,F;)Yafeq*+4p6p9(R:YN3P]T%nN$O;G7[itn2l!L#D+4VAdd.[u%8/OgRUk6[
%6nGCMXs8Db?)^FtrHOo]ADZED&BMW2]DR6F@47&X]DUVmrb^NR:DCpcUPN*7e5)b\+.7?K;_6)+c+En)lK,<&1@OdHI9lhhhW9ec
%5>'8^(uhS9?hq219>4mX]q?'m*j7sJs2>$8NbVL!*F9b64o\eecNZGs*NFU-eR."@`tVlYmuhf\+(]^VSGt2U'5G5I"NV=sq=!FY
%D#Lt9IVN'dSiMR(pYF;@HE/R4R#Ce>K<<JKI/hUFIrsVk%aR1T!d'mL7a;F[H&%0f,Ti%X+2A"JO,</kJS1puAX`inIkn,f^NSDC
%mUXJP0^K,%cp]]WfAk4Jpb_nMBH-jd'KI[']EHbE<^t)fXsP(r?,8S_\RM5i!`\nFNh#^$Xm71s=*.tH<I@kWKDjh$/k_$*Z&4kT
%]Dtq$'%.Z/pl#.Tna^2d]`;&)0iW5P+%NJYr%&ia[&G6[S>_*GG@\mnF_hf8g#0'4I^W@AM1f?=f_0Mg0<H`3;BCPQM@eW"<-JF%
%=>8=Q(;ot8qLWOR6tIaqcd*]C1[djm<X2)LJbC;<KdbVp0]2u)Uh4hlfs&4I<;.AC@&f/bap%E"c9[[YPR>sCMp6I@Ab86&D'Of`
%`Mb?V^YCDO>%JI7aQ0jDnmftQ1:(Pb#?uDjHo(K^a'-5#l[H*i*nU6ZO5`L.T0JaA2#P+alE`55^T@+]oB.d/oaC!>H-%+dH9Z<L
%9l'NR8_$a;1&LS@#@%421X8j;P5&8Vf^eVbBq%^1"'p)-Jp#^9c7g)%+!(;mr%t.j5l!&FRirf71I,XnE6=Olq4&L]T'.43!O@?-
%MnY)l>>u>W1EV;Pb@SJVDI!rdk]=;pNWctaRFse]H[miFN+`sJ0ZHp@PWl`R&g/A2)i,:t&Z(dMYg0-PW@7"qN9!"9b3X]i")4J<
%H06F/<VV&]<S<M@@puW;O=\JiG9DkS9*k_iI$N*ebc*"a`K.=fB<qlTWpD;I/cNWl9^Adq0[V"@0>h8p1MHl#*r^fWqP3'K\Q'"]
%'J7<!4t&>;!6B6m_jD/Fj;=ao,[YMdNT'Ms%)C'33^+=p--@!#5iOf:86H+?e9mSh#:9[jcp?'"M+qY<;L'3EQ\PNdD"P&T9I'gR
%>%H+s<g-%R2,jIcorMkU":2!O&Oor=)^47WP+iZIdH^!Y/ZbD`OY+)CooqAH7/P76hJKM@L,#[7;?#tAqT0KgFe>%@QJS2;J)3*3
%@I!e"95!-:3tESo=kLOIZPL=U@.jQJ\7]K'WWMZYpcg(,T/V=5/Um`9lAP/hDLJ,=qbIOuB4^!R\b2Y[a5[#@:YF.GchK6[f?%(l
%#?r;(Rf"2OH%$X$Qi8NXnr*sM($)WX[sV&X_2+6`+l5tqaNnnq_g%u7o1J%RU&uV)Opo?pNRNM)dgb+!XW94TD;oC:AuQ."63cB4
%[a\mi\QM5<l8&<h*#X/(?1,=$Gu62H?;*,5Y+jf.86;c$r$X?u1dkRLWK`$/]?:&&9Y.1hJ]^MsE3;)JS8f'-dRW^'-nn<rM(,4#
%%K#7E$Cq/;r#JZU1Lc_nOKIb<(8&_HP"^g2i^MoT(m8@C9>8TO.ibm;%-9c#qj;pJ\Vn;(RL5Hp8NB9j25K,lo-20:H4j1d='6Nj
%@r#G'gfbo-8hrE.,&!C.3r@2ij?A_ZdYo@rL/`uB-rT>b=2aijaAm1+j^DOF#>M"je'F5%8#1gfE+V&Uc7h1D%@lK+8tR/Ac=Dr3
%9q+t`PHr(UPEe&Q""Nkh"X:rRB1dZp_IcuO<slo=6r9?HHWi=rp'5Hi-u8Ym9]RjFrLsDgA"<S5WkYS,RI[:0[rj3aS+l\@6gNVk
%AS3TDcVQcGib&JXq[^,Qqn20;j&(j?3Ucp*7t%Z:8[MeIjY:@AC>A^JY)*%VejBsQ1(W0R$b_J`hcCQMALR1V<A1\$l1AG8E8LK\
%o%X?_Glo2][u?g]b>frI[&OUs4S(R5DRD[(l;1F^j`]tQ^44JE\RNI_,M2*G:M^$Oi5?:!&KD\+MWe&n3p?7s]!I1B0S?#qiNM*&
%/n-n3+gArr'kMdZl/N#G*!7D\QU&CZnH@7NBd(+@>`a(Bhj0?>TMWRLU,q;P59sRW"h"(+rl.kM@Uk+):uQ=YSm9'E&?Db^R7egr
%b_G<?2AI):Vog<$72/lSLsW:Ik.H`,ZZSd^3;N)kk+$0lp'!cf_&=T(^l_1KM:eW_a]K=6:[AT@8\Q>5B\9P85ob7Q&1&/k\qE&"
%B0s+59Bt"ORAiJt'-SuI4GHaObMLorC42=SSBjBuXO;\D:8>nZ!BLB.=R2[ai"RZ[>(D:Y+<uD9`tf(<gD&lp9(FAAQguf?K$DZ,
%+jlsb4![Eb/u2C]Bej/Qa1YiAFa?<lmOG%B9'\H3En]M<$f[:;no0^29b\gte45\';&*'>\D1752[bJ<$5:$t!j%&"/nZ;>;Ft9R
%[Ho%DE?GZ/':6nHmud>&An(,=TLXqIE^?ZsTe(0`R2e*fPFJF[NXh,DV/66R7op4d,%QQg+`5s(,cXg(e&aSKlT?@\TX]gG9D/7=
%%(,g>9'O*GrslOD&rj&o%HmQ%Wd:*f/Sf'g]<H?#BfPQeYq?FJY]l@Oqd'uO[.S.S*_])iecE8[E:/=PeS3)G9Lnc\3K3d[?)49*
%:?MG7[f3$(-_^o2o4%<>F3\`2KL6+@G?"UYephT1n)h:\,qkJ,^poF-rK.E0e_tYJc>,E9q(G_ac=$JB[Vjp$<-BKkJ&V1ST@1M4
%AiHgsb&5T>/G44EoB)aeA=,N-c/8Fs#co6hN$`)JG$[&,\r:(9JK!''&]&^4*W599>WScj7%_\c3u[a?G120K+-')q`urGC?EuSL
%T-4>YeR:C^&BahaH!7gNo,V&")`l8F1;D84Aob)-4=c,<,2,N7RCp^Se9e3<R=#Pb#/lW7&Y-BiAV9GN>o/4_TRsCZ/u;I5F]!uE
%ZJT6#Y4_s^\94&DWJaVRWI:?jZ[[,`K>1)\`Rui,?m6K.3'5mkYj)=hdUq2%jh`Wi:m=NYal6[,Bg!?s]=b)Nnd'+(h:G[)%$t'C
%n+<KM$WmAren*`ME^e=<+)_$$ll.E4@]!@MG:r'nGL-Ou(OK;\_Yt_<a-gN1Sn1LZN+"R3Qb8t<:@!m'c?unJcV1JZMrW7>mY=u<
%>*&M(eX`>_q?=:p4JdJO$:a.4Bf%+DkeEqdR2WTYDuKR2lhjc_DU,/m#r[ocB-XANhUYVV#d\uNiR*=Y9Y9Q*^5F$'B?JP]AVN2m
%")bu$lG?E=/@`Dh^d=C<3B:#5pD@?Lj*,S2_H^7%R>WYbN$QBRN/I;pc[&S^LOm`I<2*ZW-nAjfQ:DHrK`=-ifiZ\ggk*!;W<_*p
%4RSmr'>a?7g&OA8L'JU0aj3MQ[D_=PEfiL%?/8HRRcot9m`$Y/S^ENlf]luC>ujk.X&r&^MsBl-&=jM4abSh'`+!R3(UR,-2lQLX
%L&WoT+c=G]7%K,G4BJ$P\K#Nf/mp!q'_k<TRGtLSrt3$$ik4WS-aun`$dV>:EYhtk/l6Z8N&D>ndAdb*?igeo/2X".SMB5=1M2nC
%k"m<^X=7t8VK_(P&XX=JIGdWX9/0*#kn=F-DhoK7('??SD;AbE8`o2+ghDl3IB5g(3HSEKOQWCV!MrdI[B2["/Ci(AL^)7oM=33_
%(\[$I[!pt7BeY$;0_0X%5@[Q$`n%IVb5[=K^_,PaXS_VH;cQV^WH6-.;Z455[8T-DJ$ATkRdWJpqFh><]q9Z4o"qN,-Hu]&ZlN'o
%H7nJ(YgKRc)J=I.<k-8spIZJ)%WWW:jGKE2F=\Z-@hf'Gj3;3A:,?B&MB;ID1fGg?+VBZl^8pQn<G+kgE_nkgDXLTLf\YgB!:cI^
%U]+QfUR'*%l=.SLQOg+;Vnc7GWB$CGH@k*W+<'NEhaMY.:$A"AFU9R%=8X%W"g"@ZPs_e5J!YAlkYPXX5[C$*KC**H!VNTsJI.$Y
%2kHRL8YmWpf,?Uo:q''fk'Vre)kulu!"B;3gr,+YR%ngWRg@;k]6N<]F6d)V4Pac9g:L(b[=20>r4p!8PI[=Z#L(,Bp]$D)cd;OT
%%,BsR52KsK_d_W/WW$6CpMoY#2.7lhqI0p1XCj9I2bX'4ge_X`I_Mra[E42rY[o,gi$4dj-<61C`At7FouH7mO3T]iUCElSR8'H`
%W2)ck\VJZL5&D(B^Fju%hf5">`$q&EcIk'i@LBO4,ge>LY*O2cT_Q&uju[D7RG[WGEYj3ig\QV#r(R!:;>/8@I@iA)H\nj81#>iG
%@5"nY?Z%'c])%+^#c;j\s'Y0a1uEeiopH`.95Yb"?X%I!bLKp!I4Vd%:6JY]MglM+_a\FBdr)T)ePl'pGd`h.qPWgaiGl@T$ML(#
%TgGO)CU=*,\U51[D)M4[n6r6N5CM<JB`J(d;PDt(:ND_4[?K\4e!mlonL(ski-W2l35%>LIQ9E%G>8PJ=h<JdRP`cs(1Jbm[d(ET
%e]qkEjBKlDX4k[P#D@H!nJ.WpTn`ia.EdB&l#]^b>#/*10EY%>"(4:7daTcID0Hou9Bs(4rQjs<TQki^4\Tn.SSAUg#led#qqYSV
%$@qs5hde;2e_X0+fM#KA/eKZ7*8lT'bX1F:\!-c6ZdCoZKQ[ZMcG\IPYEs?7Rk73DVr'Y[mC(bD_cmG?*Z;NQoOOMlBnV"l2#n/b
%(O<"6Cc2bbe^L9_D&E6qc`*TMFYcTd9lPM_Ms3a]f\%1le;b<=om-_;jp4\$0$MU*eR%VK1tI,Rg1_gBjrt<(6).Eb6?i9c?=LpT
%I<+'0KAPBDWh*ZS6<5X.K/_Qf'4IA\jlHoj5s,h);>gN1?FF%f'2Vo)F7XT'=8;_Q-hlbqhgasMs%^ka3TAqcDtqotq",HHrlG>S
%B=[aYS6R'a^"ND`\)kDFUO8G=!PASbkiPX5d#X\>+2r59Q#@(s4*frn^*kp2L)([9/Yltl?LfYe7E-<p&GPJJ#<rQ@#TpPuLLCT5
%>b??dQFNM*1/[%b6(E:#9q`*gTc\T4nA'%:Ypa-bcL[&$[BS$&Z\\F?(7t]SANu474Ehc_&Qlq'!aU*>7Z)-cksG&&[NWBlAcrOh
%]$*E/^-;o!<Btj_i:MU8!>,ka]7,Xe'SBE#8cjVKm,]6QSP,_HNX!l2%;I_7K@DsXO@@P^f+d_`5pdFVMdm+hX5pg"Y9kJO&=VN5
%6O$gXq#.[g^],)4Q>YjA]G@,naMTi+$iJY6TQEf62`Mm30H#*L48B.AQua8Y5(Xcs$,Lm,6RR+p5M-g#&2BF383X7TNI5--qMA-<
%1r5RJMRK:ma2:/c,DpW3&!E<DO9#WR.LggXcOJ52YYi>m(s3)tl7F3'63YYc*`_L"PRT!,%QHRlJ7.T4H5;$!-iu]#][2iO`-KZ8
%>X[[u;K`ebmu%Ai59Fl82\<STD'YB#M&[n'oRkM327O`+=+U6/$0qeX/nGN76Qld-5"MrQ`/R.#)2IB\Q[&p#;Hs?5%fq:W"]IZ0
%6#$Kr\AoFb63%P+j1,7CF$Q,*8Fo"*T!(b7f@AM.]r\L!"/!(/_P+b.&#Q<UFdPW"E_)r;o@QABE[(T=04cSnBqPPUd\X2fl-_6m
%2%l;ONpgYuK@gjq=DG)Ek(tR15mM'q*60j+I#iLk^cYH;E`'Q<((/ZM"+eM;#G+:.HD)/_e2BM`PD=l\G_!G'"!.7W8K<C_)?c`d
%NJU'8T3a]>dj=.Jlqrl=>c-TloX@3t!p#IDJI3YJ+j:.f#mYnC.<*T\qD_4dKg\QWd)R=<M'%HqageC6YZN&7=n4mZ)WQpX;CKm_
%)!VQiKL]9@'IXE"2/FBTJKLjhYT[6^6KBkR"Fb',gt:/p#%ikl]%OktG[L`pgo'#0ESqsMTdJQ=,/VXQrWJ[5:_3gmM]>Ge&3HK#
%'Dj%q&`^/2VHE$p'%!g#4$:;5=1#m;f@Wqh#+B]gN$F$(^u8196D(;Vk51r'@+#[.2UJHjNZAE.S!C;/2nE#A"]ai-<th=8W-eSg
%8!=F[PpomGLBPC%Q#+:W^`)B$pYQ)=DMAF]Mu`V!@YZ[0Y3`gaK;n@>4!E'?":nVM8/+54'fZ^E)@<boW\i]l4dh9Tp.9$g^*FtS
%c:8ckQ^^rg!-;&I(R"p:#>h?@6rLCb'R8l77=n%`FK+SZ#)OI'c+$:o<DWBs/d[Cl.:+FqQSesS8VeTbA#TkPQ3K29,N$m>8/d")
%T\^(ih`(7g3O&Wu+m6d\.ZFO*'-E2Q+TVe8kp?Q88qFt"6<B?e"_@9lCM6T:R%,'%Gq;An8hKul1p&<?EC=;e`fH475U(c[\_r%%
%#`NcpUtPoY%b=OagLjE/d.hp_;'")`LkM3*Unu):cm+,$<+oD>@g1hB+#?dt^=6.Z)I%8VWDa=LK-/&jE=*"7E&l0Y=#s8^lHpSm
%(eE@b%F2fa+L@rLUC%<dF@W>BPWd8i<*?4mYg]7c#s$rMOZR8]k6^HK>(F0=+Gh,2PQjfA"S]`^o/u&>8QQ<mIEltf^/(WR8,&5r
%n[NDa#CeB"#5JV&U%WPlG#_)g][(&UAnXhJW<bW9:caQ7d_JEn9L?TYj/&FFg<^AI37N0qT[>%](ij=$cmA&6GYp(B)8ts+J8;X3
%pIlE34?"[26-.,g,EBYD&6"`Z5M"cJ$&k$E*;<mW8MiT**rnFs,EbgA!X8!HE]LsB7N.+RXs/WT;'Q*q*#LJhqI)`U!&[:X=K(bO
%X,lsC3gWY])hTIWGetNn5gNq)F<ke@5A)fK+@($K.;2gH*J=s&OMHL)LGk!pPR#,XiM4Lmn?'f;\i_`=5R.k,37CDLn%oMr9co0H
%=ZU?N6E+/]K0Y#U.C^1I`6kDf`(_Zg%2*GK3&0$&/j'ELX#VdP7Tg(L^2NUDQJt2/bnG17#^bdFiS^p@3%#N]o;.bl#/SlQUZY)N
%$$/\oKZ_Vldb&bd.>,_n8f?8HZAd!Rh[1F7XqM?ZBf3-EEuE@QbnlU*&c#iZ*[)dp&8RkNru=Yi=-!I8h;NWUS=5TH]jla!*e]\(
%&<t%iYJ?]rX@_V+?%Wp0UBZ-&gGl3@r;cK)lqV)\,TRHkW-1^'1=)ZA!KFq;Y(`"fmKfuUeX2k-/9P[pJ7fZ8,f4P!]oQ<t^cA7l
%'PcQp.]%q1]>M0F')NioM/o6efE;<W*eg:;p#7):G*B,j,9pmEMBPin5#!N(Hr*3Oe"gFR`=G/P##$6R4bM1uYq:N_`al(1L4LAn
%C()1t2[:`s$\bEbI0)D6A!&V,Wmp2QQ$VKohudJg,I@t#qEa&'"qm5#QL]RC.`#^sap8<o%$&3m;2cJVW\\$/8I\-eQU6*J-9:*5
%4GF)Y7*^T"(g.csZ0mRgj93:sO0emG$5og!qO;d4Uq)GGW)s*n]o^*]#fClO$%Q\73XLC/6=NHX4>)3'Lo'XphuRn5`3d0DW?3mY
%&uB(LesJ_]P7s,#,B]%o;3)PVnE#nO*]_Y0"DCDQMCl-`;%l[>)J6ef<*Ro^PbfN+C0H!abQOc8VhgLd\HYW54S+(YL\O+o)sRH*
%Epq1+*uH-X2?FI?+2TZ*Y>pA;(YWa_)cYf#96jok:UUiW@+%C888*&q%:Ja/K'[GVWb8Au2h`M2nK,s[WDEXMG!Sg%=+uf6)OT4#
%d8s:<69A_<<S@aO,9@$<-C<c.A/o3\?A/M'32FJ\<%1H\j)`XbKi47j(*[,C65#LT@]6hJWFr)EjJ[pP^k3o;MB]>Dpjc3K.!!l!
%K]"3L;q=7#MG0j)N(+./@1nbY7bs_0h1174<rrl.5/BQ*()S;\1DX9l(/V$[\N'(0Phh2C7$AW[F/4mcTYUnjp;6n;&'9-SiKL)m
%3Zkq!fAHWb?ugNJ?jY2DVUC8(^+/5*B8MuXh]Q@4&OOuK)u9RpJn1iieP1.2I$/DTAuu.l8<bS9eJ*1#X-3F=Q"^Y9gZ&nfZn)Yd
%TT>=f5H^*$TGjPT%8[[hEXt8q*B]VJK2TirUl7,oL^aGqWDZ)gp+`;@Jn$24dn)miP%b?P(AL9AVN2I,7V[d"cA<0SW[!k9iIV]o
%bS-D:6.?AlmmlI`Ygau!A'EsG&k[JjPS/RG(cTmK8qg\t34[`d,EFM]1D>o>k6Hl`0M.9l2P%Ib.b.*3m(,t9"[6mQ1Lie3"=0$V
%;>D(XV,TFsM,-57o+5\i/lg2OILmnt=XZGt(."o9;+ctO[1b)Kd=<q)KKV#_;lC+OkY!X,V4mN?6d2Pj^+Gf]$*JrKBY^B3W6cph
%BMDY1\+6>g$Bh(3o>s:.-JpN\I"NIWi>7o0=c2NHjD]kmHg#^-"J])9DY_H/rZEqSJg@K3L"N'?isM-'OE`tZ.n1m];.Am%X9)3a
%M4)P<Kd0uiVpYKeLlj"f$JK3L;C`7oR?/m,6!mQN7BFG,;Elkd<659-7R"@m+^$_nJ.,/REXttbKE6Y)27sKe*s+VoCr%C'-oK$[
%lBi4RZ1:AgeG(FY0,l1>'+YF+,)M8DM2=EW9S&JeKEkpZ9+#tn6]*=3<iOjhP]FfhW#2TJ%VCZ"$j@!.)&GP?AC[8I0nmurKS2+Q
%ESdeF@CbntKu,SU/;m;g7j_cO(i/51KYUK\K%pC?$nd0P"%3\N96IC;pme5Y%-Cig<K0a]5cL"fM,AM/BbWXT0Z>dR+c2RD*TC1F
%dn7nh64;a/7UBs^eq2>cMmZdUGa+4%&'20eaWg)YC5Pt?/@H@o_EKBuad[Cj(8@kh:e-ch#M11Gq]g3c"SFkj4rMBu`1772_dqa:
%asd!u_YPs\W(MF9KH`=B)rc'8$RW,'(G]N8m*Nt]>Vpi$4=4U3V?H'BBaE=SDC]cV1;Qjn5*eat!SBRSKimJAR4A@M=W44I3L&gJ
%9G."q49,o5hW_[+!].t6EQ(m.jX+2`TtWhop=OSJd?H7FQ8/g)"1;eKV4L=?*c"s="-X8G_I.qQ0$<CA@<?@\1@A:9!\_tX"9q0c
%h5=p/?#&I//8l">M!T]T2[_LQkNPl?N]Il3j\%JrAgJ+aNKK6$HjlhpGE%022.do!N0UXJba1VQBlZS-gVSRqLO&qA5\N/,Ec#!E
%;UutPo*,Obc3ZESrI>D&K%;Ch8q"`.C0*G(=;n[uMag6(()(k&c<3Cn#mjHJ#?YZG>AOXC88q/EK_9nVV4g"JbP9ZD@;$TND0UVp
%T9,3rB9;H;!BV"<+G;J4A<B6BM^)%j=a&ml.O5SF`T6p\/-q/I728G66@^Vp4-.i`+i1#@cm'/d?hY3I`\dUrb0MfMfVu)rWG!,\
%SR'+XBrMi00FF_+Q*k*=o`V)G\>Mu*T91X>E[+7(Dmc>bh/J*4Bg=I@XU-aVA;&1p%O'6&[:"p:VmDbVBnX"8SgkJXVq,:@1Va5F
%;QtDh*En"_8lY`-*P4Da`X[59((9b2`#=IDK62=A<5i3*X%5d_W@r)KL42B\d+0J'jf5:XSgn><_Hg?,Z.;g_RX46"nr9l+HVWn!
%>"t`lV9@A#!^sk<ALt^[R*muCODLOO`BZ&7#uJYFp45Z)=G0W/n[S!^(`FEo_Ib3UA+G%1QW-.mae4Ou:;b)1-u7MS#!LuUj!$Q^
%&t<tp;Z_WN""T9T""G_lIA5FNa+=qA,("$9&DZeiAu`Y/]=(<<N+^*a-n!X%G6eMsX'XmT8Cs]+m??cPM'<EYY84'"(Ykhj6kjQT
%C`paka9q.HJYUJK>aoP4lFB<TaA=B4*\D;g3>-(!FKX"`LE[A#XfdArjY<05[IOX#N&sKTBcQ%q&L!I%GiYFS-:>3!L8C2f:n\qp
%L->bNSlmdu#M^SY>a:$'5-<pTS"VHm81$J5?#u-'-I%1cEC2r5o(9<*31h0#]b1[K^6Ntd%:["&7jMUI9j=^^5c@_1Yq.",jdQ-V
%gd3LiU_KZPWA<>nJ[C<cL_9`.9TBZ_bP!gp3a'O&%Z-I_8u(lUJeD5i26-sRVk&o1O+cCof"hRlfb:&X2Y7)%g<^4-*&mPD\sGIY
%JYf5<CEX-/\?lp9X1TR@#/i">@f^Gt&=.qf7Uq$UO&]_,2$YKUTX!$>+2K0WDBeHq@6pQc'Z38S*]$8$-ml\=C5Dg:"7-KYI[%38
%L=hKRFj9I`49/Y^1YRtj2id4NL&m6('\e7_5KRbo#@-XT`I;:g-qftt[^<>>-VY//=].TQ-D1YI]:W-JV,p5VS,T'Nat]W&VDKV4
%RI*f8]dZeC7jJmcR8SS3HCS+FLW??_>V2+(C#G0ue);N\2L4tGU,+4,jAR_C,3G8_>-ZF#91,IZlo>);N*PW>09fW@JDMKp\_NsR
%3pn_\&j(Z\B\NdAE0pt"=[:u:gAe.C9Pa_'0.Ko$C$0MdTW<+?`g?cdVc=+#V:)$d2`jQY[=8ra"5iH=Z/u20$o$?Mk%Q*'9+ITN
%K`S%*%3oYI'on)*C%c40[dPM?gTjdk-jR]5XBOO%<6I?C[saE?@A+@5;SB;kKQr_a7rU8S,3>lZ$qX13g=G9O:5[]+>`q?]'VF*s
%`5-`^2#=!me.sOc`(G\.nm/PB0(kf=R<>o?($Q*"7`MOl,<-&81FEIr;N>*;A71%%Tgb1q,dEoKf%Zt0E//.I7u#c#kYcFU[\O%e
%%i?,3GP*Z.5-:"3D:;a,k100k)]XEEE5ZdVR\t>clBP*sG)MFiA!W='9`*"$o]'_+59RR0q@Q@lIp5RQLts@=0,@,;oRi6f*FP8O
%V$D=q\'ReL;5lGcaCJW<csg^j:8>lG,DUH6$T"aO7`Z]-<B>Fo]J0TJb&>/$O*jpQloL0RZQJZ]O:Ep=q,3*+Lodc#$QJ@nEaA?P
%(8OZ9%g?e[FYPdO>SLCJoLtQ>Rg%1d2`WJ#/L,;s3jkD6jq%_Zcm^Z=$-J2pb!`+>%@3G#Ao2UH>fhf/<tMpL@%r&Z=ir_/R[G]P
%5&`)(-PmRDbdeV27N-?dBQ-,pj%$Vf(_)praL,*\!gOD:Su]DT/;\$VVZ<Wk#H"e<!"KU!8QD6XZi";b>p6C<a"76Y+`WSZmSoj0
%Ki+p;/WGK!7cl[`g;es/7?fX[!>q&9+!FN0O/P"kAW=q-6UYDNG#9\g/.H:%Ml"fF=#*];n/XZVeo!pioa++3Ep^g%'nldF1,R`H
%,,kUJe>;5XNeS_d&5<RL[cIO7i5S0Zg><C:Z!$iJTni+_,]4Re$0@J:+JLr#C9O@NBsT#@[Vo34)'8"LApb05:a!X%ak5+aeOZdC
%@VE')La40ieSC$JY4`+?-;)>,f]9_B\IfHi&O07LT9+#uhb'@Fm%ddA&154i&lR`8AK$?Lj$mXq#aW'/!CX$Y.ia,qbb-sE1I@4B
%[Qg7PeHfq;NbA(47$s;MNP%kf)jqfs1>?B8O>_RPARL2pPGBHM^068KR%3;QD\#GB7QYCe70#IEBXT1"f[-O1iu/=gTZpDq8]sPi
%9f3mZ<>#Lu0Ufd<&V7/uMYSU-Lf1si:j1!GESK=@?)9589"N]+YLEZ0l"p&<30]^rE6d^HJiWg`29]Yg7rt3T)trqo"Y=67:Q^)L
%m+-VK8"0K2(N^CKb%F,pJBgGK1&5>l*b1kVlqFN)iSckZ%_7F[)R>U9*N6ji$;"b<)_/]`oE/kJU`[[34J^OQ(#c/@=pUqos",N9
%j-C!d(=R4AqLKs%,/%M.R!nc+d%/6HRo:YKqjd-a6gADo`#NV"1"&!B5-_5Oc38r;b:nsh3M3;$[7H:GK2-O`'9SbYH[<lGi3a.)
%Qe3@!3h[jCm1U+L%)aS"mLO?iS7rTlasSOqi<Vb:S$&DC>1H)S8IqA>`Bd0+dt(V`'-I=K*Q+"7CEXkTi'fE/Y=b3u5j;g^3(Q@[
%.[HHd"GL(oio/`c=fSr@@&`6*!3r%(IL&_R$*Hok.R\;JM_cA1[a*1XK9.-VD-A;IoeA+i57S!P9aRCWUc.m`*%7Y9T926SUstSL
%)KS@Z?sSNk[K+HJ(gTiU;o`9Be$sLoakDK/i9"jZ#j,,9UKK6.+tK4^ek$%HlW^C?o19k-#Co[d3AM6b"WYs1?bnH`')I/l&,_02
%i9<DjO\rNc;ORuebYY?<bFK$_$U?%Rh&2Rn/?)NUS5lQMM;]p3c!c`NfHB4TcS0DI\V41a;c#M^%Ag4)5%;'f]ITI-JOf.:$=gI.
%QDJ"`*#I@Ia__Js3jGXXO't$0)C2T02K0EDe[1'e_0&9eeRQ>M]-8G@R`C(e8X(,RSNjCi1.:]["(A[9XBmF=Oj.ubnhA[ih#K''
%RSb8ac9"J%[#-jf]tG$SWB<GYO[;,q>WS2u*N&S"iAQfH2@1mR6%OEVp**r)O=R0Eou8#rO6RaeMR/P4oLu$+EtKa%*BH52Eph++
%;]Cnj[EeZ*oWq?GeLkkj"a-N8:%+droXN)CQY*9=VV-*LN16W8Dbc+_?bplR?>RC(W+g)eQYNlP`+<>9V%D;a+X>:P[$%Ic#'7=Z
%gFW9f6UP+5)es4N1-:i4>Vf`QleuT")X8uh+XP&ACY^#'nlPnZBP34G`"+HhlgPkjUc&M=G(;"1M(>/e%dKRGS*VA;.gV!D@_I1m
%CdG9N9=q"0?,<4['po.UGX*50n48X_!jGWGSDgj1N4UqadnI+WLY-;"km)Ygdf[*/`?e-(ZY9V/Fk=T5(#%>-LY'%@S_h^(">;S6
%eFjA'NAPf!jWO8a.']'HELVs]4B3_O=`!l<AfK3G,[>D@PhW68nA+'0ME5om%OKARdk8=a&3"KI/LeD:VSNL"dc7;c4bT1:+A,nH
%8eK'`_*XGKh!kgdf-)Dcof#jaSX)XBYenJ73F)!?;+MlEF($D"mD$#OQDK^'JWW8sSROAobnI?91E&.9-lQR"'iQ8ak2$G7('R;^
%';bq(m+%mLlWMs`IC!D/a\`@-l'Q2)b'eQ&@\Kc2r0PbkGK&[HSdkW@ckeDjg)gsGPb^h>dC]E5.UX0O#mtVr^/%?s+!(on92[_e
%R6Y$dU'S#aPXNMSi::1k=UL%@e.So</W2t(ib4"21t(@X+Jp%<Wb"gOV7iel<XVpM\Sb5g%"s9DB5kC)DcrV-TS0k<@m$*P:P!L'
%Ik)cQF;R_0Z)0$E_.1oiH92+mRdgj3Q;#4<&pE]CF&8Pj6-//*AQd0'E]^?S1BF((NQ_KIN$X]\7#SaQ,W,BInK\J+YTPX?agjD8
%k0'MdMM5g*(7ng<kVL45E,<c2R"KX*'*/qg'bK:h5t8-qR_)D7#srsRPZ>b%c_KnVs4femaR'+*J=5tq_"B]'`uOFL\^SFXfV;rI
%?cSq&HIjl1k5l[1`LWK^EO])'Pe,N>+HcH(fiQ7/'cYJ&L?&C!Et<_9mRuPbF!l_bbF?*pcUFC([[)!E>XVj5-Y+[9itSorg`//U
%2$Y29jtrpQfo0Kfe6d'V^nadT4W5uJL#%R<B-QkX$@NO!*iK5\]W";9GK#)#/]rCjI0NB:R$(!FbjIo1]@CV)=.DLMC$Z$"Oqp++
%cfKQ_KZ%qjel;Re;G1O&]'714S(SC]EVpE\b1._nC1fE\,867Ll2V&^one-0+()l(F1?6O(p1ijN:n'EhTOU;L3/^n9?k!R2`.Zt
%UI.%DWY=d>`Bto5;:ENiiZ1HKWPN,&AqM--.RI`fR>N&1%ZM'+%MXN+,20T]XQtVJXJ7FN;pBW/hkb^nSLXs$Mh!nl'bB5N?M^$$
%Zd1*]/7f/.\_Y739hpaHinFe#.^\=t))0)e.2,IGIN0/0&XrK8G>IKJ3MgEm&pusRMO7)VO;l\Ul.a`B0l?)P4AT>aVY5tK9'U.F
%b`2jK981`)$J),%Ausfi,.m5?dY#pfE*hViLfg^2+dA3JPnEF21?S^85G-;TclBr$LGqW\h/(27<+9Q4H`\9oXH#iQis9s>^a.07
%Z]Pel)/XeEbher4ghS(!b*cQ;Lh"U&WZ,,roZ$OQUW>t;$*nhC%lg\a&NQGrTuL$//oZNaUQ$_:6X"dAp'kciZ.U?W^F/jY2d=o,
%8SBXaBp4uF6RYT;hd]VXL'f#i?.\pDUf`VOAOsN3EX3s;Mb5"@l:k#AV09(PZ\]LI,A-PYcQc^6Qn>/cq:S:j-bH>]CMYf$m:d`G
%BFYYA7,iBSM"\$1!BQnZ/eQ4u[MUZj7<6(^b;jFSQ&F^f#-h42.CSF1!0sUnNs0hob9.OS_US:W:m6[f1f!oJ*6NoPN[[u25AndS
%Xkid5f3m=NCjl`A2+%H#loNON&9CPOQC<`k#3d?]'rQO1a"R)JM1-#Uk$SgJ6?LN)]!k+=:Gt\9U1SdbDE<`QZZi,cO<lX%[..T=
%ZT42O@ptTFN`5,u&Ncan#**_ZrR<!5]js3X&fO1l[ZA=`:ud3M`9+3@4S,mF%jFW(MN8^O:i5DH=%?T'qE9$:]8h9KoBKb\d0*F`
%s)s_mkO-/nDk:f.Dq>Zm\_O.V)XUS5o52^HQ/'g&-d<Dh>Qt6kNW";Zl/'Y?!Ph%";]UOj*As;Y:=9ad?LI7A<mNnHQej[6T,A\&
%\W1auB(#'s+Di-rJ\G0SI0K:>UY\'N!J\)/$7I#^_;1OEc5\-i_kUOmhIs\rFf-g/i\0;Vg-B;UrU9Nq*=+rXfkU/j)*4.:Sl@?N
%O7s"+e"c3"42-'$HA5`Ld%i^d7K1#4kejmom_UAD[(Gf\I2GK;[->M8^U)g9-EUH,SeJE\=Cr-8M0,]HhWZnD[8@jtl:tErm5CD)
%(B'AISlFmcn\&]1:H!"%lIS_#Z@OA]#9h;5hlZil2lUn^07=D^/4sIRISu`Skr$1rSYY"YB!Kc&0Vbok7C.=^c/\2/Z9(fq=>ZYr
%q2#LeIfIL!::<q3na/OY#/u*f9$2>2rD"qi.)-oPK4cp=s!c9g2=7`Id2Jhke,Ab_5$u6p`H9)Na(1PiQUHPsJ&`4A\""H!<YhCa
%e9,@8b"ZLs(G%n`74:)(3q8kA"^f">]\Vd(K"2a)jt\?F)%>X_A@<8Yg`i%g`,^c<D@t&D@Q=jHJpE7813I2@@QB6bMTOJG\T:`P
%\,VkSAZKB\%\fM1SXAkj7p8LsK[54?bRb5*HhDFM[8BA=1'KZrpn[bohs?E0<&<ku5HORjh+"eP*8S6kp7!jo><Ro@W;es0;l6-T
%O4PbXaKnU%WRkJDK7e'i4(gIqn6FibI@J>]Smc'@g[?+]CWT>Rg<>]j9S6,5gm[FAj"A;S]@lW-qr_X74I3:Fhm2oP_C\a(%s=Xo
%Raa7mUZTf3l@TDFdq+Uqk]OXCmB$>7g284=/DW?kARZ\(hS2t#ea6?ie3?lC7KX,+]&73`O8bJs.K>lFm-&'I`jCN:@A[B/g_fgl
%I#P1NUXe,?Q5$oOH"?9?WOeeilV'?&F13EVfof+D:N4.7bsg1dVL)ic/`sUr.`\o1J.-nNZ(GGY&84t9Q,0gJO%Oquq@H?.5C&c1
%NZV&9MJ!f^;>j2]_4=gQWguWJkToD(=\t\=b;aEujVP/n;f<VENS[^D0eu(#(rt;<JhN;O]uYSjjFBEe3en#^E[JJjlk=5"a5^'s
%=R>VS=h^Q@f]=oh2j<+[o:J%J;/3S0`D2To0>hPPoP\9_,_T*g`Qcbbq;00Qjte"CmSrM3I[6t1!@KatogZ9VAMJ?4j32f%C6kP(
%1UAEtANVT<a=$9G[QCBWm:Q5LK?Be&0P$lsVI#8,KCZUL,?WFKQ\G#,7DACVlm83Xl()8-BQiP4:HgEfaU(/K]3sgk@!j<CReF9U
%f;JL%CqZFVe,:.hr#%ZR^RlfuR2No+Tej#aG\6l*Jl2E(D!dP]m)<KG?-J#IaYYfNIriSX#-jU;D3^eN;nj5LaKQ@W3i]Vl8TQ7n
%-FIYMUU*rIe\CJ[b;:%(hq9Im[Pm5:pU")*,pu9bpT/[%P:#Ig$Ks7HiQaiej5fjIgmO4@lJqXLMiV#2D%/JT)KG%:D2+S7m+A8/
%I*L[sF^,4`bs"3b8PHUBb;:!`5!-'?[@GA94u+BIAnT\-kfhAEp!YhR%PmI=3bU@>fsZJi-T@]h7!Nq9HW.&u)nj8C/H1b4SQ)dJ
%-jmS%](+sX'BAtVL7_Em>O>IWEN@Xd-iJ,;mSc9TJ1&mLAttVj1[LsA<L^C/m4;J9/^R(3.NIP\gWQR!DGH?k;f&3>3pi+^>#0ZC
%CcF2gK'b+O@!cpBW&F[TI`ij7i%jr)SW(jJKUc.XS"Vq@p^MRQ<`(-t6mIV)X)X:on_Uf-$Kg8U[cM2-'4iWp[+[Y07*3lF=\2sO
%G+qZ/IQ!C#:&A1fl^]G,Xt?-ZXXJ8gXb!m*g5D,j1UCP:Apc7(#1mlbp7fcbe]BX(VLL6kD4^HqAEh<I0?R`Wb-/$-MnLN;(@-q4
%J23aD;)2k(WAh6VZkk#]B4f,XT(TcFRDr^iB?.[Q7B+P\?Bd"3R?^qT1KS:&EDK<+Z+PV<R,hApp>pRfG'GT.@eMFPR%8f<<%94d
%_-Gf'=EqJ[(3dX^rT"C7/D@9Y)8F-b581f9lr#IUSu?,3fI\le]lk"$`YNkP!t,ljD5#PsH>P#$g3Nur(@Kn(\SDK]l9_O'[+^"6
%X"BjL\T67:>&Bt`rmP&q?4kn\_#!c3Yp9DZIWS/)VA9.Je*,f?LbGW&"r8bed:+#jA0uD=@>55=ZI@Qrp@)4hPOc`m1Z.`0ebD(;
%DDeKPp*Ob@ES=s6PFT!M?=G[*Qa\eTp#Mdn)Z@XEWGPq=8[VXFFN9%<4/oC-kIi_4<93%:RUJ@KJkKghVg'f<pl<VKV)3(Uq_i'E
%<gq!%.-Gcngk7F#.Ef7PSs+4_G]e&r])nV`I0C\Q0'??Xj<B\Dh"WXAY0hWFVr'-5F=4CZ2q&S&ccda8Cu+n?DW@?c6nr=i/fEbd
%g9oUfQ]@sCOF6rd[,$G_FgF;):]6qMS"q5Vl/'[\(<DRb3Zb\_`Z>NkR[=>NTb!pLPYuo8-KmL'kX1YmIQYGlSn/m2oeY,'GCfj-
%VpRRe8U=N=mn?m)M^dU&Z'(M"R$k7BQZW&_>StRc>_ooJfZq]QTZ'L;`VT%4rHC<SIj]4*i3^Vs@f:MUr]@Ys/_5DOk@ST0G:pXp
%A?l,\:4T]Rs8AAB,H_#nc:UQ%Ej=agV&>IGci5QIHl$S4M`'B"])c&'CFA.BkUG_P3B%g\S&W91^RLJA/[4rN/2QH_NCig2>LI>r
%ru'_5B&iBZ#6;q)]N-jV%gOUYb\P:mb57_3#SFC8AK#s=Fl0Q1=u?oSa=(Wfd3:qI\Vrt3Clon<l%t]7#&B>J>GTAiTdMiJ?f&Cc
%P>-+e9R?=]LRf])Xalb*XFT\Q*4Aq_2VQEO\'dk5/+$*>20)uLO[#>RPrfkhR7S(kb*[+Q?mhi>U'uIMri^=imu@0iaHTiUO:tC<
%PT(fWha%3NU3fh]1=4ZMNm:=U4Xd'cc98[qjMOqE+1e@A%343LV4ATn?E$jd?iTj7!f0N!bHk1qf"hc<78nPaSF"oYMo<d_nZk]u
%>d.:f`60@pZ:MVZ&hj9q`/@6oaMa"Z_MJ-5,4RG-&a1G/Efn;`j?/=qg#k.K$)ARVnB>tYC$mUB\56(4l;K8*G*;RI;auu#9XB0#
%7$\2^(7.`h7j"W,ZAC+KAh5R(R&E`iPcqihnf<A3D]bI.hH%$=1>ff"N`3%+(<1>T`aRS\j5MD_.5m4>(%B`-`=#/P1Lh@?2_`M.
%%87QTf>[,MMqaRF-)U^1H]!!,WqH'MM_D&t[o<)?DOjt$b+BT=@-3NVBDA4BqC!AQg+r6fj?tLk+#85uWW8LUkqVkbX*ns69mSc<
%3_;K08tNFN^FB$S?]5$"B6<;m(mqaoRFa+8?:8IJ(SSBjF)ARCrmRfYg:*p:-=uXN5>,XLP&/mG#]O88q`biZs5Y\Z-dnJq2p<Cr
%=o@.`]"coZOX1S7GEKq5MF`7Lnea.se'*1\,FX6I7[?4hneb:El-A"Q?fWpWH&QGVR7/0,OiNiO4N;ju<pisDm3%nmFln<O[FVB:
%T=5bB[P>sOA,/FS-dnjF:Ys>PTh>`9HAu6J<44IqE$F(TURCArE=."iS]c$_9WNZK$'P*A;m1#q8Ti1tB=PWf^Y2C3S`EF.C"9LW
%4Tk0eRo1,EMDK=s;O5VP]@pUs1mCR.(DdNd:-KtV(0oWN1ot>JH\O/N;fd!(:aR:FT[Q*HU=0:ujEd!JS"+fl/AXl(EkT!<CS)r?
%r40nV6'ml3g$O"Wqb=:;Z^DMt]A$+:\^f.MG$j7*-^.6S?L3d*,#OdTKeZ@B^+shCZ/Nk5GGcXAD+rmEW#G_KC"$-!+e8*T?Wjro
%h]':Uj4pqC>>CRO9RMTN3A[%YGNLgtO4.nDG3phi\`o"5Z:W^nR[_N;=[[=hBPnF,c#Y_._1,TUF48Njq2XV"E-p5Ba)`,9NL7P,
%/jlfXiS5WI>D.'UE,H95/],%E2k6db/lQBuiS:eoF0F?cqI-:j`L'>I/@Xuk5r=q1'D!6jc.a$gA;CX0(G\\`a@4)NoJ?%qE&3!I
%`8Z6i`Oum?Gd#$g4#]CHlfVN70puQo'3o;JjlH10S(66_8kp/0:TLlmn(YNLRDNk1>;Jp<>/<p*mP94rqom9ZN;]00BiIC7S&nei
%GM16BOu8;4F9]H@B<Jq#Y./MY1gdh2m_:DN9$L,5R`Q.45u1,"1A"1e).ff''&QTY-2&4X0ra%.F-PqYIT([Nq=8e\hsTE1Kh:qj
%_g\1p^N35R-!>pW%DE*UJ#F<S^W(D.lr*O1VOd=::0<7OL6<n]PqbF<_+r2gp_hRQom_sbI\u4$Jt,eiKT_qBSNN8#5*[)(RVlY?
%OM,_'KErm.To@o'H?0J?@,Vts:tK%;Mem%G432IBT'lFN^SgI"Osun\>@i\e,u*_0_POS=(/E8o.CqpFB]0X'F@(0#*1glBB^Sdn
%(];#B.<c[_EM)goO3Xht<LE/aG6UE`4R-YuHS?"E;W<t<&#7_K;geqK]+8',q=+TcGm:2BGSEiO&+8NT;!g)c7jgm*X8Q\R6I+?*
%h<YI5l*l_u7W5?](`>XmN8kU&["WLiNcCG0j-XBt(<1@Z(%B`-`=#/P$emZ<[W*'=aGV\jS5uQNEcg:,N5qbm0p<5)LNiO;f=-X`
%oo2@\q-@q1I)G='bBmjRB:JFLM,(($0#NA\1SM_BS>6&mqa;ajHRh9ld2X'D(1u.I)m+ll]6hhhZl.F-i],8joB+bKX,6ZCNop"l
%O39a"2p"':o64^rcbh%Hb8K*bWP9b>o!1q&l-AEE3Y+<ofg!B@9[)>L\dLK4F#eGV@$(SY'!P<HF*S_oCi:N-f[rmr%!&\%6h!eG
%e+Q%<3))AJZY8JAl?T[&-u3`2P"qk$R:-#(g.&SRh9Rjf1Qe7#EZ*F[7#,,\9g>MJ-`g#lrDmc^-Ip1"$!Ek_SD:c8fu&N29j5cr
%q,_1IM/Ee8+V#Q=hX+9Hh1I99UbIKX5Bj)fMn*P#mr_t3%*2*f5%LiDlU`a-+2^Q<Cj@NfRu7R8Hf]CT`U\&X=C)UD(]4oACPBg3
%Za\eke!D57Z4MrfT!qp.J486J[&hE.a^LrU5Pb8ekGK5ZGe!A4AA?rbMdAsb`kD>sc/5'siV26"gm`eBs/h>(2W5r(1!b(AS<N,b
%`-@q6biIS.o)(3)k2'&L<puu4o*t_G!hVYDfg!"ipFQ(<K9N><p,Ca@s0g,r(?OB!pN*Lt`GXO`fA)4-!.T96/074Kd:4`:+Wa$k
%hW7$K*jE<?1LE>%>sBD7gcP6r*9K6hLS.7(0TGr>FI)fTH8("WG]3ZLgk,p^9<3_]HV;Nl!9&tr^r9cV<pQAo[sKHIH#4(IG451_
%?B.A6jR*f<m:L5B`m*CmadR<TlRd47+8-Xr2/08]BiSV0rHm8doQIW1?J>k6_JFiEFF,#oO9MV>MK;ELF)PC>_P]fa4!cPCcaK9j
%Ghj'@c33-.W42Mb>d;cH*p&tn>LgWePM>HR@<RTVR$1<=eRl.--s[Pk\dLX4RgX;8]mR!03c$/9]4ZY4k*Ak]VQ1-AjdrSHcQj!'
%eJG?)j0qaR;a\A^!k?[[p?kNm@r%G=6U2BHZ^otVSYI]cG\slsjH%_P5,rd@D1G7+0cYAG$@[.rc[ed!Nt\IS=5sXnO<2qFOH:'U
%5s[3K\LD_!q=%2HkR6pq;HN$[qa2rn5rVNMN['"TJ!\Wo1Y?UNs1@8T'E9_lH$akZp-\Vq*W.":s-MV(b-u((\fElCAJXG+:i,ZD
%0<+JMC;M=XK&cm;Vol6s/'(b4?'9LmpTfLU7U8;sTl/9X6F?2FpHnDdF$g_$%q-$e;l08N_-f(DDVFPlp*c*Q.VFi^cS6+Y&O;a7
%LHQSFho#4k4p-C\n7t+si&!Z8[Jsrt^X-^K'j>&uo/Vm\I;6"N?P@a7=+k=]1!I+1ilEr[3=/S\^*1pS=2EZ0?>ZTAXW:c]>*d`s
%eS_.JC'k4(r(<RUUUf&T^ip"B-/_A,\"2%&@);0gW<?2%ac6!;@:lF.8-)[[r9,9d^u\n.E09l'NMHB@]=V)1oS3(?fM#KA0t]K\
%%g#,0$XT,O=JQlMUFAFB)l7_YhJ`$UFWk&d-]%tdooF'PSD0CdAGp;lg8q@DSOCC\7j\Mjge5T`oEjfas-qO78;qqp^Bo.@T$?fH
%?0L!rY$L8FKs"_Fg.U&*hEogHFR;EH/p-JIf3Y&Oh%AQ:2EdN&^S3LH=P%@]2T^U?marht+ZsptL'j*S^2g-"RaXUkVL,pc4j6tH
%V_AKhedaqX4Wftf)"-fMHHcj2(?Fn$-WOQ>r5+OWAdrt!frF?>aj&:L6\.4WY#_`LN^rUtcU5a*Y2gI]=lbJONots?aiBFboU>$*
%F1kdn9#@*G&8KAW98RR:Bb2;bFZZnEbI^G8I8)c91PJ?dcMsbC'5-=Q-#2H6:gWNJHQR'8][Ji#D&QtJEcQ#(5V<B[=[72==GY_@
%;B6>El1J*5b"e!nF)P'J8["K%?>T"A-[Y*k]n61@VI73/rupFN%t=OqX#>o.9A=sT$H#7$>/XJOH@ZA+UCK1U<<S6ji,\mf@rQ]:
%B=O&>(ioi.d#D?/^a#2VLu!4/R(5RJBJLH'acK%_GZc"S8.kIL#i@a'`:_,t)#;Cp#Nf*]$!fdu01C+?BL8>4,U2;h']D)Ga<HW]
%I3;XRkA.(%5:F17"($4$_@,<3A*ubdU2rI^6omYiF+MYY>i3F7!r>oa>fQqGpfbU;K++-m&P(ck5oeT#*$,=>($HBPK-)pfB_%jA
%/`J;>%Qrl0dGKIE*)ZR+mu!qha,-RQ,BN*N,7Aof#-UIC-"O^l,(mtL^^Ctm+(4_p`8nHUD"*'Hb%!gHY=3gbUi$T.JOnVDE<JEi
%T'p`O1nn>//5C`D!j>%?,qMe*KJ?Bc^o.V9Eu7Fp'3J^<dGP7he47?pf-7pIdMMtXd)8&(Kc%cMpB&/n`WPa^K0V.7k+NRr6Fo1p
%1"4s=OdA9*3XEuHc,[("&o"JG8be([gpU>VPqt&c-Oq"Nb!^(_L-SStHbS]&$tg\(+W6l=AT?cRN#T8lPNaV*Zk*qD=TlR^3keDl
%0LLFoU3*58#XV%?]2*iKUC;,0`D-ad<qh<0^pl-HLlFaV''.,'R)d1aA5^9M_)HuZWH864GLhQM:<sB&3(H8fa<R'p:+1*O3,_WT
%`UKUHqQ:@h7f(IH&r<P71]dpq';M]B</#3$.6VDTakNWE`'%A:7M*/Fl3HON-rA0H4^2$C5@R>g$jANW#q6OX2j4U6a$Tcf?SN@Q
%4PuLbYP8SW$bCKsUFV)I$dokX1H;Y,!flJ.MMpLbE^kaKm,47Oc$/*Q'?2<#!DWf+#bY]4-&`R+R8C2X@a;kdP-g06#T0LTacMkt
%q8;T'Z-_%".q>7jP\>A`UpLIF@ih<Rk@SIM(nWLJ3[TBF-s>SF-5/!\U^EA/&1Z9hV@TP='T2!q*Wf,YJkJ;s>N-1(=G7!kJ0tpP
%'.aGdCmYeR@&)'X5%mu*!TJnC.JF[X*\!5&K*-m?/ujaB5,#hEWuQ^h<*IW@69gLPTG+4rhl7HeUEI?aS_/ceqa&:jTg*O[E(L%^
%JJ2dUSL&dm9cS2sjpEUA1EbW(#lkEj4ch8t1'BRmo/>*S!]d$;c(8dc_8aF1\9]kWA=f)rd+"(0_Jr2<\NgpV644a<^higuZ(]3i
%O=h?m#6E+fPQ87^_X<mD9NPck@-#:u-]M",m%s-$n=u`IV=L=JVRqU>2Nka0!Z?P",((HW@[GdBT$^*f`_Rg.0rQM"=i3LDe+&&m
%a9>[.`tA265l$9til3)kgrQ4e"J)>RN*)bK/<gj))sB.nMaK.Z%MoP=&.Qm'?R"$86YHp!GTiA##Lru,TVYqjOCC4u4\rR_JMD&Z
%O$X#AEc$D)ct?lM!$>$>-QWMQp+5f?e*!ED,-hKm^np9"]KfON&o>$^R5bUD2;i*u>V/onNasAJ]JsIs[&",+"I"/lg)@SSjk'\J
%@MGp'i)YXG!C7=+(=Wk9,!iamjb;Kc8GU0.V9WA6QZ?VgfTUbb`.^Pqq+;ZsEKO4`3qr9^`/a47E4!R)0.5,8crbQF\Ui[Mb/asG
%`q>9Pm'0Z-Ii+NfnO]'OP5D>,R'_0>;oOZJ[g5@_$#:$>.?N,DCRJbt3[";/CLZPp7=uX,f]YRKCI%4/8I[cn_TF&Md]R8^oPf>D
%@Ra/iV1'Po]&eo5^)VQ/YRF!k8Eqra33f^0jM>LSmAE&`YS$*8TNjl#?67*A$?6+ZI4uMQ8>$(X('o:u0[u21d_I?F&J?YE,7?)h
%1+l9kjMt`r(qRL\U=!RUesR\HU.*BL?Sp-./")dCQ89P5HdAL.oE:r*gr7-eEu]:%Kc#D"&5:[S&e$=$7Qn8uFp_fubk-Od+V&oD
%enub8\.@GWORP5e*ARPNbCMJ_a<%V"9iK<(#Z>X>+qt"Obk'q$jaeX17fc!ZJhdklGql\KD=NHpkt@i-(?)Z'#0dDG/-LS/?uC[6
%jhp0?@ciArd7V4$'2^OO%L@dps&e!_"_mHpF[.TM&E]o"%"LEJ-p1ILYa#-;BlAu=N3&-$B8/(t>hT>k:5'T;0$I=eJMn,loeaXj
%<WS4;KF5!BYqPI9T(lMYPH1@8`5VH0D)Ai;<7]&7e'Fm\,k+Si7"M<9n+ZHGMSWTi$KdlP<+jA@>5n`4>IiIgMIQ[u5b85u3.N97
%#fotOZ'cm1NT?c,MU%Ui\92t/8EJ5HJ])g:FVa1BU%q9^N&n7Sc:JF-Zu^)&l$BDBpU/`>Y)GM^"i0n@m.k4eVORR+k#o+LB[rg2
%j"JX\=CCAgdX*TkP(?msps0Z6n*b(nh&:bG&)`oDg2SnAHZB99)Y@YL`K)h7gf&(Ap9K[#"4&?+RMf6tGN+7)EM[XCCNd+9YgXcV
%f[!a9gM<ETJbluX&\ZeuiXu`)=AUj--1t?`S"9)9=oN/^k%cGj&,qsuq47U]hJG/co:s<n=i_]<j*r!?hPdVI8Ir@`S-m4EZ#^s1
%]Pq]]NY;7:qFpk:TMs6(2p*gtA$;16"FQ]%/rf>Gf_`BolVl4Rg,Lmo5PsghGSV-fDKZqRj):t0`13qd2,8hONq.d^,45Q&%PImB
%gJlO>P4YbsE3F]l1%>bfF1&/+.%+VkK%<k#?bm<::@U;YY1kr#2skB#>e4,_c;cs>rH>SIcdhNs4U.bo!qc!AY1%+j^O%DRfP/h9
%hu?68H[uum`0U"8qkdk5@1U>OB1Ceh7ADCBrGXTlCXXsQetuk,YbAmEIcM0@:4\\1Xfp:CNa\8ih2gOW[Q6u=l$Q3G]?.h$gj6Z]
%X6qp8NLn_t9CJK!og\s,\".Wqc+_o=6o#p):ppfQhu9T7>i/1X0^&R`05%+-glU#Fp?#N+4j%VC]=k#hpn*WXWuY3ZG>_F!qn:I-
%Dd4U/gtZn(^5ZmnY[9OeEa.q[ri+J"KDOK'rI1ZpH@8Vo:TE726%3uQgLhiu[Fro1Q>;&ST/Q8?/C9jsgWbbH:5-a!6GM-L4sjp?
%(%b,E\_M2*>rup+:C]I'lH]ag#4SVG90aI1Oc.YNY5A("g"rnj\!,9iZ^]sOPqUs1TA&PXoYYNfK'^Od\2h)%P)WBlGjV\+k7lCV
%`$js*'tZq*Y[dKE;X8np".<0Z>tsLj;JS0c@B*`!qCbO-6g0_O-B*cOXe^U,m#)h&++eOd':i8*[q@PO3P]<C;m9p5pp>J*8Xb^?
%4V16LAC>a.mY]'&D)&kEZtn2=:8AT2%C(hb-T4,0>`-BM(`9`U/-AIY2Hi\T#7<aI!LMo]]R;Z`ET(o6he_SGoa5pF4bfkE`^;!>
%MV[FNJSBZ+>A4Uaj[HqAROGY-Hqg%sW+Hh)C9,t-!I3-_Q$;VtZ3/!bAh1!g2]ElO"f5cPQ\URbONLbagbmC-h9YKe4A9R]D`?!t
%l9GS9h4uW?ko$kUK>?1BJ4Vl1`.'1E0s@TBJu[9?Mu=@Y$b??#0jrht`p#Z\e72^p$+#9=E1aN3+1Da63D4,%QdP\ihFSH)ar*8`
%-\2_VH?aJ#hoAmI4ugVVLKU,$OmjaKc>iRer31XJdJ(6ZbRuW82>:$rUk]B^8kgM^@%5Fb9m(g-HsP_E"#<>n&7!%S%bs(KVtC^B
%p6r,M<1MO[@[.6u"$(0g:JX%ZmQ<r@OD:-AqCiuo6cTaGm0lAsJ3k1]R>U*]b7Hor:11BgS"Tef62'$1RHTm^*K,UBWKls%\Qf1B
%"$Kl7m=3<E4(,'L,=E",>JiP0#IQk[NJ8@t3/O`=^4L#<\j<h^1*FA#GVDV-ert"3Y[p<IhKc,<?NmCkiY7LAK19pPJsY2s/!\Ud
%*Ln13ZX%Hlni/5AJCN:)4MHDRl$<4m:iaDG`Nar7J33FO]@4QT6pmL36-'.I^?De[\P6uR9\dHF7V0bt&+esWTE<Qb6e4Q!5qqh/
%(PHWVi7B\HmFG%%[;Y6,.LB'iFjH=a!9ul>7;hqb?G_4MX/?ifT`EF)J?W+3\0:BIQ&K*V3[cgWJ-D<>h:BM(#8ST!LSrOAds3Sd
%BnSe,U\d$DMpATCj+(m8p?=ORFGUpoVMp/n=QanJ[YrQ1I^RWfDZJ7H`)o*bK'q=j)@()JRLC7!77d\s6V.JiS!%4Okb-JLf:-9W
%T*.4B*4/r5W]l+%p@i8rqSPe'$f*]!a&"^j$f36lXQL%=2r@4;Wu*[b%u%8<Gd6'Z15(0cH<Og_2-n.%V%+!eEraiUW^?'7SB!47
%8pV=o[=CHYO.l=Q_"]V>s6jYc*Q/?VL4OKmq"5hl1^s"q=9pSh:mjg(arNCK##Idj@mHNCo<\fhZqkK#kn*sD4`=.#7(o3E4#]uU
%N*cT/AN,5^&7>bA<p`!]O?b9Vn"(VE$J9*o7G5"g^rF@s[1h:R>'cUoalctXqmfTD_XMm>n"lT,Rp1C"b^K.R`EjqMXk>no0K0So
%0T'VPcBB9"8LCu_-f<3lWsiONGEen$JJ9XO1jgpHjIpZdBG-k?NIR/S<mj!!#VqZjFhM&=EUI85>";pP=)HJf.e_ZYX/r^[q3s]@
%ee2-G1UYYJ\[hC8SVoERX(>u3_RX")?Cki<9a3B)BSg8nqGMhp;bV8o]VKa4B8,#E9NDl^=_2tD4(BTkQ8!Ga;Q7k,<9j#_m&!CU
%mA/0Fc7#o&U\*n`X+6=(kI[p.QF/]>APL!Y%]4-MX;9`mB'0prO(4NpR?:hhGW`mlE$I=hJMON)@3">G&N?(ZhJ#igaE`*%T!\65
%S#=?aDU)G>\Q`n6`*$NHo_<D?QBN4>ET>O+_<1Fb[oZr:F^q9Ek0=Y?qW;g<Xn2&Ckh]b6b*0u54%hM)NG?3)-[YZ&SR&q<p@@2@
%B>K4I)h6ai[as]pG\,]X(0u!6i2YgZbFct5GFUnL<^,YaXf^G?mB1T(H?Z'N[?Z_%*=_\;=$1m&@Uj7489RUb^[B^rq>?5i1Mq!Y
%ha2t.>e,$=^O+T`J,W7QhC[V6S?t5dKuZ9gUYGOreUF>7r;!r!\Tn;G="bXT:\KQQqif&*r7-`"Ii!9$q,a=q[GgP%=BdqkHs"#4
%c(EcDhmq=A/3U)pAbCX^PtuarrURd[f=]a@CVI?':d"$.Nqb[p`K<sJb;FM(bM)66)m:P3+M(eRGkeNQT<<Ym5H[5b;I#5Gs&muW
%^=n`<]W'KZcqO@_l#ppW(;<m#*<gd?X+b?gp"RIKG<Xhh/)>GQ.4+pspKp(oHF-SN<KHZKj7`>c`fY)kFm`:UVt&rJH]=(^lG_nn
%#<.r1\,Yk42Kl6Q_%,7*>Bt8M6SiQ?eVCP!X*3Oap0Z-HmdcRVs(ZM%[sR$L3jm#rmGiOGTraNOFC,(3pl0sAp7;&n7d4e*#2+Fu
%f@'5\UtFa4-aF8$2m09J*j8mu]m_==nb.Y,j7hp*I9pZ<]Y40Arr/LuJ+\H0HbX\4\oaS#\r+DrT"S_h>0*`@`T*G(=UF;mqM+$Z
%\GE:S\%6n!Eom#,%Q;5o_+0&FJ3Yp9rZ@1'n]1%oPu[Kkp%A/[$"(9Mr^gSjhKk5KK&8Psn)%Kej-:]+rhU1>rbHYQrqZ@[0q(Kb
%i7ff;\f$#J4s:P&(_YW#^U=_(#t.p@V-)Rfln0[A#6B1l51^.Rjj1EZ#Bueh=g(kEr)mS-042Y%fA=.kCmKr_jb',DQaJIgmN"VM
%`Sg.OSn.%H<e%TmkMCYf%,M[V/*5*\pI^Fkm-`$4agK#Yl/7j84M:]NoBgkY1`5V-3I+f\gpm$a;SH:`._2="/Z/T+5jpQ0iqA"+
%eM"4$pK:I$>M8EB;:p<Fl_!S"!-9_ekeVMm\Y;sg^^SpJi=V4FGP,a,hP\m/AZ,+nRP3`0p![ZP$o2khcL#(&r\ulDC$+-%Ws;"L
%c\&!1?gnAKA$bIB`l#[M'3E9"lL!&c:R.c/VtkqN])0dbq<,du8P,?qXM5c'Q)3fE2bQYWqfr)57_W?m($<?e[SSkDlZEok24.Ys
%f:d7eDjClof"6=+p2[d\hg)C1a'n:2o2Q.n*tQtin*J*4L*]#YSsH%;_X=c,D,<.bj)T/"mI;lV"fMV!n1?kTag:CqhS\:)=n1`n
%<Gl\3="<>$STju1_bYMn`cM[d<BI.\QU>(ibF>\gm`E)%?JQ3qQLB8`]iG!cX.L)qX]Oo,ma7Lg!QW[DK]$tN:A_S'\\?;F(Uaj7
%DEtT?f8K"h`fX/i2p2Fb*\j=sI3_hPqPuQ9ZpofdSpo>b.r0oi]g7)HWOs;m]e6t1<pQXAXr"Njh`%=Vc/hs!h2GXTAdgs%M6gAJ
%?92q&<ZenGQE#GDIB.+h"`0*n\m8s`^V9?lQe07J$p6t0?L%&J+>DJ/!t]ml^%/[[!;a<N2(Z?;k53$@V^Ee`1bO/Z>CBJn"3@BA
%TFWr`(Ys<6]u!No2_\#20^:JC3Eb[tmTl/HAl$pgDc\#sQ<KeCX^6.Ao\Qc3:R=i-iMBk&T"=THr:K(;?SQqSF!&Q)CNc+m=;3Ws
%)&or_C-Goa/ErUqiR?%r93+s@FUJhE`-,;b\-LdXl#U!Z.,\%S$k\:l2BpPm8U1l&76]7HEa17JE[4@MS\P:pLh:0n"\L'+AoU>,
%.;Y_cU)C$ra<`$VYgn_5`>u`AHh75f<W,L-Ett?S5(K!o"e2!UrM>QjRZXX(/1*oR^:Wo?A,04\bf+2BUG[FH000pP,@R&2Xut53
%!`Bd2qtlg^.?6qYo;<9@+[4QN=X$?.-HiWL50-M<V0\U,'4jOibm<i!7lK40fs(?bjQ.r-_unE20Rh.3$>*t3=M72^TmRRV@eEpp
%cnK=@j%r<)83#&Y=L2"Nq#1.jX,'Q[qW>M^2eL.Z6S$iF-m^u0A([#C1D?hJ4Kq7S[.RR]%0Be!h.)..E;bd_S0_l+qPKFGO,'S#
%&k4T,Wl(!6@SUG!2qb)-,eAXLOaXq5GM4FW<S2`mZrL8@OmGCSE8]FC,;-@=H6-s'5!=7>YB&`**mL.;m,*`.#I++RpbV$l[F\Je
%*gR]dpX[o2a'YuBgLg6u@;fq'\7>C[[pP&4#G\\K`$7f)+"lGu+FV,/a#F#V7P>L;3EOg=h,oP-8,_h!jeknh'^[LfpQEC:X1Z!O
%o<GW_c>@Xi`(`13>D*ddSib31e`BSlp>FE3J)#D^Ja0;bp"Gtm]1$n`>IHjk\%$oi:2[0u1+no4TUtdc_].^.r>f`Yd@KZ-5l?K?
%E87P%&#@s'#/Qc/W\(^K526(KJ:sTu"hoBZmRMkq%$?HeTRJS>aUl!rGE;rM)*92JlVrQ8n^p5`;)@*TUrMBT[:A;V]m3Ki*j/q:
%5rEk;LPWE^`:`?_o$\ep!A3*^0>:P8J#iA(g4u8=Q(995>s<pAG,QU\s#tdu00fH[X+k[4GTcV-&/8</poEPsDIN.u;\4;CVG]km
%-)4oZajU'Fh4f2aYh3KAmmV$mc'\"Y/?-a'q;LkO"QnBq<D7nli7"7R_p^jDj7r=?n2u\S@mga3H:'-NLP;;]g23d;pr0@P5M5VZ
%?=&Ig34jMf!Ic$oA!-rN]AorgUVF"f",cjHZj;'#6\k93"cC@HDF:)&FV)nf\VG1Ba5XAuf+mn-ADXju5A</<<)6DS1b2U-fDj,0
%(1-h3iRZQ%HE3+Ue%6Bf6rLber-A$b`+p;fMD)Eh[_/)J:S'(7qerYQ?9I+jKd"!UnG9Jpf\F4/nDjNIQEtS"Da*N*-Co^bp%05;
%rF\%uc&cI:eiK@sQbg@JY9/Q9<h'CFT.g6r3<sQgZ%[Ss[.pR:oS\`Vk@OB[C)l)[/As&7Qg)>(n0Qs?aCoGhc<BCl-]]adDVb[b
%FhNM0kYAepk%_M+ft2Ok#lEnjXmU[TXhB1'qte"$gH,kKL@Jn"mZt">PNmD">^k,3ogqa/=h2)KIU@]T9MT$>2N9k#\1UILaOuNA
%ahGkqSj/2d8oP\9[+IPj27a5DdLXOi_5UQ:;Aqfg+WFhJI;oFL\XpgTqlo_".7!=3d?Wmn"`D'1l4oo)FmF'!s*FOS?ETp=GI.W.
%r;kmT"/fCMFB'6Wjn=u:H'p@Jfs]L^L%ga+f+Z-'7pC1qc2>!X89\7S(P-1/S'PG2+4g0M?@*4D+'r+I;Z+$m-L?Pa%s0N&o,9;-
%IZ-2KE..cS]11M\&c2C<#k=/dh`+"/MSFU`\s'Sc&sTTrlcK"Dc2Bfp=B88m*8Ff&h0/cM"AA7m:kc(tkoZktrMs_7%piQq5<`eo
%08?[ej9mVYD&jD#GAgQ%hHYF&JJXC'HH12:Uk/@-DY`i"NEbUtC^Ug$eZ1dLaH(MJs1)(]]6aEmq#FMtCdrp2.6gtH\KkE$UBQ<t
%EHpjf,U<:ujl"IUUEQ`D?rjbKlaLf;"5D\kGb+7;5H_]rZe(tL2di!`YHZkQ"bX[$\=6i#4hG^QH2R[#Wkq%K=6+LrI6KX#f=:A1
%)>JN%$C12:8%44q/d3'JL1XIM[,:n3*n75pr-<-jEr]_sq0;L5jPB5e5?qp(heBiH5u!)O@4/.(G^.ZKFT^SdPHm1n938`5>Flj,
%pZ;L'o<@l"o]j8CJ>fl:cB\.^;LdASO^@oo\W$r]P6VT4`iEspqT4h=aMUDob1L'd099/Wc&L(0aD)h^?G06#f_O#L2?*A,"SiNc
%$a';egVX.cN"*qdB"N4)5<HC@(,kW`5@%JBT%\(mU2>$eXg9#A;+%N%pkS_;nj33<meXPkGC>"<n`S2W?18"]^+H^Q2K'bfdNV%b
%Pkaig6U$V)i3=RXp]"_%0I_j>$gYD.*cDF9Ej'l[U5MKEC(3W#UT9YXiPT*#[!&tXkg.$!a+a<VEFCgtiR[2"=1aNoQ.9p$+p[c2
%eN_XQ]hT'hU=7DZ87`9FB&1(E98j\.dah:H^.SDYNFhcko@_7Qqu#CtZo;@KXh:LXnj.&oG;7):!bCB`osIj+]6t(_IJ0IDc>V=$
%fBtg%Hu+)rn?U7:W3f03l%\?fQ\'uc&]GEfLT)H,dCagjI/KenSHLi@*c:VoO$7a!jZE@)p!oO]?@)tkq=[JOAFk7p<bPh;!TrbD
%ST(6&ga,dC_):`@G41_-Fup6G3X7%`<.*L"nEJo>b*Al?SZ<iZjb%_(5=BC!YbQt4EH12:V0)4B2q(=<2s;u89]&IoX7GGCcOIo&
%O,qEompA`'mtdCUgt#fFlOr'>b0o>HCCEK.7W%[mS?.1X5b`b_`/(cojPO.P)24WHfAJ2Cr*7lrM`sPh&!#7Bn"3po-`-Nsi)BTW
%`CQnRk8h2710?2_b>2K<b&E+m,G51=+"Q49:a>X'AYZY>$X;!MErP24IbcFASS&ZSLUUKAG2ZhC6o2XWVpQn49Aic0L\ICrp;+3*
%?GDY;b,1tANQnC.5^@^S#Ldt-<H,SUPntQHT:GT.gJ1jWHZ]*Q"5dgfUW9/e4aalm'[)Qkjgb9@PBTeR#([Zg:i,^15=MBA(.9%C
%9^l87<#s`fQ4I"Xe5n_5na+XtVq>gWIN"%6/P39Bq>U6)Z[0O_mhJGA*u(0o"P5K5iaRsIfPYX"b',bYe?oC$gaBC+p-pl[ID,=Z
%qZ)c(PtkmRg3tmBJUDaM]ck8WQ%P:df-.a*b`%H:`%-':qKk@Y"rs*ma3e"7]mb>"`bjYma5upNmQZ@"q".?q\rn/d1c.S%^Kt,]
%<c6V$qB35;d1[)Sns@erp%X_)0XpLpho/&^U?]['rO):Wk$*dPT&4Bi]sk"h>n'feCYiWq0NiIV^H#OP6k?mm>Y&5)/3R-b<H;H<
%FB=WPf2&'kgGeMsmsd>0m\S:W%r+[>FnQ3jrop+f+b]]?pS.KiSA;S>EmRTCK8R0eX*iO!6#4\2E\P],`Jo)W);hDmedb!uGP\rE
%nRB^1A1T]k;8P,NU":>F.BCc%4*T7`C^tBk;U#Ib?*Er$fIKA5q*35+A-5.&p8O;kKB%9K]mBM5<Q#uD*gMcBfDiVtm#SR)(]MJG
%e#06rd(8gV2>#?Iea)O:.j&)L8'52oG.]nDC7t4V*J54n3%\r*_q-?&>^`s0^%pfOo$\sM8H76"kqMM)2Z[a.j1B[:(8gJBY*T&:
%+,9-CeN<`E)smQj>O)hIh>1#PXjiS3P-,udV:CdXBjDHpCgFgSf,F[a/2e^Q,p,a,Vqt`K=8hd;O38jpHEUYYmG@H7\$h1=AU!n-
%Rs/dS0K-V=ao=qok9'HqPtrLu8%=33L'XB:>Bb5m0c9V746#s"3?e]PQX@Yo^K`7qp(+d2k>E]mH7-QZ>5L3UG[H#/qlpYoI!Z<%
%gl)13ZhC9@OsJ(jk]`HR5I@"]&cdNcN&;ij8/a=87u.TdU]pgS>B+UB,_j)c_Eo0U]\i_JSE$1Y=]Nr"2_N?_KC72+'q9u6]>k5=
%j'PO/IeLU55?U35L2ZtNs8;&h^%7lplkJU#8H8Y7qO[BAns^/U5Pj8E%Y7T>f6@8\++<ptDh%W@T)Rq8+8tGJ5A8sM+b&mpI#?d"
%ea@V/=,jpiOI:RTml&a@T0E%V5Q)7c]Dg8L(l<KPe"?Y)IBWG,YQ++PT7-7UE,kp4p]('[KC<_cI/<fVqo`@EV!FW0s6.;nIp[]r
%B7Km+VJP,gi,?@#a+*T\hu;RNhg_Z`.c:3P\%_P"qY:[%r:fEZhhJE9]\<KPqS@[K;Z36flMJ?r;>[9[k+AL-+%5&9^\c;@IIQ4i
%Ie2t'J,f0$s7+.cKDoKW^A]ON/)5X9gOG0)oCG3AjWB!@Da43a57QV\rt+#d^'B)[<PO[qr66nok<JnDpO;n<2a=o/".&`FJ+K:]
%nBF2rDSt9-pohF'`@qFm#^Y<L`2E*%bP-MciV1Nh-;RYA'o[u6q$0C#4dbeA)oF?$UsnlFkP37CI/i6As6&iunG3+ZO$EW[hgb69
%,8S8UI.)R`a+%?S#5XBfs6^DIph,*I(\J=<ng?Zj^%p^oAik0e1VN=n('KG%s*^s"n2FjI^])'!qV1aR/X>`"Hf+kNmqmLGrSDbp
%>5I_IhgbLkJ'ri3-i`;Os1J<kqg\R:[t"5l4R(_25=&!Cp"t2ei@gdOMcTh,s8??[T"0"$@m5oWDW(Qjpg65\dI2PWgJ>T^eL)Ho
%goR'W^\[3X^\lW#If'!+Mr3oL@]05)nFL#$65nA:>`o!I?iTUs^\SshU3uLs=8uT.9eeOjrn\0gI@>W^WUA14pkrL-qT`;@kQ8p)
%^S#n%r7b"2r5J+gqt]CsJ,63ih)"PXIe&t(8::F+k!mj%embH'%u4C5:>mhu?*4"sa8a^@q..^3naIlW(\g50qtY.oq<\^,q#%UN
%JT5qTm1D#AL:8j#4_<2h4<NF,HOT,qrqF#bqd4hss4r*QK6p-JSUX_mJ#qDB5Pk0,^\mRu6CG$>R'2j]I7CsF`P6l)S:c=fl0%NL
%<9t>K2$feL45D:^M@4!%fn[?AoJ?.&B/`mn+1:O-)$_5?8NDe&dA_K<r&`(#k_md%Gl#C_^\I/ZLSODTf6Z:<>KYRB`LGmcP3$5!
%f8VC9q.I@Pqh*blXsF&?MdQMT]3fc'rk4I`]Lt9`=>r0fq"[iiJ@?H^H&_cA^UBHcCM&;UHD\J%%ER_I[AL_%$LtJd+$BMuMk>Ls
%gUA:)gF)l(_AFBN[X,TpIYb&b+8l%pIsIYY.DfF@$h(7l7f;`?IGX&_`HY,HS]gHVh)i`.Q9tE+5P06toH-<R0BdecApl3EmihPr
%aBOkcfj>$G4,3PK(WL@$ec,$KX7;d)K(U40kO)C1E'NPe@D,H+W9;:FgZ,a-f*_7>p%ig>_m:]c[!Ds=%@O^%&AS&99BG(-oY'nQ
%="'0Z?pDA*q6$j]DSR?#hg@n:VKXnj)`lW"^S\L<<8%+4rHu+IpXO;'A>=Gme$1k2B:o,"Vk8G/YODGE`s2(Y%tE!io2R_0?iB[7
%T=hIo,d4cr@S2.Al<f&2alfjVoC9S'M1,<t/'Rk!=O(c*bhK1ZItN7#F0E9?4_NC4=5=M/&,6,'7cdB0r,5s?ma[YPZsWL&nqj/u
%c-VON'Ah@>oQ-:E2$hu]?M03M+8EKmkgaUd^^iSVo'001K_tPpY<H!tIm\CaO2(Uu99kh(DgqHQ$T.X6T7;o923&bWbuS0n^Ye]b
%J+8RiK0K7YX5A@)90=*gqQ':LRuL4Yrq+D.1fO*`<UVZs>jC5FR`kG<U&/"6P1aA=o^a-\:%qQ"r:90f4P?Y$UC[@MDa47!+1aE-
%hApqbPAKu$T]A<3p%s^;O8HBW_]r_ZpLZLemGlIZE;Ji[6sa4C,K(C=^i(l0NkY=AI0^e5bluHI5Q6&F]`3`tSE8]1fUGr1/pN-S
%^[[<BAJ5tcHD)htDs"1V.m22sq)hm_qY'+0p^c9Cf<<'#?G6<-NdDk\7ld/jo#'p=7p]P0qq#lfQYZX!-[Q%Q2"ZZLU\O9E?iI+@
%UAMO)AQe\j>?\)!D9@0&VW#Km^/3kYp+64"c>pRjpl'ELOV+%]Kg4%YA+E%1Dc-)fYPdtY:oaQk+2;P5XFG/D-Z(gckEfa$Ndp!&
%pGl?b#K%XU2>m!XL];SrT2!2N1>`OE[^>SP_GYE2c(=Re>=j(FaTfL":D#a"n4S$IOl8+9FaY;"B%(AoQd%3HUXn/bPbJ77]a?4'
%NpGihn6Y1F5(]cH%\^$j2nYTt3SX>m:`7&H?O+4nAOmWEP$TNKHXt3`?Tn'oUt90.lN!6Y[l1!m[CjeY]uo;VCB;[.>AsKV;(euS
%CCL=&qDu+B]+eUj,oT[n:D)@I[^;]J)/lhSE\[;pZCs.gk,?:UQebbNIU+Z@0t],Q6%sIIh$P]g=/f*H=DUX&WeAEf.Xn?35#:l%
%org_N?Q*8;>uhZ`&bBZ<^"(p8'D[5"OSHD\LV7*7m'FPdAWBH!GW6>N<r8NY!+2aN9F`YWkjq\Yobgr="8H_tMg-AL(taU%L"@iH
%H6f`f.7nc5:LhcJmq`o0X`n6\:.Msi$=qVhDg9bE5UmMn>kts9[;lt\%YiS[V@qpL^BeO(VPN0*\#^WP#SIJ&4;2?l:Dr@*?1?i]
%8*]EIoTAM=$Z!s5$RKKO;'W!5:Y:7`jb.:%<hHTK4<98a;k_4\Ri4.!W@p2&Gf9c@oi9#DC*cOJ2E[_a#JIDH/bEaU6[L$rhTY%K
%pYY!r`'2X8qS/l`q=6T.Ld>][RR6"iL=Y*^9k:i4mGHrdd$ur^b<edYG_DA]PKHe._R_ub?'<b&52UeN&tX#ONt_MppU&PA.GJ-e
%'/KN\T`L5,iNp7u+s%Ec4YDR(=`U/2?=Uh3DI*n#/7T-$r<+WUCKE3<nLbH/5(s/-%!@[iWEg=A?$!Z@%`r8e[oK%PY!qiooY'g@
%6Y4P/=kYiIT)hZ6DKH_!8F]mK3;e1=esu&ORa@bF;;Pq!$f?9r;be?rf<\l'de_Cf2KSsd*F8Q>6-:lq@;YNcN>S@RQ9%PgI_(i4
%#18HHf;1(#2bTg=+f97UT`=,dS9fa'P@bl%>t=^<hm#59:#aU@'o^fr2;YG,Q*7&,q>fFI+V':M^un;#F3lK%?qaaaVLUWcD9IQt
%MR@Z40(H$f0^^G4l8u?oeM<_B4B*Op4f,`\<@GG@"';h0>#'IGUHV/(U]7L*)kK@W;VebXg=KY5_mfmB;(jrclkC;gNM>VU$@\^d
%A_;+9L@2t.g3Ic)MkWj$V9JY;Qs62cZjlmPTY<m6p;<7J<5Q.``Xr$O;\XY$mJF*/j:5U6*mhXP_A9@5a,m[@C`A/?RJS(HoS(Ic
%!>NDq3[KZ=<0-]'W!mHJ8D56O#';-0A^hmuE80*>B4?^pOq2D_`RsZ0r1ULe$XHhmRLN8^7C%/O5g8W(coB]9,p].JD,dE=GXBX9
%7dY@UkL'S%gf4pBFW<:6^".M(3pRPe\!SK00lC)A>tdHb>$pl<8>7X$WP3`P"W3,i;YiZN\\]O\_meLe\oK49L,W,3^O$PT;#L_t
%d3cEC/p_MIfs5Y9fPCeC0G*@@'2;1CErRK7LIoQnEiV]%mNY!o)UN]Zi]o:s#gF\=0l"l6]'V^!H=_\AIK76CY(5fC2ZtUoeRIEo
%XL><CTRa%qEa*4[@d&-U3W<=+Rkj?ig)J#NF>Oe]f/N9.>002bmSL5r[4WaT#qL\k=g*b>!0f:I6&4%!O#<T,'UsjX]CV$)C68UO
%.g71FY4<&S>sf1?Mt$R#4Eg$Zqab7GfG?MN]QQB/FrU:F6RGcBXFg48/B`4D<Vs!W:=%W?cg*1ZqoVdQDfn-H"`%1C.8.[Ze3j7'
%?P:2nDQ+8o>\J>U_.bD<VllCu"CY+LjX;)<TW]UqY=Ut!ICUSIh4>q)d`ftier;1:Y=j:;f)%%t""c1Wi!>gr#?\D\-7?!tL*X9F
%G52LC[:PVR_1f#5X3F@sEUaX\S<uid5N/Wc`R`,9*@lp"(Sm+P&:1+r]Dq0M[_SJXF+P_8Q@qbGT/8EM:KRudZiF7d\h#N.+nXq!
%Fi>r8s$g]1k9_hYk)I2^Rm-21@$=DcJPqjpDV\Hj[^Md18`*N>/sJc+PbejIY2ImeWZ]7a5mn>*QCrC[r?<%H^rBTB%:&YlqL!GG
%C$jcCL+,$](Ro#--7B--oPLRO2J.SNhZ>jg<FJV!&^%\)>OG._c^D!0MERpX>J40>/a8_50A$=tFN^l^90rXnD_;EOM*NK;[K(uY
%V?ptB!C<s'm)%:J'LP<F/KodYVm#IMBEGChr$q\RTDF.C,9JBNdeBJr^ksr&F\/''*PhW[Y18]LX4@-'-*Rb*b-(FQJLA61Zs*f/
%hJD68X3Df#KPLi.g5auBmm"f,d1*-/7iL;"h;7@:'(@`#s1$C.9MiA:g^nesY+`C@74o%l_G/^^!W$\8<>I0(mb1.O@Wt,H7d$aZ
%H.^'TY'Ce.`O</4I]hIU0lWYQ"C8on[=?]XM\]*?FeIuZ&;<:]h:9]6(1Mn3mi!Ko-[=B*;S@',,$5W[d(65%l]tBST)[["\,MG^
%cXME;\g3T\^:S'hpEk)E2D_]E<"`X3(,N/j:=[r]p\C+GI=e?kJk%-@mlF&S(*h_%XSIt6C1J/M!k-/O[0HBm2@,$(a[%X;^RNBM
%=SPa(>bKh/>\bmZb_guY6qL'ki0N10_sF$o4?J$X:Q!udXma_oeP%\sgF[\.\7?Lc]a#O"X#;7o.pO;mD+L+e/cpTUdVYX'>JIV>
%c(hnkXT]Zh%#YT?*0t!()<V;Ngpc^G3M_XEeTUJ[^aI&p!i;XGhRf2f7P9:8p!J_!/KuSNjVZ8.9kJ>6[^h&GX9A]f&;O?kFkJW4
%mW231pMf?DMe,I,a>Ei^GLa=3[b@*V8Pu-)eUbA3L_5_JMmoL#We=nP2qU*jXh9'F2T.(G/^Yu]WBoEZ&4M7(P!P%PTkrA-$PmOJ
%;ID\BeIB&!2>hD!>lmVSh8UmRfn`A&\LKuD6FV]9Akd.PF5+IPg@HH?k1B^:;0raa4JJ"qpqd:QZj!fST\ME=+9hsN[Z>YC(B'./
%$8-FC7^%T=9n66o+kqGaXONtU!&Qdk9tcf6Q7>lJjTttQ>D+F?C@sM8CVEA1'=U+iacTWsCG_1XXfIeIgLf@9d81S*-8Mbj"f[7`
%;&ZRt;DcCA`8F6rIek%R$>hK3!Nc`"";9XNTVHW[bu*gNJD-$"NarqI/DE*a<$=)k[#G/tVmb80IAmT(/nI\XGqWCqC(V9rUa86k
%Xi]mOXW$IgiI/+QS@T!5UCJ^5!%k_UqLPVY;ULK[/2Y7.K@k@.CicE[r>snAGn?o-oB'WKH"k\BCd;[U)Qh+r8`+7QC6Jp_D"CTk
%AdZ8]Z`&c#K%eko.G2&^2_+rg/;_'PmF0-;@8!EY-3P\8qfFSTJD8;3F@B1d]f0i2Ya?"%bGIHQ]P6S[A_m#,>Q[n?92TX9=r"+)
%oO2K@G$AffTc<bras(OulC4RH['&6mbpjP=Lu1HR#5L^oj@&UI17TQU5AhS*?*sJm<>4H')b41`RS_?p2B-C:@rZ'\m),+IIR#ZL
%:1(h]2VTg<`O-cCNH/.)fE!^<`B=b\o+Im]$Z'eLdKoJ2"=aldA<pC1\F0WXWL="ELLQI4gMQDZD/VkQWXCp)qIXeQ&sQGOUNTbo
%aUB*3BNQgQeOMCd_e#MVdC1aJSmZK+Y6GpSU<RGB]D2a4+``A3KnYNh6A#i`d/O["@M/F\D#0DoAt,Fto+d?=Da;fir=<V+/[RbN
%Bqu<DeCMrQkt;+'`ViA)6+%G>To@@[YZ>Oo#@VV%HM*t$oglM?%0T(7<nknY\FakJ(0Mlh"sUE84bTZCbc<$$<=O=P0^;4qY<G7\
%qR-O!X4L,d:_85k!Ffr1gWR/Y]pcR+'i')]UR[cUK*?!9+CM2ANRein1`/-=CG<\.Nll*k=^U)[ORp@AJL0PfZGkITKCu\Q.Hs3F
%(VNiR3r6&Q[Hj^DP4m0Bnb!&aMjRj"V?Kj)iD^N74A4.&Zs[s>L0ef>,."8,S(;tBX:N!5FYTiq\->I@B&BH8U$,>.TtGTX91V3o
%==lAMnVeI"UN$LO;3SV]<,H>+=QUI]`/UE#1=ltG[P,g?j'EJq`IrHS)MLX4n35Q#osSaQEWPj:OtY2l)sS@mS(rJGfOdCW6"1QC
%.pFq'M7.5T4j^_8LPV&p.U-5-Vh-i;W1&`RD#F?,/u%&A!@^tWLpm;?/MgL+::$4.=#ied&IPoSX+cJIm#@Z8[MF)a/\?:ne@b4i
%R&-.K0KWegfG4\YL]b_1*u8#rJ6K7)<G>8@$bo[uZRbCKe[E.Vrs'ncAs5bQ+^CL\1CA/;W^9!Tkfk^n?0*;kXqTAM_;+Uno'!\N
%0eJTP'OsSM[eL^KAi%rsp_a8A+e7Y*K=\ck*a5HsTZZTt@A*nE(17[_$UhR#Bj&s=->1jH"F!Pb"O8-Q<?h13pEqh8a[oeBpQ2,c
%VT_A)!kd`%4eC"0M-#7t]u4WMY-b_o$Qaj=`qBu3hKQYfGT,(JOM/2%Ts1l-j5_L0mJp\![K%&H=h06hHg#Q*^n?$ioQZFm\1__g
%$4oCQ=3=f+DTutLI)!$ePLa8MKa)I&/ZC`!8W;?5doghe@e%Q?MQrp^Cb"Is2+K/I);F)fEu)<Sb:E!E,"Ar=?J:kSa-Em]Y]/%n
%<1DmA#\5CBc+%%b/I7jrp>Q5kC9r_'KuroDADl\mN0\DUh6:+E@3&HDhu2sJ:J\b&ln?(44eQ?HP+R-^5A[O;q5m_Jq6R:(oAtjG
%Ut:B,&A^/=ON[;O+67I5Aq]fr9QEHPf3).qjZ:Qmkp9u1+d_LO2l-1iOr_tDcLF8J7jf/u/31`_ks]5f,/'bX4HVf^F%h^&k9O-)
%YG4[t#jtJ^njRkG-Q+.WNQuQ6Uhci0,F9o\k%!NZn7h;]00IQ%_,\$krWq4@cQGO<BatFV:U<SgG`kRKd@P!6@(>C1,T?)B2@7m\
%1nOoaSn=3pK::qeT^Y(E"Rj5mig'.CI0$YWD49UQW'aMM&hV[;IL2f_Sm_]jRHBm(ntQfkQtZVLSnir+o5#))T&lGdfdXpt'qXKV
%T_(),"GLK6-^qqUk(u]+E_fYZQ@4A5PPc*9k:?]=V.Ve:-p,[?Z,*$mTr@6J-AmJ'Nf0WgRU`,.WL;nDW5l6''H"^YS<R@V"frF)
%FORl:>Y^i&VHE(SD@0"^Yu=J>R\/"9cSJN33LK!.o[5C#WM&l?:B_3"B<%Ws4BFr\T4P'rmRb-MRQ\bp6/cP'MBYa#X;+_ua]lSp
%cSJX%od"_bL$.,>B_X]>"f5iL/1<U+@HjUq^g]UoGohl9cSAX"HCi<3ddq8jQ(I$BW9bM!7:g*l/LWd,C9bX>]G<"\a_X9-Bl8ji
%A<u&GdW>=%c.3lP"_HjW0%),2//Kb"=e:Ncas>F>k06$?75igMgI:ho,i8cZk8>qWTr0n(1>c_I0;s2cpO^9RbSSq2o@t.HSn>a1
%n3$_>iON(q$jLR?"/@$3A&4hodl\IiHBJSe_UDa,21(Vuj/(r60P^A6,6j>hc\\pTPH5TO4iN=Vfi_pG9$_Nf<-jiNUXCsr(mLP%
%a@MjqEb&!kSg@mXBTaa<iL4?#@-<s?b*\DeZ";;HH+j]%Sn?2[\"2X).&&cGRR)mOSi:-k`_#<OSV@!RE+^fTTAVp9:Za#q'D'HZ
%50'!TPcppeh;6n"7a/1%bU%hKTG&,3hZ@@Ogqk2ifEeZYXKO52dC42`d0]esFQ8k;'8kf5nFTk*TC;QWXrE\3c8R/-4>BJLcoqeb
%#(nd9,a%LGaSt8jge-1k]B6e?ZpQaoB^1%3Z0eb'*mQJ?\c1b[.bdKRCskNAcrg(RPSXk"iFG$d@Gc]rTut/?@r1af]28<3G9<"R
%'l`pSAD;_K8$s3.BO:Jf*NE0X!'B.jVFL%n:bgf9Cp@RY;F!t1/3Mb@22"o.+U^?ac%iG9?/;A0"BE(TI?@=^c&l(XRe*%Mm(+UV
%7YQJ6!2H>9_>PAW"8,ghF6F)[`%;"t\DGMIYCX^m=iLMhZ#6=A/3)<F9@)%93o.s2dT9MOVpET?j8P-<f0LLL^?`L(=3'@I)=fHU
%m&8LM)]At8!lt*"7?Qp87cG)FqZ0+<[m#?Y-"BWQWd'iX\&3N><OD!On\>8_EOjRC(/23*Hi$39Web+Q$:\?'gQT3#**k8^MQ2\r
%eaDU=f_Qj2lQ3p<GhN"<eL5^Z(7;Z1qN`<H=Pp[$fitt@N,M";6C`_I-r[>Z%5BuJaL7M-LOmD404f8Op^5_j"cBVfFMc-32PPi<
%(e/u$.m?D6mdY!2<0TZgVHoJSh];Q2s/eXC*gMaXoU,%OW`9A?qDJb[@QWo2D@6*0?IJXjTLS\FohZ;!=?i@LTU-XGm10T!F?eZM
%IE.*K<5`qW\X[6qS5s9plE4="F[/U^FDlfgm;?<58NR6q'Q5ptrV4eUD^j)9==W06KM_51P&!=WFqS>C(I,CK[1%r%'J/Tof"5US
%#FA-QU<1fCnkAQT$?6A2e`M9d?1DA,kQW&b(JlP%W-$!_1+6UO56Qp]ESEf#'Q69*,Iud&R[.P7I03V7r_1:8a:VY*TQsDcG+M(m
%!pg:>\a%-:+coUQkc/idKXr_TS&t&?XSW.fU/pu:m'6YHWqlKD5m=./8K4E^Yg%=1^OHMn>/tK4nf9s%AN'PITmk%^pCE;hg3O`c
%Ei_b:;+ik%(B\7Sr2tHNgA"%^^85hN923C5D[J+^FVAK:e1YDs(-8CsIOQ<^>n$!7B\M[%\b`/0.DFp/QXX[244Gq1hO&F^^Q>Rd
%;B++=>1Zi?Q//ah<`cl+eO0;0BTUJRl5***#s/cI+ml\KqIM$B$1T/Zou8]XK7`VR)UskpjIi[d%6Q*us):earc<^`*)uF#;[4%b
%YA'hb^P5M_fI@*IplShjI+g>FiCVc@7Am7tY[lqaA!ERoOAU>X7Rl?^.p6@?Bd]\@=\BWDVep!FHuCSET<srI$N'cQk0o[cZC17A
%][\R,]!n/[cWe]keOeLui\G:4U[!.%=Uh"0TMIF0f7lbmB<>j3S[P<>MK]bba0r>Y9HMs;\8_&\U)#q.;r`bN]N's>o6*"Z(sH48
%-p;EOUZ(gq2+l3Lf-ie!@ADH'2Dtog>M6%QhTc<hDe\somqZ^25CKH;NAf&9gCgVMMd+(XCNJf3B<?'RZrt"F!]t1CUZJhjpSm:f
%>MghlDgt,1c<K4>4a^/a&$9eLhN,S&rI<]om`APflUEus5:@RtEM-N-T-45XOR,IWOMoer6pb;X7.>6//A4qYW$AULX)8a8;!\N#
%RG5,&mi6;F%uh^1s%$I84Tnukb"@r\"\3#]NF<i(;1pokCe<jH7bN<E'Pk#"(/Tk_7QC*D5^-a;GZ5h7a&`e_qa@&fd9uTRY&&Cu
%OUbk%H5UsP]h$afR'mSV\f.H?)h0huo4ru@D++]d%4[KmThRfag=a`^\8oYmG-Sk3U33K!<%o0.lp!D)lSb"SWtB42D*T&!PoCl<
%lsMEE.1WHLeU;'f'&W+De(%WW8l1EamK6iB+I]slM@2#HO'TaohDMWh\087W2.k3&TflMHQTO_G_gR6[o<kDRkTg&!e0<5tTFJO'
%VR&aW`@f(>=#3]N:W;o13?<0K'],@>E5TfRK#eE^j+t&H<D?4351Ig\eB:3SrZ"'RS;")RBQLKV5p2c.?ldY*-6RPS)&-$V4:fT#
%XHEl01g<6bp,kSu<NTpV!@5Yhg9q3,[m>$m&V4\Obbo-@hbZo559QKo"flhV_<UE'/Hoq\<`0`.=GT(5AM;UukC"N6#V]E7W#[mN
%pe4R>l@gAi,kEL-+TJeA5m@uP-X/m=R]uK-PdA?^-s\NH$^]X.+RE:OSR*?Z#B;fX=ceiV@$MKE8*GRVF$Rq&L[:oW;-W]1g(O0$
%M'!E=ck#U`N*dWXCXHXH5VM6D:t?#[1I&5S],1U@S,s!_EkB"cMh;BEmK0Mb`M(Bm9gG:tG&Pm!6G8!:-+J0uOd[88R0IFXFaor(
%G#Kh^`UVm_,Q4?=^Hd(@&VJWYY@-ZPX]dFr<O.'M&*X09H<_kk.U?PCS0K&qnm53spZ^c[:j,=1koYd'N#iecCXa"Sr,n?6/))WE
%6*]=?e\MUug"+)VP=Xsc,^tbIZmU\d.<s9EYT]qg(=ij^^M+jUeUZ4eTZP)(!e[@4i@;Q#3,89NXEeWoHUiLZ.uS8pF\+&%OCZmq
%`$O;3l=*Pi3(B=J2s78.-1kaS80e3E>ZVup+=&7SK\)<fVjjV@RL7hfJd0=ODLsc#5b[1^Bh9e$WOD"p='j!<@)78+FCJH5lT\M8
%5LjFb<N84QPO?S\gsM_kW@;T9&/<Lj#:O[33P76!7ff5*QN4]<F>X;HeT2g?<M[X;hX(JbZr-0J"ILBF/a2mR2N&LJE@faUqMt`q
%X"g&c$sG8A1)*4e@CKW')m?7l?2Zu'cEb&iI8i"ED`4$0M[<S4Y&aC--f!<!']"(c/jRNIMQ.29(+B;bXGm;dV#ejE)IhGSFursO
%\F8To4-Z"+i7P+t.<#ue?0?Fba"C"U<_73C*BTKcWW3q;7>upohb%I>H^bC\/*]J)``>c/dk)O,QXL1=M/(Y"BKO#(+B1A*BF4*C
%U*srd9?"\b@'r;E>aYpAs0<qFef*tpeQ39-HWUegbSQD$DEk:-ACPgq#n7i?!75W*]Lq,(`0q.PW,uf&DUAL,h#OV!/^en;gWR1U
%!43mhPE"u`W8"B/kI68F+F>k43BQe^U23t2PeaDpVD3r7#"r4g!#O*MMggLlBH]b[`.V?H<YrW"j:S]aMHu_WlF7KNn_\:U;;o@B
%32Xc&6D1qf2A<@<I>[uE?:O"c7$*5R_M`7X"MAH3GZ?hp_8*ZJ:WD)goiYj7f-bU^\`mU^K;M&im\fi?ZIqJtn6/Kk)G$\1'1Q2\
%7Ft!HU9$2pGgTNl)X+IJ-mEdBE@qGmF.jOQ2Di?'C$S>IHBX=T83(ZXH%ejo%i[Q>W0/Ra_qas[V:Eht["^(-)Wn_,"=H9!4.IPB
%(WK3p@,_Um?>F=eoDH3M@gN%e>VjpTB!r5B?'j`6:BUp=R:f,)c6OAK5g-/Z5MuTIoEj6[`DeVK#fJ1(IB[H5BoOfs?JK?l`>X\[
%75Q0<Y%.2b\#$_&M<P&KG;h*@YkNC2ZL_`WA0:?Oef)ecfP6[2L8O@:kV<6"!K^LIpq[e(b&Q(Q#M1&%A[OC2F5,aVZGl-Fh4MQ[
%i6!8KKboG(Zla=)Gg!+cW9ZpSg.I[6p&mi]H(Boc=qV%"Wi+SMc4KIa=%Hmm)5g2<Djl\il`18*9:K8H%K>"7!W:.O?F<`/80biI
%PGV('_&+*ZLl^$)3/hZ2T3d1,QF;H4#S8rM[d>Us!+l2A:a%[$RQ4cMLX;4t/rVPhOJdb$Sr5A8d,L2mJa_HLLukOg!ApTh>X@_*
%du<$B"-hAa>)pB&@g1&A:g)PW\C!,:;F`=Sa;Sca]=L8Rb^=E,_Dn$:!/'uR<6S=DW@:7]o/\9UN1K*H:jRhb@<MkUd]['-k5#lT
%'L`tY32<cJ8%NS@#H_7H<NjO;Y6M#JKfCOW68#4l"RZGT4#7Ib]>2dqb)%oj.iaelj"]G@crXd\nP)UV?=%7]Fu.(=o!X9]gI&bl
%@i0LK*"a,g&:3,#;-%lap[,C3El394qkfm-U%$>(ND(T"D4:d&!'3-YE``DL['eEb=:@Ugjt#-9W6fZlb_!,fKb;$T,i&GWKj4g.
%Je?(LMn>]lO>LXc4S06GqC@UtQT`j5H#b-2DjWpkjb"I&\>(4oe0SaW$\q=X^fr06eQ^,i?Ul,BOB*`HUF(J`Z(Bh8R%F?R[W7/=
%^qEtp`sRrlCcYaU+.\H/,5O;A0gsjh0ggl'/j;*&,):^3@tuHq+$IQhbf:5O1fFuS)jbK,+oOB\Lg4Z_(J2Q3mhndJO1n[P&YI@h
%'@ElVLna1+M^bCeHrNsQ3?)$fl1rCEFMr9;&VXkmM^\IonO8H*HUJ_@S*q5)`2Bq=7Q(.Xif%XKHUSkGX7$d=<'P#jNLKFkGbaPq
%NAsP[k@0GibIOPrb0J!IV,h1QO/R=fp*ebm51)l[m+92u9u2=-";78sO$WVCF0\Xa`?IB+(QHB%c,V':s33tX;=em'o#<S5(n&=0
%bf;%f0U'mUN6?Tr&lh^t-r8F9m3SpUYtEtrd7RPMGO`iTP:q_oMEs->ZS]DRACM53`6#M8;Yn[//r`^i)7rkGB;:e;?I$PD`UB=U
%@&i^4$ra"cU6q\)cGhRr?'CCE1j_9L#r.p1AtnSTGU<bn7l7WRk@0m_]&o`UV@t%A2N?iW(Y^d4fj&V4Kr<t#-p/O/7%\+%S/STa
%-mtHH+6PIUjBSKZr7BV(VoF'Ag5/+bN-C.`3>q>iUMi?YWR?u-:RPR6ER4WRdudG2Ve9M3.QnUHe5DisIq&+!,G6GG*s6p=8J4$G
%K81b@V=HEh%+^_R6OLb5h-TOWDDQ?iq5a\h:Ik5u<T_45hE^Ci?fXj)b(7b_TUB]6'G>It'2n<4q%o\a=Vgi`RfV6X5u+EEp'bCm
%)fg'Fqk]e3_-Y55TR(MlNp3uo?q.)\bYTkladighlY7#_rRDmdoWhS4FX]k;bjH9Gh3Q+hFE#4%[c;epP3gkQ^dg];=[7,]"\A1b
%`dH.i0KdMcdX6n[r04)e43$9AEk)l6=^+i5%,WEqIbW'o6%U2S:<CSRD$[4Y%%JA\5XVP?$o%*p.2K*nR<OKOk@0V)Q!.a%4c+\L
%CmO"KBiDoe&MoDFnZ;F^phaS''bB,/%di5_d`ahH?cl&7?1?FRR]icFG/^Yh0Fie!9Iu+f/979tAP>R3=7\$\V>!>92Y@K0eS]30
%/2CQbS*ehM_O%96a$]$AP$[-75R7J1ZINt=$:StTUtZ;a'Pq<U7pC5e_&toS1k5nCQ-!$<Eml?]@o!s"pKB/L6c`e,a;54_m(Lg4
%[#J5TcQAI!qeJ9F&>>BU(8fc_ICoZobFD:aXtgf0g?d3!mV6F?XiFFZ/TQoS9^j!4q$!QE_c%,6a$#a!-$sp?XLn+9K`N=u?"hIF
%/t26@(GIBp9CO;8ostQBRI2l:p2##ZW'tFa`1>c5BhqfE-0Q3O)$`0#V8:0/bq*!EUrq4@H7_^4;)5;90V=@M34E*S-,,"M:LK8a
%"7R^&JAlRW3JaR>2RON2(h3&`?c#KY:;\"dA5N+&okUhC;hN^U)>qI$(EOs^R2h,r)Y1hD`?r@85?gs'4+7KU[8bb!,7n1gIIV!h
%!3Sq.q\H@ufp*g$4P6YC1kgjT9$0*3K*%6L&C8WiJX]-q"L@!(]kn-D&shT^58\?AE/]>k(kZ=sr3KlirMPZA[i-t7S&\*U<aZQ(
%()?EA@\0(e[]1^,G&c/s;4;[tm0V"Jf/-+K$*6anG^u%Ec$#bM@!aYi?9.`\CHf[amKAa9>-J"kZ?d2@5$C.]mYlKM)maMPoD[D\
%4[]G!PH5ok5l6)8LX=u\M5=8Q9nYt*["elJ$j(RL=GHA96YqqV9C19oYI.54hk2CcdF<-a(;-GC("][$LuR13X2;SOUZ,Y@6H:b=
%5odQ@1p$<]9aZXolG#$GLiDX%+\0-^U%GUFL5OXZelpDuTiMRp4nj`Baimb7N"5GCr5+#b[W7//=bD+$m7VICgkJ[Hj>9C;^-.+(
%r/]qE'[opg31ueKih9W=i>cJ(&GK$7`kEE*@gdaM/(4j#!$9i]P1iB)iiE1PT<!-9EGj%*7Y]J&."6N*>^A`sPKr6)-Y^[]lLfTp
%^,n-e"8]o&qqk<>cZoN3%6O"\T_,<%TY.RoIK0`$HNKLtG0UoN9*;NWJ=[[Ho*8*8hBUBlch[bm4ms,YoXnP(SGfdc!D:]7#"j;n
%miC'@#F#.<?36Mc&F:-_8KU7aFj<Xq*7"Ef9'&2".?%%l4nKO%TpkTjE#SGcB/m__f`2N1"2=lWJ!6H+Mr+=@KVuHf2K?lhi00W(
%*lJ@KFtPrqHLF9.^@NRE5B:u]-hu>2q<$eP2o/(Ro-\Li46]W7U(;X/N_Xm8K4p5[e-S=/LdC$<i*#M8$LuEV&:EqT4BcdGAa[Tf
%`Yfjel*7E8I+$cr96c[""q!Tc3/#WS*;0g(S_%l$%hD&&^#srIbkiI&Wr'm7Yh[<Drl5m@8]F+>"Kd%3K`Ib;6cK-F4HVE^Y*m>e
%#[/qNO/V]a7fn(p-aC*TH6q_hF_]AmcNI$#54VF$hg6^]=7ReQ_u$5F:9+dm*!7ZP(N8M=,>]!Vq\2lbA'bU(F%,XoX.K:SlNQJ2
%9&k?(`JEMi&hGZ+ec?u\"-B*i?MK&09PpHY\LBdFB.C&RB*#pR/ugi8K;-u@2aNU'V@+RGPrZQT#uW16JOb/">G>2!!/_j$OO%&1
%JfDZ-M]R9h;)67V=UDNnd_S1)PbViIp85h8A\HW'm<,eF*,!LUcf'7&Ch'kq5HYp?9l5/k(OED7kV6g:@&PK36Ueh_VAPbC5\%D:
%FRS/XF8IX2ooA'TTE,:U.a.!%3VX>Q0;p1dO%%CHOEX:-&LUMam"!P_b!oBk4]"s61-QfaI&,oHY.HJq$W*_2,3KeJ!36oh_-U/<
%$;bbA1qCL!C()Ha=nL)NQ5D[q=Djs!!J'?=Sob]SjCs.\.*\//U_Z`2L3DfPIL/I3hH>h1Q3/t^BHt`;H@T%8Cko8(<E.-4#d`m+
%h97hA1rqX79I'=<fgr=W6!`_@Y7ZcRA<Y\MTkbH@I^#;hF;!ft_ZR2Or0R#1He#ah*t<<8pPtah5FCkaX&Z)483i/qSrI"[-ph(@
%$402@P;&IZ6IFUc$T#MZg.Hr$+EIFSK3HMkAXU<u8[n="l/.k(^4HDaXY0g=j%,fV;m?-b$3u1>n&"nf9Be6TB<;FM/._qpqOuUe
%>oRRKWQ)lK"gEltA7BE`)2euMh_NX%`NX*b<_c9&9A_5RUsjU@OXtJbC*gj5mk]B?oB5Vu*]epYG>(T85c(7>)\jC@(A/iWmfB/g
%^4knlG-E6!!Z+_\d^fSY2$aBWJK#>6_.AM\+,9H.q]cF-qolQR,5R(f?M7`j4bj)\TG]RMP!IAuk1_,-IS$S^@R4J%-RHAQoKf,c
%q,@>p[]'RH9$t-b9C7G=CBu7lab:9oIurDE\%GpsHC6(>2cb/F@_ku>fXFO.gW#d<D75p"=n"#4"WV2$"iVL4b"&)O1[_YHb.:!C
%_6VhrF*+SIP)?%CARc>U1K@46UVFB)"-LNJiFN@n)[4*o$T-PVm"g<]MluU$-2NCAIM5H,odrG9$D8s3e1FY`QEDAlQQ;(5_?%T^
%WJ#66L)2J<;c?^raODMO,K_t_+J2uQi"U<n_1)r/1+g=.>)Y_*8pFWq_ottQ6)t[ToqIAQ[jU9cdJXi^8W\S/eoWK91YDp,86%r6
%6!][RM7E6`XB4h#fle20^.>kap%YkTBF7`PAUs5tZhl$</e%)eS>'qG)1`tjbE=`cJN5>]V/Y2+jKtR!6oPJ;NO#6f/>Vf3RO[[;
%gGN!\F%W4)8k)62kpei,HI>gHD[IJqW\!#a;-1R=0H"n:L"N\7@]G;'!/($t<RhNc<<XfB4lTaI&LokQpIdXaii]:RNQ0cp<>A?E
%c$7Z:#gr5AUI/0=<aBTb<<nfEmEejX._`ibY0)"ZMesMX<JI!)g8M'`!\i/Pkc1Z0aK;Htj7uMO_&ffu<)p0S^<W`nEQ,JhWjGrM
%h*Y1RcaJ$q<QGP=6M-tOp6a'tW^%XN!Uunbo"J^@<TQU<\Z/9V^6oJ2.Q%f,%o%c42'd/`ROYH:N]:]%?3Sh:k*ddMHVIKl/)j]1
%<I72acr=<590R-knk`9D!S4c@RL5f@]5q%R\.cfIekW6FO'du4E)i0]V8>Ap'd@?m_4[fIe>+,)<>?4/S@Mp*iN5F`cA/:^s/:8b
%K;Rqihe;a)RL13%9&lVEiarE\K;QNO=kd(Zh.\.6WjF&Cb5%77)kSQP8o@g5!l;lWb!aAsN;Wd/Bt)`Y/Ha/)laKs5Y9hp0LKY^E
%;Xt@MVu)5l5e8#FT0&^NhAn`t\Gt@@MqcN@=aGoWf;0A1k$*-<]kFdJ?ruW*)!6j:GC[2JoGlP?2OX$Ocb[\VMB1u)kXilKpqHY#
%@2AT\r4)nJl93M-J]H+(h72qBdrS<"+,<15cNci0X0^arh1(n'M!,W5>Y%8l([$Ao-p&Ld;6)&H,AQpXBZ+d-h??Epp^nPZ4rYV1
%l1kn4\P:BZP1W4taY8S-e=@#4k\Bi[W'kid-\E_FFZ*KF)XS\UEftrcLJ1GUnEusk8_i2D2E?9`beV?115=/4f'6f86k,RoTBN<F
%C]J$/?[`ta;:jq3.9["`TbO$s9a=TrGVYe@"3L9GW8NilI7ON+n:!Y<V%oC-X6<UaCgb6Q'MO6^lur><E(+JUB#?.apLJeCH?(p^
%K$s6V(<bGe).lb1aZtcI?VH2X1gP1=(*sBW$b'5UR(7a*5FM$qkTYC4m,E;#joR3/\BK\6<-C%l!q+!RL0nndlTkM?.377m"G8Aj
%K.ond0c>_.@[dhFBU-hs@aOW?@#VZ[)30iO1Du::K/O[31&#Q@.&54s@2Y$WFC7Se2&2QGdFmH:G*1JIN%)2j+W@21QjhE9n9gTm
%q$gp<2(1U,WnHjb576$+%eskU7TZR%6T2Nr59$uW<SZ93c1;2l=Um?FIb>XG%=hh,W%jG08Bt_3rlkY1Rh.Q*A;KWo'5p:HV8`O0
%+LQtar"KncmnrO2G0*L.=*Ou!qV!6Ip&\Nri-U>EKZbWlX8P#$*(4'>9shS7;,>'$gPM9hkf,T<I3m"DgQ^7NU[^-R%^<m3?ZQ@R
%-mtj_)EoZtn=4PAiUif=g(L[UN>@L;0"\"_21fgMN\):Y1A9[I"9nNs`UC]O3C_l[E(l?<$kE.sm[rlfm6>`L`)%[\e1msq6f4J3
%T=;:jABJe'+W!tbOYsAbqK>(1)q\\L.iuYXJiDNNNOXO!<jHLCq[h@.=rr0r_SC1^`$GmA.:3;eW.cN+;MQ'Ues4XP6gX;G;D@Vq
%\\i2SBfe8,YISL//RIDpKm!<4m2FF^^dIaK%t1=0?Q=_p27MuFiMu75L\S+rD/!YY@u&O!#6EnijL,Qi4H//?&ApcFi!e(S1hE;g
%5miARhEO-@@/mcC>Xg^VV`q9<N>s#'+EI5Ip=?2fQ<YPbMS1nWI>3mZRA66SJZs'LPj$g%q%!TC1\R3hj,Jq6a`\;cY&A5EKSkWU
%(4^.%DioDu\s.T[,l6*>]F.D!!s(iGEa<UVY$6$OI6`^LGi"tt1-C356JUr7jsPr?;@H7e<TE=2j;!S]r4)hHl91hU+JC*?h)I^t
%-m45&)83p9gn;<u!@TqGq\D+eY5X@%^e#7.^\sl^^`='l?7S]TCN^@j[aZ:[K*AWaaX7(l_;_JM]EDTm5RJUt4EV/PD73n%SO9i]
%ehB?R[J$.gDmeTJn6)JhW68@4@!N=+L+kXR5-EEcG$:uoCoa*30nf,/.feA\!G'r>"]0Sd[VD9H*C'G?SGh2m"/*-gG#p0m/c;,8
%i<RO(>31g#MQ2RPQFOZK&OX%5n%rC*[?Cp>@abnm5\2F^VnC:kaSJW.P%^5+_<pg-/$<G\Ee[R4rr@md=U?<P6bP.QHqVA481WpT
%O%Fg-XmR3!,T1,q/A>QoJJAOu5IX,4b7lO[UtH&_6!:m@O^b_G6Yp.7em#(*Fb$&?<:1:mLXe.IW@8*+&1SS5A8p=^l>9(8"SX!h
%<)$qd%df't#Xsk\S&s0S#QEZ$gSB,P/5n=O\q`LN#o"1T1_Z?+4chNbZRKRG]3'fr3iH7(5aO?t&QP1+0.1).,YBkI&@53<@N9e-
%;D;\4g3t7eG6es/7_YHdZ#BH*XJ)K$Kt%iG286caQ6`Vf<G&;U"2rS^p+54m+gUDd2NA`3)dt4W'WfH7e^pD@?;Z@H3#(7mo?r5!
%>Uk85C)25)/24u\BebuLRB?X%9$sBSbbGt^.l7U+6_%a.\*.5C:qQYMa!cWc9[2mC9=5uL4L%F*2mjt\L@cbYdEQeAD_UIn%p-l%
%ncgk<)?_oZV@0nuct)h%F/iZ`CB95p,k.Bl[H52>-r4T!._^">/c:V>>70=)#cP^ZJ8EqaZ$?0XB1eZ4MA%10)CgY=0pU4O`\5<U
%_D/^t$n0m.G&b<D!Yf_J0EP^ADcEimffI8P%U66;'@@%-g%>bG`fc8SG0@kcKf@oYTlR)?L)M,2#.2q"@[\0C@&nKe*pM`tr)Ps`
%2!7,D5ji;X4%d'-]8M:Eb#jF)gm/`!!3qO&?7R*]XHlAE5DQ"#.ZY:-2qq=RDHprB%E]e'i=EBLmGnE^=/]X=<!JXWN^5lU@)>!+
%&qVP47N/6SRVaV1DLUNXW:(31l*lD9Bi]@7rDo>$Hl02XT#cW?Z:4X-7c?N"<Kl5:L,GDd8p^t#BPkL!RcNQQ%#QY,XjTn.XHU>(
%%uqTSrAj((a\nMsnnUtETk-1Nb`r6e%A(qh&0N-aHR5!F5b=bU/W/k$D=.hOXCM'&rH9J0Sj&SEfQ]Ug+^pBHFb2N8fI([Xc#,e#
%J^J.;KiqZ["?Wu$q!kJe'TPE)<eDo;4"NY6DI-=umTu[-R'h<T%^cnSE@JR!1jk+kpX.^tJLd%MO-+5_%S]?Wm,rOg"+e`koS>H7
%7mML'aoh8]M$\;fIoqtWNmNLpm_&%j8,ugkPQMEZP)G;9NtELObld7",-V<@WU1Tu+[[Z#^49$29b]E0mcQ-#WpoR[5M.8mj2AS*
%k7@6O"X,^ZUKLhn0N@HZ6#F>G^fc7ED_9\IY;gh3eFfohD=AhkAcHaPQrb:MY,.L6Db)J*m@p'E0rf0Bk,dtt"b%m9[Xo,d<@rg1
%*/Jf^^&9Lb4Rsk_eQ8mu6$52"2K+>u0Yi>Z*sl(Bg"0,.)r1iMQp&8']_,_H^`s.Nk2aKUA.cus@EOW`RB)I?9jp$S!I*aei.N*Q
%_JNtEmN_9N%+#p!rMU0jVcY5J#/hIGc"91K43l6'Z('"H#P#WT7lNN2XuPoY.i6eW4AEgdKWmMtC0t-Mc8cu+*1aQ*R?18&_RVP2
%gT$:bVVu+a7*nF'#jFNC`0O<YZLd<B0Lq<))XNVCZIo',,J*)Alg`RB=!`3qbFim5>:mm>fhs^<^NMkP[3H$.%#9!5O2Trt3mnEQ
%@jLa/W3?L>IEH$kJ[R/,3dHQb.W"+q<h_$f):M-O]k1XN8Ph>O9XkRf[A1oWU;1i5\!F"4Q&?H#Zt:^nR1RMpN4\&NR;?&O+D@B*
%aE#]0ebJ0d(+6`fM]N'1V#Ct2rBBEo$Umg<F6*FnrLj'!nA_o2U*Zt>U\MJ_HRBchhr!ol&U_iA/sZeK7]WDN.=!o\U*m'T%\aas
%)nCcXWAht#=N-oJLZh/r\f<=VL^[%'!@biJ&%(/l7<6f>[QWG?5[5fZWMGUeW<K^eC"uguVNZ;nrCYa?f&Aql(]#fRhe]?SSXm30
%MR*0V@].<->f+_?bQd(E0[.C4>bgd>Mc$m!Vlp4D4MNb\\Si2JJ0s_-O/2m1Bb_q]=^>2HGp"La05F]R>/N4+qQZeuB*DC%fs/t+
%>B^B\!ijQ/,CthFMnta]%Z4B1,5%![&QTGulbq=2!*(6fHnh,#J=XWQeP?S^A/6EP[LiSU&l<FfJ?7t.AF)[R]/H]6BB]<\).*C6
%faF+bXnZ?dRD^pI>HB`3UfsGrhjMAjEhhLXMOWH.?7T.<aJia7K9'<E1GPUQClUEm4kE"ukR"7aT-NDA[C1JSiRTp=D;9u1Ce@G;
%>.9s`Ro^te!F;-iGhSI3=38QQ:!%CcJ`3"GMOHtf@GFtRX1Um!rIA?d,2Mu,(MWKKOMo&^p%r'3e4cMV\I6KGV;D]$Zc+39'TI)4
%Tf,s"Pbpro!9dp2%Gg_8L1>`%9Vgtd/N#:pF\?>H8FpI@'Mj;tdH#ObO;NVDaOc%hFj[gPE!sk1>Z8fGZ"SM:A+97G+@id:(rNb3
%/>`]<R`r:aI+?4p-AI/)ZWF)fCG]R[AhgHXbN6#k9$Ma]C_%7Pjb&\I(+UaG-POC1!VsH#bc6@M`-b#(k+%)<+LVeBAAcoFf5g_l
%3o^3.@EAlc`,%ge#&s8Nm)2OVW%?*0rihK`'E`EoD!%gP4[j;BR8&t%#W?5<L6.N)W8sHRaBG*Mm11:B6l"(7=6lu0b"573UC[gp
%JF&e".Z?Luf8M<eO&=U:R8fE:b0>^ab0TL-4uc.A(s]-=]Pc"MU)WmY^fZSZ\HOd*J1aTBDjh07ZfZp7GXm<YODNK.qeHX_T)a<o
%r%jqo0#iJ"Uem9M+pVW[eG&QTo3kk06O:bP9eG%!crOFkZNl)51/NSI/4O])'PbVp?i5GQ`k3f(=$pL/R4du"^R<8`-#Cc17nW!3
%UH*[#K9OB?WK;!b,rf;Xg=01En_"59a3sK#@92d;hkjcm'^M3U_jXMqFJP+X_C1(^lLC[U.CVGgde$s&iZlYZ6us!o7CIkn]84:p
%kZYR'Cjdo0NH@[Ds)G'LjZGdZasYu]l,0rb+r?.D!g5ll.gn]H<5Jsk*@%*$(h[7h-%tJo8QQbj<>.=)+sBUE15Af-k!mn8lf.]>
%<#[Mhl<&3&#aG!!1e6`jP.L8)qR8"6oc(e/?iu\5(g?Ju_,X.Y\\?)1@O:>LKJRY"faZct5R<Y39nI\ND1J_4G2t]5[sE^/:aT,m
%)7e[fR5/Dm.20s#RXoCi&L)iYnA0_9O_)-u!OVa5cD4BF6c9hq0)S`HcaFLQZ+jGhDXi!k'920eUVfU?a16>$9VP%AW8MNgo!2@;
%Sr"jUUtS6C"\DQ>*k'dt76ITkiUe9\3Hj(g!=^[N=D'L)[?h[26f9T1][?n\Dh)_sn.5nE[&%<hV#g$r;maM9B0VK!\Z^,b1I;-t
%%?ToIeIQ3a&(e*#ZZ(jL%GLaC@+F$_'UV+^:kG&-lV.L6I^Ro'T6="Q'f22VBIe7``.M0mALZ#%S2U+5n`#2<SNsO9IIR,kT6dZ;
%H0Skr.I<';^W"Hk^FX)>KNYYgjItsFTk9?#)3bVKfrn1Je)Mfc1*'&/jr%>cf#>3Z>BN'k_p;=-ZR=Mo;KPfq6S-F0":(&>(#!7M
%c$p0a0;6o=\oh&\42,kFaO`':CX"mk)pJ\m#P=h[RWg`=fDR=g[qpIpr?N%%N&TTp5KVt8XcHe&G':J&L[`9gmddVrf6.rGYFrn[
%,h%%#<7=SVg&+B(AXb!=CGN8Da)OV-rMC'b%l4H'oF0Ofg(4.gqZUtI>k05;rEoq,MGTs.a*im!'Hj5(c*r?/R6/\a=*;Zo\c6in
%UA;lU2M!.B2DSAuF4C"%`aHpcRE3Z])52]!EhJ,^B=c)uZ\(IMM]N!:K.OfL7hE^rX#AJff*5dHYDfFM=)dc7SbXddC)hQs7V019
%(t#h%k[(pagH'LgCl<k`HsXbKm$NWM'i#u]OMqTTg[Yk`Wn24d\H+`%r.48lA=&CtGq?AcRj#9XK09liIeBIS/?b@@J,'W4p^d&F
%rSfG!bH!kns1tb?ID!DX9$k7jfXa/lH=8o_'VGeQi1'8n),:VBdOG4Xa1_JK=!BXV4**pi6_Va?KC"^6h<Q263STJ>6sml-m+N[_
%-]f+iM;+:*5@oUjgPt$?fTk4*%AgF1Mb#*;[+(d02pabG4%eZZO)2"92[q&_ilN'KO^qsK*?X\p0)r<mX_Y-5N%4OI-@;l(A?UCi
%8=.u_bnusJmPcNm(GC9q5ZJV57.tYi;f\es7/#%kS]G+]R%26($uX]N[Pdh^K<Ho5=#oqLCp2UmOmSF9/@X7fYD^aJgPb89gT0V<
%FejBSkl+!E.f1W9>K5r>OF8L'q1TV>Y"88d4'T/il"2g@2+Q"r2'RBYSA?3*C+`m@_<^$*AcG`BPF_"Cc9JHA%U?1WNr\r@p>Uh&
%[%[ZUMe:gl6h\BoM`W1m:[ps]-8`8>_("B5H-t]!V#_RG?72[8.U$mQJ%0R5BF)J141JT&>PO<g\R*rQjS!Xk]o`%PXN'm9ltRhJ
%PLXDA0;.t-&#RqbP(W5Mdl36M'h2.rY@qJ`*mu'&0+U0I=X0?-+1THUE4qo^85\$]?8/kE-pG^Y(_u'iOR':k+aQ@g3OiCOToaK/
%F1q?4o.%RPJP%(i/p\=,*O\5;[WOgS2mO7g;rh5d(tf9L?E%ceHSGo5EQUt.`^A.Em$0.(HmX4!9fi&@B<i?#A.6d9qi@m:DFsOO
%,@ml!,C:FQmURt78[jP^AasF<>J^j(9+N0K@s^f(g-H`8[MR@R]5)Vp]b"A-Uiu-AY70lgg!"ZKQU@9U`:P<sL7[()5bkS?N9un"
%0'!IX0;eB&m9k:?g%Opk_"PXQ4+s%-[ML-NRmhMAp7fmQ=.n/)ZFpg""tO4lHQa`uZ%.JoQ0kmN5kcIe8%+a-2JkST)a<#e?<D<p
%iA+SAmfP5r5(-odHQgo(UbF$?+XYD(^4Yd+QP5G`qoq&hZ568*!p:@0Wd_*ss*(bM5-?Gnm,d4nk<ic5M<(\C]RfF7c#L"7]6WRQ
%0eVQRp<"-ehoT39aj]Udk9,+;&9)u"A?Sf6Li(qh?H7g_faC$bF8pmZ`Fca5gW<dc+2[(@faB]uk%+,n$G#SpNJ$P^X"H4=>VAPk
%>Yi]PLITpuO.GUUpp)o+#M0>)@rQRtF1nOLb=M<Kf$/d2PujfRE/o[O?J.<3B<%;j6g[i+L(-`j#B-8]iQscU`F`(&5UP&i["pS=
%PgMf;(YV_SennrD3V;s'Ja.B*#Hh,_8AWu3lW"S,F^+e[$<Qf`C/ck/:^Jla7-\5tTS,HK$rK498Mo*+*)nSa9A=aW>>fe`7A**B
%;E]piT#2Cca9KY_?H7iGY?.J3ar@ltgkAAIaao;)\6`PC0_Ba3]o%SM&$D6dc3P'7lhGG^H55ILM!MHpGEWUdan<e7@#TbqlP6N8
%R\QG?KsPlJ^3q,NAL/K2f;mPEPtF3L?4PXR):r[%0\b^(`WP(Kl33up@bdqh=T%5R+&oGLBH7O]02b(%g!><9703h\Z9-SEj='QS
%Sa(nT;U[5J$fi4hi")hh0ri7/olA-#McWbOh\k+*OAijZn&_<?#La'nUm:ArcL_/C-cC.8HLYR>[(lEN9J9:6;Abg.3"fQ`8G(nE
%oTg#^=,a:Mm%T5j?G9X.Ff/dgd0hAHc@P0_D52Z>$B,:K(1]L_??tI9*^hYL.1c\F&\W4k\F)ZTK)/q)o,r@E3ioBQkf"h@#GoV"
%?H)irS`n&&2:+le&4A13>)1gDlU-me7r04=H-)uQFoiIdLh8@@"Hfm&AK>V+M=KbtCQcBb2JAVOl#hB_'=a'04.rk4&M59SJEeF8
%1k?LB?Kd'UDChe(K7.;jr7n8XI"WX0Jn%c`ie.M6]acp)-)5dsd(-Ko'>:]jh%$0Gm;ZhfPQf[O5SZ02M-bL?.N?d9qH#@IN*?uR
%r&FEBM^A\V/$JZ8(YlCBll`PN5YEl=C->=kGG5nG9%fXF]qflgSZWDiYEJT@9aB"f-g+1qJkC,gQ\5D9X"N^/oW"4sKKls[]rJ#>
%,'qYPK>]2)]+_l^KJn0[p)n[H`=D"Ol<8#`ZD'WHd>J,U^Bb(==0R6&rFV^KnSia],Lq]KfkGJu=CXLs:EEK=@lAV-^]gEK,L[#3
%cD-@7@na)=.YlcHkllp%".J$'X>PZnklh)_af&O73\^<q()*ZR`Uj4q'V)./=?k^tT#k:ZA]DB8m)?rr/>=`2$ELVSGXM0S[O[7%
%<D>ZWNkKVA(Z)C*bU?qIBe:5Q\lT?MOQ^"0AIhLF+7=5(lu5'K,2Gnde-DuKC$JIf.[HW?TR1)MW+ljS(Ph9`R:Y",F@XFG>$T<R
%,CgZdb9t5c)V`G469=j&6"52sPVoo$pn;ubHk+21'#sW3l[f@\GIA=7<qe%=2HWtlKUqNGbeDAu(PqKj?5-o:"5O@E"<N]IF]fKH
%CM/o`mZm0<0_Nb.07Y>?kMr_PLBTGc*k"eL?V^-q+A??cl:grH\io=:\ej]e#/$lrK@qbEBA;ZWf[9VAnXt40eX>+9pF>=p%=Bga
%lm16EFoMqXQ:q<P'dULpZ@.ON4$2Ua^)*ju">[sjiW0)PY'=nIiJW%\\D_d3&O?XDI'7@I_27WGc2J_.o#CD*=pMVTaYS+_Cih=c
%Cm^1LFaU^J]eKHX0M(r$6*Vi,]!(&Bco$buY@>U*`V*KkV.r30455[3k4)\qVgIA[bNoI'U3en2/N12lpgMO_=?rYnUUSB^<oUr_
%53Q=l\%..ZKam-'oP>c5oDm\\)aC\KV9\iW"XWYmMk+aC;?P.\(^JrV*gLf;G.nc?3R,UipF=:pHo>XNZHZjfU3d3Ja\JB&^1!,K
%iY?PU&<e.[H]?oc8.Q9fR"O`/-ol&Z:."PZFO$nK]nuu_&$AtT8J<4n=]B*NFsqg$]s='MB<i=?-+j4uOM.:e8286.O&N@ooU217
%2U$Kbo`DYV0a"smMhPNJV?a7?p5-cG]G.OZDoY-q4agi$HF[$0E4t$J&_AO:Qmup\$Bq<mQ&92+ET_XF26nMif?5<Q?0sf%iBnH)
%bH<$s=-DlL>X-$N+t[6dHKB>F7L.NQBP@_%/"$jhgr]`L$\efg%L6'-=dP0ipL&=;6/,pd1^Pj*:qqbDfZ1PV1!RQ,U2@-bOm/-h
%H(nhq(&KI_1=Ca<"\"$ESEr];ZtjbE`Um?B!O=V%BtaI_N@0NU0:0K4GBj^r(R*dA2DVrW/7*'4R9i^;LmC2P_jFc27:^[`6qje,
%Q[BjsmS'f8Y,i?qVAEa0_2)DiJ[6eHg-G;IL0DJiM)1kBd4L>G00j&G*^hZ:9QH-VFaU\4^$p:;AoFsnd>M6*;Jq:sHcYn'HHFHl
%7e@$/P"#oi0.Wbu[]=3Hd45GDjdkV#O"@[@d;/[,_HVP4]jW:7jaj%m4D+i5S.8.m[_`G:SU"O$)q)0e,b9O3VFmSLk:'RsJH=*k
%K&m6k00(%@YAF"scU=u'qpN=Q67*io\`jCFVh:;B1VL"#K%Rdn^$OO6.33W0=0hBjANeDOZ;ZD]-m-\1KB^>q*WBj.=[3OJDKB?7
%eSTh=esTjbG<=8(gZ@FGl'3h\SeX,[(\d\V(t39.%a-mpQsTSZg*ih"]_Tj??9EUg4\;YTYQ<YgjdU1I>VA=<4`e:Z=3Y1U#M4kh
%;O_[><h&sFU7!U.'U?%h7)\^!lBf0pVH:2bATt"Qoo)==KEKb?'0G^%oO7knX!T?8FL!a`44D@j&W2d9kuI'To`FZ?l*Xm=K]:0M
%:guQu(c5U9oK(V^5YoM("GILNj:(FQnr@0i\)LAjl<B/*U'H%a+H(1RH&p"$4,%JM\J)%0TWak^d9"UuYP"4IFjO2bXKJ,.Eoq\M
%cLo==FWAKLQKebbjmaBs03IR7%s&Y@Fm!Q->d+)nDQd7bJ*qi)L42C9N_3$T1HEgsFr&Pt+M9qjC]&6uotd!p?IZ0A?8j7HYjJ&c
%UqG=mjS^oiX4(OqXkS:AgZVcV#sHDfXikna&3HXUQ2KeTaK'`Ph<_'D8qrsj1!/(s;6N>_M@s(pNt:ufq6/Usp?B,+Gq9q]^*%ir
%*KonsIRq1n4dR=t(S/\\fuqWPM*tt(pW=.0Ie_2^Oo<2N>`nCQ>dh^[F>dJOo$pKIN4`C;kDVO^6Xmc"de7k1B)43*Uu&qZboWi3
%\7bD'U@`O38JIcA+k[7<D\gIDVshnUM'gJ[P140hk)r-sq.u4UK'@ZG>oFesPW[nPEI=-REdU[Cps8!uP)`=LQrN%V*0[l$F0\JS
%6/LdmFF5^iUmI[r22U:acSgX.oD'^jp%K=On+#T%S5ebMXHSB7k+,K9aios^nGD@>ZrZ$pT/:pFs.k_=D$EVQkAjDQ_S+,Z.Ju@?
%V$:?`'.!uMb!dcW/fUYFfmK$toR',#'qWZAM:1uu.96+Y?:k[\A7eFKT#sd,UA*=im3hAn;Z`T9:h`7CQ_RIRI?mLCkOMSE45OVM
%ZupSZX&A_/[RptOCq`N+S^1E;$(9%@M:.Hj<W\o>>:FDFS%00.kAs_)jce@J23!gq.lEX!)(\e\C^s,2H8^\XlFtSSW?0l.Z8?qa
%QR,8MB=!i8cfVQ%l04.mAoQSfZo%\5X!R92]TsuE.'oc>qqRLQkHeBm%s.OuV)mcp>Y8#?k.!6:F-l":(!pfh9=8k"e"t&t1=r?0
%:M.5',gGJ`7-WB`QZ>r8F'blqZWSqu(+8][8gR5E^,2`r.efc^H7o)kc1G9?9<![!%%*o2mW)\:J!:+8phV!FQ+kRtC%tsd9Z-&!
%@7lFGo3i!@c\O#t1+/rbgLO>Y'qWX-C#,<'N2[7s/iTZMhIjkCI[;-TP<#*U;l/r(A-.7F,uaSTSkPE0GF:4?:Zfg,_K4BcD(49&
%bLHBZba=7(dlB3aGW'?79$cVDe2Z;tcEn?]k0?@omnrdP_sd//)EsEP'4i9IckLqu78rD\*_i\M/s@Uh:Zp/*iRr%9-p=1ue*<OJ
%W2[Y?3AkZt-F7H%]'f-($GOif.3Y5+Xf9`mfeirjkLUD3QXLP=+6D-3r%?0iF_ihZ-;%'Hg:UZtOD>M`VmC6?n8,h`bB6#/V?Uip
%kGGHTWN;Rmk`^9NeaD,7Ri8QbgmaIj\a5e6q]Pp9_06bV%A1k\WJ8]1iRB!pk2Fem9kNBAj`$]I;t,2n:5RqG5#1eB4sQupqja/s
%ImI+1Q(H7DM:0k@3Dk#b2^_3^b0DI65!LFaq$`fD4e&4qH9.Ijds='CVc,1>bg`VO?oD)a[)HRa:)0AFf;UKoc.FJMT$>rFddpU'
%Xn6/\:>6.'1O%]T*m<@gr%<>o_/oE69qC*On5KqdF*J%abMn@5I?_cNpg#4BK-t_cU@`gk:R%HrkGc>))*QO;WLTR:kM*)02Ni90
%4gjV"B(hH;gunAfr%>UZiH+fX<VSbqVld>J*1tYsn!3!Uj?5ZOp$)6V[SJP>Q1%Wp[`OK#$9-;nr)DqXXIlusF7Oc`ft#>!(,VH'
%rMaLuc2RN81_.qR+0#Q%*5#d$__9VfHFWtHOM*B5s,?t::CQ]o>$1%L]V(9\AHoi<l$,S^D*C&Fjd(pngT])MAdJ(X;`R/tf,%s(
%^"e_ASsLhsEdaH,oF?@OY0bAbEOO6;%8$#6q*HadQXgN<>i.VUkiMX@J&'KZ7c$r\cb%DpNmHes]o45M+a`Ea,j??F6SI&XA.ZFZ
%+6O3K>T[Pi]j+p+8+^hM5pk"&od..:0A$#9U6k1=nqg\U0?GVg\\92akiMXpX/Q!Z?!bq%o`^aP0-a&,a=V]U8U<aIdE>)/HZ";[
%b=L&#15ren]?N'V)+f/#c8'^V^*(bcjnb-6UR1:>EfFD.O0agPXtRmUHF^a8j65V$P+8;6l[7:2bOl$a7k`J\A0/Eh?]od.Ed^OQ
%dED3&rmAp^E<]=Y-ZbAUXtRm`HF^a4&*`3PJkVu,OeXkr,/&pT]ce?ZA`W&<2]q;GqD]_ajn^qaWOZbb=\7.rah4F9JYMnobbUSf
%UA+$0Uo%_kZBMln\]mor\\9=Vl"-[S4Zc0uA`2c84%ngLjQJ`g:[.!;JkW#-lO.`u?:Kt3F0h-<7Z-'/o9EXb0?@7A)(BmXc<5I5
%P2=HM?_=au1,AKnS%&$1I6m!n;`Ap29/"o;fh4!MQfKg5>T[T4]j)ZB0YL^uON$j4I@S@MEdaJ"oQ#@G0%8#:-.tsFf,*L(]j+p-
%dI_I-5u,nPol4$]bOo:Me&uktZg$TJ34J.k$$s$eVL]4:TAT8r'(gneVjEO=pY6adQ[th(gao@ilf1+*Qg5#7SR/HPaE;g>^*MIt
%jnb-fVjEO?2e5%a>[NTaoJ/2oL9.;>OeF_p4hZd_^#ruk]j)ZB5.t2CB0X(7?]b<[Ed^L`eB@M23D_@R:%-b<:bUE:j?^Hf/A5\/
%6G8=/]k?Lp]o4MUB4jTF>T`,r'n2beol>IP:=RJ[@91n$ojM1VbK/+YG%T7IojMafbOojueB:D3HZjkfb=L*/G)"Mio`[?R0@q"N
%8\JA9OsfoXo(8N?.J5IEoU_U(eQ;T@[a`Ln-2CFl,>IX[),i15:%-aq;_Q`=A50aB+6H;2>T[TR]j+p+48%Si4i,IeSpD8GHI'm/
%Wp,qqTPCLc2M^SZqDaDuAL-M'4-/Z<ABGm[<%fIdDoec$\\9>YlK.l*I&`P!$Sn_gXtRnrHFZ5bWd;3>bc?'#^*'cIjnb.qWgE$E
%ZE%<70?LDD\\93(lK.l**35Fl$aQj?XtRl&HF^a8e*?&kP$G&SlV"Oc?EPs'[sAnuHI'jGl<<@/kNZX:k7(Qq0-`^Mfm-XnQec4Z
%]o3*-+nt85,j7BMqs*;>3</:*qCi#P_36l]0@uP$@D,oQOGELLI7Yd:bOl%L=>/:HfiToZa8&gjfD1B,Q][t#jCGr_%)!f7X5S,F
%=YJCIR9=C+:$-&QG'gFZXC'6!)jsIm=^&N2>b9Niod-#00/jlakN-HlgiDoh$IN\(<\$7uZ1W-c8^:@2`,+#ULVbdldC]@(Y_8bN
%T!Z1$3F,/Mfi_VBVpFLJPq>4ifi=0^\_O@J*1c78]_^aqT7?D,rf4ShpMIXCNX6#q^;o<Gh8-1[KY@c/Xl*c8:h_m.?"N\'[*QaX
%EQm5<;$^bYK+,OWDuDJG-9_N8b\lZ;V&N-WIHK7CPQJ=3WsEb=24^f*]AC=3aV&*VD#mjSX%atY)>"PP*pO(MZ%o!XXl:2&97L##
%gU`_7:_8e-Tm.(s2o-AKXnteF^k:tb:+a)n!b,Q':s?47Lk7H3'[[[^33OI3=](?bJYXD\]hm'*oNg:Ski,$NP^N(<<N-.PP5RhV
%+st2^AI'$tejYWE?Z:;+T\NLbZ1,qsEn965XFW>a+bZ5nL2&6\b9e/Ed%Fk/LHO37PXABW3/%sKcO[QI#%ijPdUN8\,q=`HC:]&c
%&[AZ:*18DqS$kM((A8[N#j5u:##/`&=gB^sKN'nl+c`VC3(o>=Ok\X(/[8FaKgdAI)$^M-HiSkcSVtsRJ08*`GrhD#&@MijGnt"a
%;3,90n6qr%lQG7+Tafji5So=G3b0oQ0WG9-fLHMbo(iu-g'f+`j'\E/E:6mX8:>I.JZafCAKDr5XF]\DFROWr)Yk_5b+brA5e@8<
%+4^lmS/K7?bofDBd91cj5aL[eDKb`)C3_Lc@8bMqY%,Nu+9_OtcspXFZ%]_(O>)6I+k\+qL.`,SMT+`$O'aS$eeXe$@[t6S./L?K
%]08HuGK/2q:_[3`!L4jB4[E+=[B]!0S[]TS!3,gt4/EO4(;=jpfVH=`7?a8hs'=/5X+T0r)msV?HnL?MUEEf0UtZQ7&h3[Ig(\c,
%CtY/oU?4&MQ,*&[cgW0=o?)k5()d;7S<#8SKS+HjO36>=<_]N]=NqJFDBr%48-m(n'l(`tR<Ju-FtX"$$Y$Ln[[8?2@T$#DOXLsM
%bgb4,N-2N3PSEhtXqaJ3Chtb/=8n_W];cW:67b0J$,^gNR-N[ad&$>c0ps)`O]!-XC-rH,eHgZ?MXoJSX]ceHLeP.(jm"=F?h!]]
%!V$AZ/R*PbddPg\!%B,pI]iE%E@(@u&04BrQ`V)^6Fgp5BZ.?YZt<-H%EV!0"Nur3G"&HG>WCk]T;Hb;>"S]=A/R\\]WGlm"I^N=
%9Y*G"*gH`1KtP85:A_]h-81hind#J"<V08oi[5:`<>sjD?%EZ\P'u8.*1@J@:Q%eRK8#F*%^*7:[(9CCkHK!U_HmO:98=MQ^,6R5
%H5SsKe*f^mE"o!;6Aq2LAt?8J!ec((J71dg@\q4SP6NQo2lHqoaO/>DZraZq_.-K^!2*cVCt%RldYs[)N&%+?`f1#<-(/c6L\*Se
%ELe1lVo:OOZC)`;E#$j2?Ub,!ogW/&S4JAaE\-?8YT"/i(p_rDlfOisRA*)BZ[05$TCef`=V/E':gS!(3BhA_lu!/l"UR_;0VQI7
%Y*A-*&<mbP,HK-6#!ffuS%1^Jl**bQU*1u9UkB9+j;ansIS3";ab6&6Kp'*iC$PDr*?nmeQEBIX5^DC]jJrI2@d7E)5bVtj/_0C/
%"nsFN#n)f]cd:Z5omfN\jhoE4DA_[[e3sZ?5-TOh-"C4T-Sarg.$\6KWHFK-r\Ep)C*dga7<YNQUUnA\05:#D<`G8r>i!WA3AhuI
%^oQ8k+li]$YVL$DG*'q[';>s^j/I#3!,'plL1"4qGAu&<dI=]C`2_+@@*ZH`l<XLH`3sQYgLK/dBPgrkAd<r0Eq):gbWj=sZM+FT
%`Nm)kfK[3Nkshlt=0Nj+!rYAc)#)aG_=SueMJYo>s7:hT/pqM[LJod2&5;hhQ8'kRV%/^.d'YrOTr!PJ/B\)V9h3,m+G0)5+<;ot
%`nMFIAHi-;#=r]h>%nYll2dS20<mm`m$,/=I>e]k_IX*2$;):&fB;&YXo<7i]VB)1`Y0irOB*6mD=]fQ]n#faJO3`/mNN?>!c4QA
%[4!(*9LSC?iE#jm(DnA:qA-ah8QTe,2Te,ABP#G,%BFo5"!o(Zo`A*/gMW?i\MYds3!P/>PRq+i5tW&KMT32D#$q(m;eE8nTop0M
%f%.K)EE1[(kXCKML"QS5h?.'<&9U.\>`<>h50NJ&A^aeq.5pdrGTRW:?HqXdZJEnaj><,(A3ihHT<H#(I0MK<IOlTqH1R3[Cru(]
%;)c[Ec3i,'pMB)OFfgDj5t43WbDM1cn[4Y=ipO>98to$4_qf$Bm`'9<,7u]N["b<V5G6MKAp#YL-Y;$qi3%Oe:]oEG'-`t$`T#u@
%MACF)gip<IV)q"ZdM8,]NFn[j5F44M6a_[8SY]\8I+S):.k8"2+Sp[[keVSGPiP6+cNUkm$EbP7i]BjD2T2MVrNB6WpkRL+$1Sq^
%*nmi%:#!I`M5m:&`<KmHh(CZS5#/S#b'+q^HYD(obD)Ic:)]BbmhP3G(s]kpCo)*9g"\4<XAR80ZFMifS&(1gW;#;g&O7bGRFsTV
%D)R<Ss.%c&eSW07fs_n?MMRM5REY6WUYI7_3Dr1`+TYW@qTEO\ptS;U[88oG`KClG;AcP*R+]JO>:Je7CY4t>XW.M-rZr?r<rq;i
%<k6@l94ZT(GPb\"m(;IXnqJ.!Dq?-\/gQWu,4K?D8_"ST\j1@^%O`$R683f0[(VSFB.Ih]X+4Pu-mW]gA.OQ("Z/gtiPHTZ2Uj8$
%ag/`M?D?$2,5VP*=h@pej:uUGGAG&H^&oJ^#;jN@#.Zh)Go'"gf=a)p,ks7EkqLq(U8)_N70pGsMLUe0<6egk'T^DHl.Uos-K-I.
%\C"A02!]/_%8:t2AT@X(c#d0a<?_NiZ""Mt'rm8Cl6:pC\-c7K+GEcE0'i^_ZZ)BB/+/C?^''_'%l\r<(2JW\OBS0$asrnOp0oi-
%Yp%h57Ukkc/?\cYEP@lM&p2aH[_3t;WdlLJ=m(`'BYrs`+#WO&+nK2O_sR'?W";%[X-Mdsd>D_nPV&/\m<bt4,a?"n%?;RK0'F?:
%8%f,m)6^NZR8al)nd%.tUuk=aodP#FM/#PZ'G/Kpk4O>l%ES6S+;SdDbncKP?r.k@H^6^E6RJ6n8PCH(37>TEZ:DGZ#fSh;K9mlu
%c"t@(U^\oh,43T+RE5!b*sWskf"_j7/u'2ek,iuuMWR):Mg9fJJQBR;2fPdde\t_9#pGNKS)8tiM-4hG]1M=VId46,F_p&$SYnT+
%@R8Dl>bYC-)l,nZ8jX+Ulp7_A,5c=Qai5eG?_aN]]rs3Nd_<@1*WEX>>'A$4np5%TX<F64n/JN6d&&sb!1udQ"6Gn]-#/deKe(GW
%Lit@]isiaTq#Ung\cRF,`^iIYPq)`jGWag+R]TVf>BBO>Z)V7pl!QFo1sRfQZM>8p\C9#P#>2IHd2F#nKZ02oiaPGK!/N+k:`U7)
%`VP-$;]%eT$%@[T+O#J>!W8Ii4bDJO)1+a#N"GXrMTS$lDP$IO9OEHD_k/NX'[cg=K1b>GR$*uCX?hU/O/AbZDQ=(4Fts1VR*CEm
%%Up:o;>f;p$^`U[jQ6ctJLD06G@``g5a[uD8@&RAEXXQ=p/Od[69uf3P^>_DRNVF\)%Q7_B%qlF6K^Mh+d$;$R]R;(2/KI&D=^c/
%\V[hh>O9rKU(r>RnsqkqYoljHc@Nj=&`fKoN^6":>0#FsM0NK!k!lUP5G!L93abWjgYg")(8cY_3Z<?C*0!flrh.h7g7s39Fu0=F
%\E&O'oLXeq`p!u;G8S^XF]W(?=bQbi``1$V[h-EJ*=_DrTmm8FV.EjFTWr,B@5hEC49N!!-$/2\KNCH-d7$;[J0Lf<=<G+%/)&dU
%djq$CY3TaF6WVjhgi6Z9Z6P=@mi]T0mg-%5X0IkAg+IV9PUE1dShV)dU3kEYi-&Y/b6Zh?`$a7s;lJc0ANkt'D#)Gb@r+'7VY!N6
%)-"cDp+SiqLcXiR"[S%Jd;.Qcl/AGbc3]s(MJA8eKXGr5_[C^iNntOsERY_8EUle6f-!'3+N,'=W-T:V-C!,gMCN1U?e3U^+@a<S
%KnnE3M@tu=YrD=%AZO*^WgIk)BX%tj/_B[#dNS+I5W0Vt\"+/uX"jH"JaI9k/jMkj;A"!tP'-:iRgS`@'%.XWG+["heOrdiA8P9;
%W-KSO9ROp1e]C+9/rd]%3;P?m[RQ6(@_/&tZTRMDH`1Z+2,?GoWV_.WcXKGZBsY9khboo[R=9[$lb.hP_W+Sd&"6g&iE;W:D4:SK
%IX^!uG:.NbLS+u:^d>jD,Z!Tlf#af)ZQ5^ME$I/9Ml.)T/lM"30\H;6N0p4Y.Zdmn-VT%>fA%W=eAb6[c0k^kn1DpbX'7#00R2Hb
%\8R6h=VX'tQGj-a0dCm2FH`3"_B[Ujp1HFH?>Z0`TaF#L<EK5;B;TD_c6']94L2!\=Ig!Q,9FM;kYTt0mh**<AfqOjGK&ehg$*5%
%p.2e8C)%Pb/Vpq#80GNYVJ[rrRDC=Z(GdTWIKLa1T5W/9.8n^:M*k[^,++#NAfhN5UpcXk+Gh,sIRm;<*Kt$:06<Aj&fo]QS\eFC
%A[AnI[g$'HX7,UucueL)FMqT?Ah`43orjONdZrsmT(nCU=Cml(3aeUn)V"0UnkT4K`6?-@8Zt9E=I(@:1eB]hWF7$5[68L^PFqTR
%g-Cfkhu);+`dItf5qGEojG:(p\jr--%L,]@n^G.>7';HH2/=XYd75KN-3qRLTM9DZdSb[P&%#u$n'Tp-U/f!DM^9MMb.DM@ll[.V
%#$7Z%`I.iGQ;*P_S.^5Tf=?D$,?\\M6.IU&;ZDK5FrHANeq*B+*Aj;*%4?"!m&t9-M]JcrJ&P5]T?Z"L\N3+dWVQd-6IE1#c%g/7
%@5YGb+P@=tB[ePLHe^)4KkmZbCDD(:P\lI/\)#2EdQYma[d$5d5p0@\e(+"W/,Y_"P`:?gB'@7=/B#TH(jR80l&Gc<L9I^4T[rY#
%Gk:,R%iR]oe&/]!'XtQX@lp1R\(P_>SC_Sa'4tFAV6hZ:NT0,dk%Kqu'.S\ojj#\-AOS$oEiKnsXgS61.>o3:i8rPV%uM$7#[Xdo
%VDD&&[_]+44,acWRU_Z*_CtdpPFY&C%BH*QEJ)@XfnG8f$(29<3]s^RX.98JdpG$F<fCp`3#'6pAX,Q37l!'GjOhQf6?c##!Lqh%
%L$^jf9m]hMVZd>ajOAqE3aQ+oj<9_aEG*rOD95YPpQUlT!MGf8D%U*q82e#M9bD'FK-+FHeM)d/LertEU:V0P>=I4!\QH=W.!Kcm
%r+:^mI/f:i1#/4"s#rlr42O5lOKCS>-u>>kj.@3Qa\2&0p6+`V^Vu.*,6U#Al)*ZVVenhr23.Kl"YC3E/LXh"/VpgAW36u%i$i2n
%jt6gEH.AF%>X2^I's5M'=(p9W\L>J7rMnD:(AFKTd19/#Hm[I0J_gK_bA$Uc&RlOdaF$p!nSL>ac$]K,:';<>`!])[er[R;,0Z*W
%O\h4^lEdNF/tm$\@&p^_cR:eVVm;PA)or,l5gALIWRlpARR/'k]&7Yoq=B?$XWiZ9.EQ,mke0^P.`To#\a[%kYBi)ej,&Z'R?Eaa
%`-2]TSM>&e$WqTFfrUJs4Q@_7ZW("gYjbXo9%JpUPZ@qN](6)M,92f!-`W<qd1ip"TgjX_BW@6q8]I6s6_&V*aA'=9C5SZ5?KqXC
%if;_X*Ct<Dll^?2nh(\AU<]>7P`k?:`)m<L5GG?NSr<g+%QVOpO3ZmYq^**s:R]?XKuD^%&iW$r6sis][RY[G@j!L1rFQCs^$maO
%cCX,b;]NBn:OgPW.C2!ip-Y`]?pWKa#@?PmMFP-bg!$8,?adD7_>R2(V;'8U]6kq^0%m<lVGC^'0q6k?X,i'6l8CQorJJ#^7aX`4
%&Ri)0'c3UI['AR`'#A;t=<k_r%6UFs3h3a>!4`hND&e/BJ5%*`Ot>=U7D<0C9EgSHZ-4M-+O@@0LpEd.,eJuNfE$Hg7](W7--Zo9
%P&V""[a[N&Xp?(P2D#tmb,He30SbNJP6Z_fBN*YbMnLP=RF!(f(`g$'U5;`/<4&kIQBE*e8YKo5-/Q=8]1H%ZS)sV"Tc0d\DE;*7
%%:&OD,f2R/A#UIt2Ea*3VYq\j_'D0YnlAep<c:%`YR%S\GAY4R\"p<TNUHBQO5Z\W#9RD[r_4IQ_95\BU#[06aL)MkOXa7d.0^f5
%dK&!E]:X`cb%TJ38IP39!(g<P:iWmk5Y`/j_K4b,L3p!GFK8TnrF9t/[2;W]``*7NkSqonK8SO'#'(3K;;\KZ47RiI(NgMP!f!Z*
%rQ%.cGpkpM,tBne(ge.*Ac@9%kB!HCYROk\><):6Llq>j,F-I\%nlJU>-)$O9M05=9*rXMJJ3?o4Wm47cS`)8DiQ^P]J4\sFM=Bh
%eWapcaN`9N6VLhTJ^u^8IY\Hl(,@h3W#smd\G-IeC\/&M8iu=o;(]tr&uLW"J^P['"'X10LO,IURpg7mD^U0I;*H^#eY0AlFdS)'
%BqlpYMliAR<JdkVM4@Y:h0Bp*A_r(64*7D!9J,7PbgjW('Z&*@dl\XMFI>nG@4EG%KB#OoJ*a7trL@Q17ZRWtUi)1V"<D6tTVo,F
%6B7fuhgUAHbYLq>MI>j#='[onfONYHBIo4=R1HGcRj_R10.KJMEZ+HbR2*XfMgLUV%ZHEg8@o2J<Y!E&+H:(pB>PDc'>VhIV"j\5
%g5Zu)pCLY!&/A$M&G%m)bJ=)'PQlKo>G9lGm?"\iK@8%YFdC6`j<69\RsiB,H-o]!"7fR=[bU4r=)c$YE_fPLDdq9=-h;VS3$c[b
%`dQM8d*@%KG%W,r,;'sH5P0RoYkWAlmW^/*ej_&b/ZF1@NAkC<L/IK(OJ.WG!b/GkQ"=>>d#s>%[9lK4qkXq&&gh\)iek<]BZ8J0
%f=6);Z6'5$JITFTJ)B*G#*-O[]qWl4d>WLIq%u'*"Mu8!i[<f08Ct-1[^l'plX'9Ml,Fce(emGTfhHT\`Cme7&k"e]jLiI)UU_@`
%?<;Oj\%$Y5N];kRdGOQP1V,"POcnOZE]M.T>?D$mS5p*(&rp^QBE55.b-NhGF#>sam0+o`),<$hkuD@cdWk?fS_31EKY4d>4+E&S
%?.B)^`'$Asa&;Lp/W#Bm-u_"5]<XF`a\mASb=3df;RJVhN:n6aArNhR(mP"pK9qPs'GoX,WkGHjp@TjmD8DFZYjGbh%O9V/^@c2:
%e48L&^t=;nIP/ZOnuOV5%.6Qfpok!H_[dPEXJc)JBlDU<a`:sN]aOHSlD;9%mNLUPo<DT8#/`?9N*Gq".`?4IgRqGOe1DR<Hfl5U
%cH+)7Q;6m)2i+6/;&Ll/,A,/ehpW(WqPD/:aQo"69&9o7[R.tMZUI']%o.q39D>]EI-c7&I.3TI"jK%@o%gQhlXidr<a\D`+,aUQ
%J+PV,2*IHcqQfR1hQ.q2npRoR2hXf?Ga;J@9Cku]6(&>Fl[70gDU&cF*9qt^6(husS#g*q1at'*:&-a^_qZ[rQ)nUgaLdJgDCV;D
%2QZoaInPoA@g5b2=bH(F?_Q3_i?KioVE%P8($DZqZ-JTFKkI0ijq*G*D$V%1-"HEN1EBZ3KH9b3f`4J^0pLKGpoqof.^?56/rRP)
%B?%h(J*M-+8i&O1%B1k-m^)C>;=imlO3?7Dgfc"rOVJU0a/<&am8KA,:$G(?Dj^r@l.W1_C9q$E+leGe>8G\JP(R&Lf'ol9oL*A2
%(,ShTm6ftK_L=>VhJ+o?WVhS?gpkIi@sWOW]@e7H^2RrD4k!s@U\Wj#bbDlq>SAUBpgo"(8sSr]jO,;)V!;ZtZqm&giFKSWZ4k#I
%61F624RL==g+PH5\Il.B.kUepnD,SFRHA*<9jPH:=6h=sF?eDcVjHmbE4$I3I.+TV3nl7j_D.?%YNO0oL1(JYDQ>AWf;'OQGC$QN
%5[gO,_%]cQn*Mlk't9EOZU%]d3=K[TR<lKU`L?3+PJ<HK7k&+=Pm7F$kolC1q9"P099q'h4W)SD3R=AXR48_79asR7!&K@?ko[f+
%ZXmA+'[24B`)4W)KJZ'9BTsB&K[`OR6rDK)((#ZS(UHB$YgDkJEB9Je\#pI^10=aBEmq8XY)NLjoG,!uq/`FmDe9UURS*uNW&%T)
%P&R(Y^]p^gArgZ$,5\I.]pll>S61mJIEJcY"<R/05s-:$,7_0b10P>+]Zb3IPa]__n17bM^OWYQ,BImH#&P]G3-37R(WsIEX/cIC
%F30HX/lkVn/(Was/flem@'.$1-O+^5<O/Nq9;[+5;H$^1?`!AuFi]]fMRmU>R<0:(8#[gMJ08B/3QZisWiqkPVg7V:e/^T[Ot0FN
%:t-B_a`\!B88abjpOp)4d-VO*+*#c+o&+IDoF^AG34Yfr3QU!0\_5e(a@!>&@-K>4%i4n>/^UF,8BpCD*ieGd#AB&daOA`*k"bPd
%c8%QH)A4!&&[L2>=jGg5=P]jT>iui1Lp/"_Ue1CYf'>>?\R'44eOZL'YammINYF1kl:+LAQ=F7u=`R)FUZ#Xu0[9UZK^DfQ,FQ(`
%IbDtY_L/Q0k+!Jo5HdD`FUro@-:_oq6=d3ZEqk3[<kci3HC3oiMkGB'$?#k*94[IO:!%=f7MhM`*[X9hEa>J8IN:X";I(uEK8aRu
%;R73AI`1^eo2N"MMo3GX*$ph3.,LWQ'c]POpI/7_1:%pa/MsNpl8*M]`DPH[6>"%3.NTUog]EGcX-TpLnbB&`BQZEg,n#e9YIfL^
%J()b$,G,fh_"jD2;<6m!(0SXK\TApJSn?T;EL.nV,L7#l(%;CI1KK=IcmpF+>kK0C=tojtQ'i5A[S,UXD<A(l(G.#+Fb!\:'UBA2
%L.ur^RCqNF:<.c@Pu[V7/kc_MZC'W`2[!oP0_fg4HO=UEn)E/(Ef#o2/2T%R+5tpb8-S]S@G\AKR'RQ:-.O4B'a0'>PB*&$dDeKi
%bSIbDS?.\8S(eU`dQPgPetfMX.cc2=`<;F]%9YM<>1gdq-"XG+i'ZUgRd5XWW\mo6OG*g^*&O=70sdub2M@g%5b]$bf;pY5MW&0.
%OQ&E2Qb%qP%Y`\95YrnnAkf'$eN/DJAhNgeoej+HW#WXG1Jp@m,!^sbS\+scCVAYfg]7+,AO*L#NSWl78P*%n6JaX7?k,hk<=g7@
%3La9OgDhLV4^6DDR?>s%Ke0LF6d_^N:M#Or>;HaB&E&QS<8a!Kk!CYegK+85?MQ!b\'Kj'1-&K4T)Hug8T+O/rG]RK8E-(5@)au>
%PM'JBS^dm9p\Z(eB-E?J9P.D:5dkh=XQ-R4i$@2LNaco&C3hjSBMW3._9;:j2!p$<?Z.eXQsRBDhm(YQ3#%Fbl0\QVb*ZpERIe!n
%kk[c/dp-lbSjUGj.W.pWclh%C)8"YJ:<6HsS#L#l3F^,r-fGc#GgH8S]&,-=Ci3[dXrh,&1X#s$$_ZeT*-/BZ?@(q?R1?iCfN=r;
%3\4ThNZ3k'6uW.D'[R.rF3*,.&61Jf\*Ce[Pak<T7m7@G(/`,&bBFD<lUa#cDVM8[L3-s(k[j]s@TCcnTXff&hMiZR+YcB?%_NC8
%V41TS1(G<\%X"_[(*W:pG=usdpQ!MC+.ET+5coc==#`@:jP^2?EURDN5r0m`$^gSuGg#G'/>@&mdM/\q2_P_-d^RQaD@nJ"BU(MP
%b9suC4ZBk/G\V=V6`5*[;8Mp-Jf0h2Lo(U:NG$.f;>%6SYUDNplZVf1/qqHNPTDC/XEYaYP?o[54j')ZDEah`*DN>iC%".-(?O@8
%%#'.,AbG"Y`Q[6_cVe?/$qMpM=FH>kIa(sMlA3tOSbt0<eiK_1IYnfhK:CU\HVOe<[Qs;ME\W_AS>;&*h@@Xc(--W3m5ua!M<OY;
%U!&%u%^jfBgOi+KB(g-tjN&-H9JLJ7@W.<qV.2rS"gBqWI*8<K<S=BhEi/4b%&LKhJ0lD6Hjc\rHK`;4iAPn<V&ZM1Q=`VT],7eW
%#]XDj^:$c+b!HcBmVM,3o?^HP-r-C%h^+`Ak"Z_V6d!XC?,!bMdId`O3\Fq@DY%uc^Fku<@$E<OTO>BHKg*p942=5DO[!0.J;:11
%cZMF[Wur*]5IAqEH&MP*O/]H,1H<2X7e,7Ms&*A+Rh?PaFRQ)fj2&tb+Jd&O!a'JI#_W"7'oN=9U0gjm.j7df'C0_;Nn=s^UjJ?<
%g\DU[C:R]'\j=L-,h.4a.#IH<a1=&uDCn2oh3/1s?H4f(h;;G,BToP4#Gdb'6Va(t-E3Jc*N4Z4BA3n]W^k(#Y_TA8X#3gT/`>Hq
%E67DMiEeSse;G'3La90+iTW@>Ru-o/i>9#,]*7)[SJCmF;@3K4p>JI+Z3Nd*1K%4M]k\^X9L8bi1I]1XQr7D(@XbcAP/&W8IT'h$
%B0FItF\)?YLXAPA<+63g@9#?N5,`%r1WEJ-]-+jb9UI[Ljn`RYs&F1AZf@rgZV=^X#W:'ZpmBZBfF'?)0<rj(Luk5\8BkEF9T$%X
%Zuek3J(=0Bs.cXd"B,rXKJsSfaOaJe*d$*8QnW3B@Zu>#"<anr=;@+?Tm4qT`B',PhQtE[Lj<8-jMMm/3W@i!rUr25s(78M`f$kL
%!q8DN@AoT2X,PMG5dR@$FpeX2eDbTJrWUI@h(B,;W,&t=fpE6EN+O[.Zpk)Lnkh%#*@&t2+g4[A)0"0!>-5?,0[i9BF]Lu#1W^]n
%L4Ze:kVdUQ1c9ii<P+D7.1E4F"&LB<+YQB%<^oo+`(;_D\R]%AMg:k`9,A,$(m3=M!3#IB&^EMg5+=d@GmX[9E>,IGYLK\o&uK/!
%aG:JLh:pQadfi&k!7sKgc"hB?\uhgn.I,&u"lrG6[U^CY05.pJieeXQHII5r;0teb[GT5YR/%T*g]N`%)p;Z98/BmB/Xs9d=fV2b
%"kokB^sE<RgYjT4c$C3`Si7H6\-#t\^VuRC6p`?_J]4c[[=1i@d;E^$-iu7f%'B7S*?4XR#s,cG#Hq(b5B`ThAL]ZRk/:W(_L/oZ
%G9qq+\!Q:SN=6pOh+MfA#G.l>#d4>;[PINSlbF1)V8\u@:6fn?(u8&i1ZYJ+<6*M8G95jtaqFCDqmf=LL'9L16chJno9W8[_`$Ht
%eWPeoimrr/:3uN;B0>X5l3qgnJM3rFiAI5*]GH<`O1Lj*]\2s3STfGrPB(R(*U"75n)p8*<V4lQ4Fa%Fp[aC]Q'o5$o3Q;<k'5_j
%b?DD&lfYsW3g6W3]E<3?K:Vb"g9a$pk8f8Fp?hC_0BbiTr.QTL>\K\:8iuL/\TkV+GC6apfun(7GZjt3[$U0i&tAj(F80_GWZQDc
%fk%eY@HR\LT+"LWaeZEtmRM(>WV'IJg=$';I?*u:?W;Cnp6F5-Z/nC+D_3>LRE9X:Yff^j*bB@&*VL:^>).O>l.8.(1D9]MGNqhQ
%>fj2,?T/Vu*cEEVdIDqm2EKJgi,SCmCFZ")_6sD'37q=uUSFppZshAE!k-pIp&^\+[(u`3LKb1CGb[t;0KRp"i#E\R1k;ji<Wa0Y
%D`48&#MT\qE4Fj,#00pXBWF>FF9#+VgCEF1+)*j1-_mdK1s9:u!PS=sm0C#`_$1%rmpHM)%$!7ick-Sm+i*#D,6Af&CIMWp%Q5QY
%_2brKd(p2M,gbIW9*3@"fT\Wo(2HQ^Nr;@U!fRVu-Et=kjocM@Dbk>4r^;A?N/k@q3(JIm8HD<$gD&<(@&!d^%_!oI#KN;K?uWba
%!Ck*K(7_-adBZ"nO#AT*k\/]P/U4L>JIRXH0!M%cjotV@B_qku<NL`P`l;4"@._L.(uWMT)ZpP02DWW)5LR\>mtiqYd!It+c2`pF
%)]EC3Yb_@)a.""2?q8riLs2WR%J9'rCBMt0[(-3,LYEbqrVhWX#8eFuEI_cDRiGgX\BTSSFKEl@^,jj1i+_P]C3H8t_0-&A38!^c
%USBCO[+E^&#MSKWgB5\_gA&Hb/_9d67YdESpt/^G"!b0T!sEIBZiu&i/(t-Bc=X9iJrscK&V:j6Zk\11fO-K<h3u0'#eDl\%1sk@
%7p@2$b)A5I0Zc$$(.!.VZn[/h>p!d?+Ls#T*'s&h:jW=-)K1^FdUB@KJkbh=9bOi"_);TH=iM@+Qu!UUQ!j/cXBC-(b)piR)B*CY
%T]6c(R:%LfY\A\!B=)N-hApF&?s=@^SY/E02,D$?E;KbUE^C3L1c3oQ_+)J6.+mHc)[2012c@HLGUir#r.<0-0K@oa!MdOA'kCb_
%[T'KI_57PX*GqibULT8u1cX2m!Me]"($,7J[T@Et:T2*]#"MlKaF+Y9Z='hr:n%W65,+#PjSF\@>0pjbRk:#..FrCQ>fansIU0hp
%o,n9B/snFNfQ=sBVB9Na@,BR5is!+CfQtB(b5ZVU"[*]=^L5@ZO#15uYC3VYK/o$G9c1e_U2:`8j3^=)(`dP6@,Du?`ZX9![U[,:
%E'jg<%_$!DqY`3E)8:S"9Nq^\N](Lrb[[am1cF'X_++aa1YC&^K*I<q[V2niMD],CqYadkT?Vru?aa\L*c9JYZ12uHOBI2F)_a,*
%Z9cs"2Jph)B\N`NN](e%G=Pjr@!'&,KAIVbhdD?XCuA\?(2Df9@q/4QDM*FU)[@<%Cuk*Yqe'(mfZAX!c9Wq#[%W+ojA8JS%1P4<
%Yee/a%Q6B#fKl9bXW>Wa&8^cbdIHo?)BE\aJC2a[&%6#R-4`!of]GJpK8gqdIfE*B#@$Y)ZNiRr_0-?<k$PQE&0>Za+PUV;m=Uh,
%K8gs`!0+F9_!#b/#>I>5raFd$cRg8m8"2c"aJ*Mo7,YmN&:/K+'nfB\"3ht\BXAe5(g"'fKX7g`9*i-O@ne-=g!R5>(`dK&@;?Wp
%%H2(<CCXdJKC'guFKe&aO,gW(nBnKf&W`]:?(6YjRK#UK#es2'XWhS#YZZWK8)$Hl)h$Bp6M)=9)PN!VgIBtDfe57D0W#_(*?fkP
%D'!+Y'PnkbHRd`7ip6>7[#iYr)f6d-1.S:&KZ6J#8XR.'CaFY[nR`CP*Gd*s_81j=(`[HC@A?1a,r@O6<^IlKCb29r_:B59*,dH<
%?QEo8TlV)g0S.XA())"<XN:T/3nS$GY73FZ0PN]&C-n\jbpI7KYhb!"<NtG8X`p`*K^EiZl%CrFg3,fhN]!ETTa\B$&3C.UT.jRa
%Cd0(d&8a\kbWFC-_F=d":hXsX%>A)4YsoEc37NgPG(j<[$4.QcFqbi7Bh72<;62't<\)mg_H:KQ/VRE!,E4.rS/5s8+i-=oSANLa
%Z1\kM*,JFpFXc%=ip6?b1o\j6K5E+1l=crMW@GVq<ZsHPY2\dA:Gf0"(I_P/fN*Zo<qpFBCg8.H;Qt:tr*$Af(%+2D[BI*P?@T52
%`RCTsWeH.dN]"(d*;o-V=P2h>,7>G1C1Zopp/a,XE12TjZhXCq1CYomqU`3`d%#__/SqhHD(TS7JrM@rIfE)W$SBtcRTo"'BR>Z@
%h`oNH6A)$b0#[LY9eMrY^1qauE2_<@`^ZG'I/X&4Fr005d=rHE^P?$"Lk]A508rjpd.Td2.ba[7%WelIK`m'Bo*^Nf[_M<5`u8?Q
%:_[SoToB@8_%7IggL,j+72oZkUBFe0BQ1<rL)o)X3t.&X2oID!'l8`sp%p,*@Q:Cs[Dfr>G[h/@%_'I)i+R1jYMVRl*Wq&T%5Kb$
%g*/nZUJ3N9fs*FQ>4>pp%(nRT.`8t\fIZ(KpJ80>&5S*?bV2?i[`m+:IsocSbrOE7_jFi1EJD.dcoON=UWkU%bgH,%@bed()AjH3
%TqT<--5uaC=;q\i`aC##@j/Zh)TG0sbqq9I?os?0hu0ql210MIV1sti2:\q#0%O(@\TXdRL;l\eCIkZ82V4$]'5Xj,28`KI2DhOL
%P77g\Yr3P)c=is^braQmj6QG81u%g%rA3h!CbsFYj6LpgB.:Xp]((O6:TZR+^M:J+r42dGM8*lB+[">-"(S*#3&(&+)\1iC7N<6b
%DT.1CYF9G:Iqm"IpphOQn9@S9N/fjYq"jr3>E1do'p$u$Sm-7AO#H1Jaum)p&H(=V6hk_\%P;4q8V[L7\*:-Q#rV"p7"_U&ls)_3
%lS/79?,oTen2=Fjl_Y\W5IKnRqYbQs%`=oBG6!-C]L-q>IE+?'hS95G?a]A7*c0he_;R9n=GU%<4:H^SjWXQ$R0VjcDs)]!nV/)l
%^V=[NEQ;-IIGNIAZ\UL4d'>dAp(7/OgdCRPHOm5f[)%Me5I^D!*bt8>M$D^^fU7,%oO7MnX,iU[i*mCuP``]X:]KqIJ,f,,;]Cn$
%nQ5^N'b/HRKqNfg21NG7(DPc\^*#\Mm5qQN>dj6^2e7obe+V+;q!E"j3'?;]<=Gp3#*#=QJ-5ha'MdU'lE6D/-6piHo5]jl:uPZ^
%%*G3e5ZhkV1TPd[Wt=<2!VPFIoeZ\hm$PX>K(jTM43Fqe-\U_r<^NB,(X`NYBMaCGeJt8>pjuEFoT34C-38CTD,DUiGCAb%b!#?A
%kddfRUBK-oc_D_D6O8)E*!rhD0U7^`k(*0l$?h1mJ[lf$JcqEOWcQ0K1Ia2ES:Z#ccWT$K:1TZWG2%Dh52kj*PucibbB/WbSn`n!
%!GK[4/q*Qt\AUpR*Hn85K/p8lMH;mA8:SY33g3Dm(n4077F\YC_,Id+q4O(_Ue_4l;Qr.T:mEq7Fm.?SB:UgEESfq3kK\7I`c9&C
%:YKF:(9WNmOjQ,jT&%VZ`oPb<S2!9>].++4efWUF+Y=otIO5gbh'98_LL1D`OkdG!'Z2%48s??Mk9jil?I*2::iisg3[19hfOkmm
%XPVH[65B@l/C/LQ&LcH]e\l@VEltJLi5qCG(F,.T]5[#7_L%*!M>Gk@dNt)@Kt)kZ,c(fYHMb.=g3%(?/?/g_U/PODSX%O5p8Hq&
%[:<s:hm-_W5T2#LF."u_n%_q`VB>-Hd3frNhR<]c(81Pf1_*<AT[F/c.\h<c6W7Lsd'gOdaU!U5f9qWTjT9hGc/.!;&m8ot0+7PB
%i9#nE(Rh%8UG'6A2Q6C^fsPlVkL.WQ=UWW'"$.M]@Q6Y##%%L'pX1V@iCH:'@_#EF9gA<`@MK'eqTNu10N;XiLl:I)b1DG6qVeYp
%aQ3O^<;NO(-S<Yj9n":+NV$^D[]o.D\@NdN`1d7Pap)6uS:P,,'aQi=DB*hk;OE4!"'JYB`^*Cq,_%:H:@/uB/'u1XpK<[:0mY"F
%9G+Ff1"iPt:;m#(A)abboeQ>^TB*KNl_[Pf$X[gEB3:NcX-*.39*.\[4g0'$ocdalhc)/0`teBW"=JibRd'Z8FDLW84l1/aI&Qe?
%n6?kb,%W\[I&]]//G\'B7$N[/malAc^!!]ddg2,;a*O)E5MhFVCBF:%%ouS0ae6cEF@d!&I)l1ZVD3]P\ju=bT[t`'7(SroXb@?P
%=r_s%(^XVY?4hos,qCn@c@,O?b[Ofa`U")2p_YMkI1%\KjrCR:O'"?\82nK(3ltVr]!GLjh*Ds/R2J)3&-G-=\^EEWX1s7SY_]LG
%`5?'`j+ak]:H$4F4*&mcLL17>ND7$=dC?G^C"eZOl_SqC=gON'25t[jqXQSYV=)7;WlM1^Rju'u=m&;QrO;Zo)cPJJ"T$JWqmu]S
%1F[^>LI!$qF<MK==&Rq.N=inm*G$=Hm7Jf]TAVYVX=jSU[(mZik&o<=T`FQ;,WN#*Oc5GgZRs[8W=l/;>!,c064[:rm6fJgp=r;p
%25J:1-=5oIM1qe"4?e99Gn=]TSWRIYchjg@]dmY(T:2e^%JZT"OQ>DV!f%=UDZHVSGYIQQ4!l%KRGQmO+@u"25_,T14$XSFKK_V$
%?4Q1u/KR4n=U.Jq`2G.N5fboQrQ-f)mbhL$5G1_,W><:6M[.6%ZG:-KAlj9QAp_bi1+L?%X8kIK2lR$VT1-4eL?E(a.[;\4h,n)5
%9`Z]Q$AUU.;%/4,*"\_aqrjQs+ZCh!'(us^X;,H-SCJhfTM[+\K*m"G-<JqXL<c;.XN1]bDH$'$Gltn7@oU7nZ':F%<<X>=I:6Uo
%e3[#%`TEESNaROKS<jIfY`s(PlmL7/Jf!UfCTf/@$YGmrPGW1[0b)L95s/M6&"5kjgNd<=gM4c5Yo6ChjC'h)2)Z1NgJF@O9:G-T
%EK[P^,ouDE?th<4a0rL0kmCX<M!c?Y.[unYa_N3*_B&A#H1KX?/um)9dXJM]#\%t__HBEB.=4**h4pW4\K'?V_4=_I*n>H+Mr87$
%4GBX&%![)uqE4$?\6mpH2D(i,H]J`/4VOY,"a#MnO]`/MD)Aj7RN;4l!Q7*I??+mIq6IN!bN)7J?)/s)L<o8L!-Gt7LMh"8AS\K6
%g[mt]*SY3qSZXSB(^lY?H+oNcI25ZCk/eOc>=S*ip@\e[aVp#0=#7pWBfK\s;=iLG3;U;](@8X+QD&cpnHBu)TkeS7aE$Z6$s'"'
%H0l=dq<9is[?iQ@noF,_b6$hX?E)f)CL2@a.r+*nm1g<;b-sI8cj3oqd*nhgCQFb;5gh$.lul<X3W1Yc=-,R`$JmOS/!U:Cd3fI`
%n5aY=[5=:a)g8(!d@I21!)U.sF*:n*pNnW$^O,1h!`V+j;j?n"2mhDER8SJ".BV<V2#-(br1_hGm#=#ZeKBol!<I,]$AY%)N0i.t
%\(!M;?>O[pc<cC?XftP7gNc2uXr(.C6<7[>G3aCs)UQ0t/Kb[PNJ$Kj&7U5SA9$.%^f[rdZEY28M0k2T2n6mB69757m!3BC>gG'3
%8^OSSa,=sNLi1L"2@h?>h#tFC=Q7&%?W'#!I"$(\cJ$p2=F8VY2_bWYpKO+[Q!ruc((pUhfXdT[@UlBrqq*Z$#0pJLa&8H[)i[V6
%b-$Pf4[h[`V+C/@BB=_a!IZH0jk4=D4f<i7;7%sFBn)'lkJgY>+<sDS[:B'[N%:ukU5^th_4;=%iGT`RCQCh7n1\!((dRu*aY"sh
%do=e=,5:5FeWjEK6)NdA:-VlM#Z7pXL7P#0o2qrW^-'fl2^:,k_t7`10egmnd[=89),ZTj2tgdpZ9YE\&=,I@O!PoC$s4F^;%(/L
%c/u$`%EMV[7s":U61o?0ADSQ0m/--p.VX-$(V6SS*8;6W;(ar-?W[+3'ut[t>#R'QBiQj+)qN-89u!(RWa6gbVKdGiW>BO&oP2$E
%=%SlaQE,Ic:mUJ0+JiGPjJa"q^L5-!2O.e;(G0paSZ,sQ"@uPU?dpa_bhuk$$i#@<2ke`Y!j_Gpf.RtB;P!EKIW5Id?N@A9gTFlh
%E\56&$_ZdGmHOlB"-THc]ti6;O4jbBn;;(Rg-sbn11f0.6NLe59oF1G-momRVKRN()hgRQm/hi3]c&V#=UX[hhITsW77C2M0S>kE
%Mn8VuS*C0O^@P(2W7O^J]dO/Zg%U2rhBh/`1sj`*fE\(O[.coAI?9j4rLt9i!$_@C1%!M(/c>auKm?e1`RHR1@/!K-'7<W6fOJWl
%?TcGF&!NFX7:f<"A(309<5n`U8\[MUV%kdkoS^khg+uWSBJ8+^\;GmCQPM9%kni,r&,VQ>_>(KbJPj0)$$jPN<%pjXmKJf+6%\a#
%!)tXC\,B1Ai;*!(8^];;$N+e-L2icW<Q!`lo8#;=(t\#A)TEe<%HBLp;o@OeT:RcP(n09I]7P$BOf;`=.4)`^UgW,%c'btQ(ld);
%]G_q^,Zr6:^$11UIIXnb;o)iog#9=YW*g`/YSJGu.2_>65;cJuL!8l-(B()Q]X+N=5F0&8%"5,l(Na@-f/QhapuB=.BCa2V&rUd]
%lU6^rVK0MW_\m+'V.QQRfAWWJ!U6Y05).?"Cu&e@p]PT@.,qUu\Sffa1"E6nYb#;F&((89>;_=n/?.to.+^$(/1*/1$UF;LBbiZH
%h/,)LNWJDH^;Lj25#Q\1ONg9j]n4:M1Bg0J4GO[gkRW1/]Ne.2i8fVC!_kVl:g)MO<]'Lm0PII$#ir:?freA+OL9gAXh_Kgq,+ET
%dF_0:QX[e+Z.mMS3?)m-c#0&N=gZjMFD;SA9!beN/.gKHk/Bcq^m>H_)^*D"1&oWY)JU&6>AK\HoeELbdB41,f.C0(c1=B7i$*K1
%q,B!9WpYiRm&RB;cISdsps-"Q`O3N\[icQuJOI)g75(]Z+hD]Y]#>r/WEPBS?$Vj<"_X/a+e,K#gSS*;WWcJN]dHad^f"eu4!iF/
%X5_if</[&)_"uJ1Lp`^uE.arh&A"kj%4@KQiDf-iQJ;_19n#\UXF)$Z:n!BN!sq<;5*C3qM=a*9+>(3hbK^["ppd0#V(XKXl.`#>
%D!Z8k/?jB*:kCM3,U?Cael/n?Eh!=(/=K#`e_aob/DA=WT:,pn6$F!0Ve4?3nN.JDFp7TM@_p>IDYoiZ"e*,@*\aH7$pjQJ8gtP%
%?i*I%36Ef'Z`"WU]':'Op64;.;mk85\&"W8`SQi*GZQJ?p9OP#BGUL-])L21&5=9Oq5RTa1XTTF(Am6fO]/U=2`Ee#R`3PjHu<TU
%OojA96"q*b7X%dnBbiX(RK]DOap'^26@M3oblXg]<Eurir&3"^Zt9F,8cnd^>7<@*.>CI((qV0h\Sa-`0ji0_13JMkr]NI,Ae4Si
%S1dgM(l)0,>]gGPU'-%H>Dt;+DRs_:8>Y;<n>C.Yr;9pE7Gkdjs&:UQlH5;^VfKU_eJG(@Z3-n'6W:O?;K_F0e"U#"oZ<#J8[Ug1
%q)jT1;mjE-Vp1:/WtoraH4Ha-4o5Y\ERj&G::j;5.MaR*mNnR'=C@\_&!^UTX0HoGXf5DF$n])X<'olX5?"i&7LlUci/.[sI!<"j
%`I_XZTp\e083aFmJh%V41Xe7X=-+94d4P"u'!3BWYL)O?gK&V(c[_?tOBuptT2i'+lI2M7ELjeB=54tN/$?cPoa2`808j#MagFXP
%io2+[Y5kI\r">0!!L?]t>4L)m^q7gLj*CkQik2"TG&0\4T0'oe?EoPo$HDarA+Q`#Y#ZOKdcmK,*/I8Z/4QrX,/2rMdj[o\@cp[p
%=KkH)=GFD%_&%@)M$;.1'3S:mKA*1Q*)nM5<`Lq[Q^GVGB,-_$[Fc(;?#T0-!uGpf\a'cl(41/T@lAJR].3,n]9a5%aMW_?.Mi1!
%1i?B`aotTtR^mGnG-AA=Pm]jbqT\!)b[@h?1[%As)&BK_W#%F4]:45GHGMsSr8O]!==l:QWY^%MIT/"O>3RY<0EqTbP?G(7*"?G8
%4#@\2EO`E#.N#g/h'mjKX_>*M<s8]%0*-/E(d'%bmMLf7LsJ.n$sF>RTUT<C;D8(smp%LLA"Z6FUOL#ial_TEIPFs%_1#,T`UiMd
%IW9eZWaG7jDs@L-`qsUG]suq3WY\q+Cr,Z8c.ES/&u8i=41?[Vf+q-cA)ZjY?sFDP.Ms-e;(<D!!DX)6=:^k4L2i@Je1aGg5%eRH
%>/N";"bUUhAPk+b.b.0@8\MpRRIU7(0*#lrg.?\N#"cQPParV[I_joWrGcLjLP5:-5]uf;bX6["<cP9N&Fp]3_]Y4&T8>;3L#]e&
%ERDG"(shhb.`N3j\uHU?(=,C7L4P`_b;Xt-j4S;kC[)fB@ao&6'PSEZZ'MM`MDP_mJpJZC)TL(*,k]?T@NZ)g'fXH0*j1\M0.Ou%
%!m.#W,S^DGBAq.=@Q]/-V.*tWMt\i#r#R='_lL"-P*5rHI)0*uqjUkpgJ%bNA3QItBfD1&mQ3d;_=1jFkEeUi4Kd\=-5W8c4?FK5
%EZlK?r?`=%\E2L$BB;Xdf3X'f!`$l,f\Jr-p\=>XrQJh8=)hiArk1OGrVfl1Pe>6/!$9>Q3(JEA`ri*S=WWrP4O6Be*6[uifQaQS
%jrM\>^u01G#F7HAnR9T]bkX4gIj41\muHRZS>5,4*uZ-DrA[<^bl.VA.f\PI5EPtu\V>/j1cUj+U4XH0!s*8W1I3]USdR;8,JD/'
%&KJq!q>1&4:'g>*=Wq.eL\!i/$9=CiK!`F'DTKBNdHls9"etf9kCfTJ,"VM<k(nQ^"LCL8Uk3k9*#cs63Ca9p7CYmnC_:PZ/7/N_
%Y*"[*PE;M!,N-;PX:[.t@,;1B8K`)m\5OYs`44Q/`HY^#OPK?EL(F2l=X87_@sK>G=!X!j55T&a&ff.C_<?,-M*="i;50IKF%X*t
%N:p6\Q!`^?h!k47`q)jK_4Se&_<?-(M+.`V9PeZ%cU=P'R3iakc8EGrE41V[*6gE&7u&lq7-2gdP@p2HXV/ZenkLl"S9].IOt5gd
%:c/%PgCqjs&Rbeu:dc/**#(IC_(69^Lqu1f)]d-jdHFsjM@C&-UO_Zbo2.2$R#uF(*S0QJ'3Qcq6DA`S>)I!*MUiu?Rpt"4Af'XR
%$l(iC_&O2"\\Th^afn-X.Q6lpVM`GVQE+KhH7W8hPE+e+BQQ(@`Q7"<er"lS/8rKu/!d_T1_@l:Z-gDS'u(Poq(!@(b[AiV?k/)(
%%VDt*$&8"Q6n"a&Q:ZNYZ<:uqA,.Yg/>="6qP%Xu$V#oX>&L`)mn1m+r0A)3X#Q`mEB-O=,0L.bj*<6o*R8cSi+T9ON=KO3kbEe+
%/f5SSGgY_gcHA4/T(O9N.[p,&XLCtGk7bBZpn2U"bC*!@Nq8)9(lSsf^h@ea=YN;`Yrijb%`(gU5Dl^N(uk\&C`&_^BKhAE#;]gC
%31LX,?671F\_R^qL(hmld010-NPXgtG)YQ(bE$qqDI-qs#`n,ifT?MPauH;ZjN?,VA(`W3l"IeiSVU[nN(-<YB(Xd(X;Mg-?Y7U9
%B*E?hN4M@/1I_Vcr#$Rsb+N`0MWN2uF=`>>b8ng%Z,*\=)Q1A9/rbSiZY:3?Hd8RpV2XNc8>M&ReS%Rk]G_3=B@d!4G4RK0k(_dd
%Rs:OL3B3UEK>I(_)iY>>gXtFl^5\*^B&&oOj#K%8*7)4Dk\/f^7`R<'9X9Q;hE7e(;n_uprXHRhRXoOLd%]<C+q"Y)$0U8\B;:kS
%)BI#?Z,7-s`pnZubK$m8Z&BY3NooD9F>,3MK;3]Pio?`VSGUj@C,_d+cGA^hIL]C&StVpI#BOu.'V(MX3edl\FmN36ZZVd@a7=B>
%h6DnZI<IG[a,WVCCIdh'k3Zi$1ip^6ba7!E0!0ftG;QL:#*8._0Sd\=a0Kr+F=`JCT,l)8dEl8RNsuS2o,%YNnp*&OR*jpspbJnj
%BIK+sK<asj*g(n.[g/\gff_8Ok@KYa/qFOFq:GifbOa->k=cuUiERH5%VP[oB=(4'+3XGiqS1gsbh`-3jL$'<>Jcncr4LW?&2lS:
%60P<k,.<0HkFNc/$.CAA*Z@qL*2"TO7@5h-5Ij&"*U-D,"EaPtXDS;/AIH;k+Rg(2h4OuBjr6cJ78F:SGp0p$Nq-KfKU`.XUcotI
%*WC[j`\-o.dG<3Od;U>bCsLLR7uGoBGL3rGf=\0U'"VeX-Q&;;Vc*e*+:Khhg=>b%27C*og]ag`]q_)=U!f6&\0J]fkUhj_jSK#6
%dEXAl8]Ca_d%C4:g:I;.,9V\l:@&cYg.*`A"K7jjCpW!kM[XSa86QYQP6/@i#<UgTFk=%IC[0@YY5Rj8=cAiKors14?h+9shI_1+
%D:UNN#ZVu,A7>@cC-E&X"tjRRb-eOmeq'O!F(KcB1;^1#jhY;W/T@bD^a0/Tb]EP4-@O&a=1%oKYC3*XWr&[^B'3j$.B@qMA*sX8
%Tt([_6)@a91u8:uklsBlf(MfdXWg1)kg`Nm5`dpBV0/t$KWf!scBN-Y4k3-P/7$.R4*hV,TUs1KKH@$-A7OkM\j(G4_&FP@OAm%F
%g3%dt*>Q#A8%K&C>Rs#Al<sOp0$_VbVYP0ZDtC*F0IN<:HM`.R6CiMDTm&(&m3(_If],,1-E/BMONB[apS$h6'_WE#+X=r'%mW3;
%10.:O[uW[Um_5#%`O.0LUY2e1"$62Ir$@KL\_B4/IEJsM#HAh+&WhF#p@E8@Xduq$G-YYMN<j;Mc0:BS@JP7?<q70V.Vq>gI/YDi
%rd*rT?q^3;oM>Et$uX[U&+tJGZNM.>BYRk>"bJ/A/3o!c3M9%O^$$5^Cp[>Oj78SZP[#[qK4cFe_ATeMgqb&Kp:41?f@ft*X&Y'6
%O2En9Mb1Wui@A*]SnO;#J5+EMnj.ZJJ_n?nh'=4DK=EW6,XB&\:bG&)LXkkBRORdrbtR.1CY\8giq<1$`^0%5Y>Y[74F#`'JkfV0
%d')QULqFk\P[i)FG]]XW?J3lmqlnPXZ&sBUXpD$d*KD_gdq1OEib_\\V^,YO7s^e^6,%!,k1bNJnht,H'*hV',QL-n,3hkmceZl&
%4)VCNH-qV0A1KPS5M,kdm-Dcu^?N&4pN#fVZ'[=]I]\[t*RT$,i3Q@]risM@rC3Y(YJPJ^ZhC,L706B$-D6V"I.'qNdpO+OMJm6J
%95ls's$V'\%>fb1f:3,NpM?ClCL&(.E6''05.F7MeVcj4q`JQRilr3AAi6T$F;3K*pV".OPL[@:>.M^jlZJ4FNXaTmSjVA8DCG;9
%a<,`;6V;pb)8n4@_ta3i"-]?i[]0O8OOr$oo6\OgVsJO[J"1kEgtn5%,a`YuAJdW`:!(1;PF>t_/S28$P?jQPb;OW\go"\L9dVr5
%bq(9n+aK*J]g93@4K%O8U0;A<m`.^@*B%3(%_[et'n,]H+9OBH-K7B?pFF@WiYpM'B9MtF_Q]QL2N!?aRsYHo8hn9^"9c&kiPotj
%2s2LHM7=DV]GR#Y5a6g&AD'Lr,BT`!!mmMl`0Q)X6H`jm+-5]N.>(H7>iY_[@DY6<UYr'N):3k/W-'(?r*`E+ETg^#66k1[i;OC8
%'40)]f:$OL)h*=TFrAhedW#CFgIj?d5ZSaGKZoWY,A#/"JQ%Q_Fo3WkEtVV$<mH=g?F<(6=<UnDbV\J:K;OmKT\;hjVO$0p_o:lA
%hnC=npJ`oHAf&Q<RMA/E>oO&IYpgo;=;"bf60]$I+6".4aIT6cK"aXCLQcP?\)]s)np)`0Ls2@eKG[>-YNS)p%b^%9ikI^F4"if`
%E!C9\,XN7+q7a,!r2[Vp6D?HMS:l57/e$bLN(E*$WI2AEaR;Y+,n6fJr<XcUficORg]HmHnc^@53"P8!3"Ia3XAi1ecrC)MhGC%H
%'?t2@?^1L;"?oL%?/G\VK-Zn()Tk0QU%ij/_:k(..Q%)Ag?]S?@NmW`bYn!W@MJR"\IsbnDrJ)N/I2;*9bDFM$[<=7P%0+0?6*iG
%*!&8(HFKf40soS#r7)rP8rVk:+5@T=5mUmEG9g0u)%0WDJ?HXfPUF/Yef[&/q2U'+PIT5:]:ei1.pB`M!$.'KJE8+.71RR[9@B:\
%Dg5"rm)s4SM))f%VD5&[)n&7YQNL]eLE6CELpfNRaLfZV7#_A?ItF]A?RuPa&3<Jm`j]iT;;m6[+->/M=>HPkXHEIuU`/u%6aIKj
%$BtEP?Xr@Qd,INWlG<ZcU<?<kh]d7[J'Z&pXAAp_G0rW5fHHu!'bYEqYi^8mGp9$a@s8D=*oYbo0S+/bgm3!rZIm[(l]:M",*cld
%[]_chpdDq+%qZjq`/J6%OM!M<bV(gPG1cbDI"Q\^$uun)&\*.+hL8Idpe4-==Xj>V'5*5;#=,)d@JMgNngQs$MBYO;(3"&1LKcO%
%a>+bEL"q#AFc>IY!0,rjdNN>+9$uZPU6G<=m&+YH'-X6N],5dWmcZi.g8(,:81U08$0U[XPM(4;+-\cNlXl5*C7A*9;>)>9)>?6[
%`<\@DlASL1']V6(FQ>In,X)Hpe46)KeNb82RicWpf)ZV#TA3B#a"ZiHh4^\I'h%qj(R.a=Nfda4-WG>14(Mjc6s:ZPP@J!m_3P+9
%=a>OWQ@RZuM@qU'lbUI^DC")#>-[P`f9GNM(TW:@NVp]RI#9']JAsRkZ6M8L>\ohf3^,.Wp'=5LG0%ZEFfVtV&(./Fbod[>0Y-U@
%i5=Xj1-eci:A!$ON;jtZo1!\`T66,6Upmoo=*P;P,SD*gRbipcFd'`QZ9I"1^M!*uY2=8n\bi']pKd5br@-D%\tEp/p5;W&kBjY:
%CSC6V?.58\n\oL/iih$i>6SR2_PrV<MJPe'&_%IC_ZZg\"dTfrV;$VAV:aT$hu\Mi%VX@%5r]SH-#-]:F!a"?FD@'HD';;<N#[.!
%l.53C2\"$[g;oa4FV$Sj@mhQ$iF?0%:Z<mi\\$im=b6C9Z'g$>WgZJ(U8KPUgh5BG+h91pF@4mof&Te"b6$@*1*Q=:E1cj>P:N@/
%%%qFVR'QNSi<WL`QC)E]1Zs(CZp<,ofj2eZ#2!-1/%&3s383;C>8;(/+cC5t/q;OXg"u;Z\j&`*;%U,GIdL`^91+CdF+C4?'2T`)
%/tNq#2`(HNGp8j<O:ar(q7&Ri?2__9mUWX?XhZ(1m(J5$3,F1V'Q^ne:%fmN'R#!^L4MII/8CqsR7+uf)gF/;A4:7`AGd+CrKp2t
%.st/o3@=]nZY7GVifMQL1Toh*B?3VN-ou47T-5,GD*r>(m)D9DYY/gA;rCfY#)D!c\Oml$Ic.#+AQ(OB:_2_d,a:5"gbs9?2fPP7
%q&hjp#.N$'VHJkt$moP3dRnL(WCrYi9fbLL#QpO84E\9`n-Lh&>3<"@+M%<3_=$b1=j=+$h)Ta=TWUqD;@-$\9L8#g13<&l%-D\@
%#Qt9d-)LqWl6PV5:RsjXs(sM`IkYe5);!1DM?MZZ?\hnnU&iE`:n`Xa^-lC'0S\#816E@!h#`nPcX*&s67^Oj5g@6TMQCTg&VLi,
%6TYpE3?cl8X3sQ?'m$9P"a&B:2d?9Y@TJ!rd7K/^DN6St"<45QG=/<nU!2f]BC*aBZj2Qi./L.g.qC3!3JS+UmTY!fP%hd#k"$G,
%Z4To(R(+o/foR']='8hFmBd$*eBTa":].Sjjih\rpZ.(GP3"CS7P\.WJ\--rNmVE8bgNA5gN5B72[Z(EMi55LF7k6%l#7>K8Zq83
%*uq`WH/o\anY.X9lKa(qntXoSR0:=c@FjSBJ4P\`Q'8<g"nDQrA5Y%^0?p0;mHAIZF0MoZ<3q]/%JhM3GLN!%b*jGOP\fQFF7\gT
%Im1C.;PtUI(H3N5$\BaCEYEYe+NrBHM&B7Mm89Y\_;q1(hL=NH;CgZn_5@i"Dt,/qYJ%o.3Fqf*5FU-k%&!8[<JHT1.>mY'4bpY-
%BLo5(?/0HjYUj+%Jm6sa%<nb`,10o,'@@pF(eSEc;0!jI-Ma>X-#=5RkWEku(Pl[E*g4.b<#*rX"$g4(WX:Z!+HA%VV%A@9T&=/5
%WrF&@59W7JBt%lIBJl$Zd/:GZ)2kDb#-T%]5rc/&:1/QFTe7P!6%iBTH28k)9o[,]GLdSV(r\-%Lg;qUd@HW*h<bi%OHuYG%A[.N
%'hR_Ea+obu"2kHU&!6kq3@!&U&m1^/(tfnLYmNM`_]BRM,$>KVIg\PSCs$E4/$Sb>EIH"O(m"sbfL6cF`29TiUBpPR_U'%a;OkWf
%7*_`=mp@AIYY*e?<"2Zb85[`+GPBQ$[;poBV&[";C.Er%1?H$7gM;SU[Do<cA<nk"T&tZ\_FKrb]:ei1GE`al<YG3($5cm+Vn`dW
%$JT(Kc5j=??'AT%Ys?K;qW/F;&.f1%aBbDbZFd4>+gW%C$XE0++fS*SSNh<a%r8qQ^.H#8Ic!_/P<K+&4jh*8(NllfrqG;f?a_Wf
%r%Gh`9n-0m)1c(#rp`q7?"lB-deZP6WL.Im!<X](!\Mr>G7DLm>3djBg5WMX!;q1+R$=eIV8MHu3g\1p%o.8S+c_Us<bP<15Tq;G
%'oPi,9:@,jel;>:)o`YogNb:8E.smiiO#pC4&$<Wc)LR+'Gh\cJ*0+7-s`seNVT;c53Q=u`it:9lgT7=`i8W+#P'Ku*t*b=O=$5;
%>4>dVet@a+@seUNF$Nb`(r6>%]AM$-Ju\8+Zrj0V.*>.u@Yr8]r*>Q[jpX+3%Mg,"IS?>)@t^6&NN^PE$=on[di)bAD,Ag;25H/O
%m"n7VW$$\NB-4aF4;93F]=O2TG*uHL*GbKA@VO_lWg]Q5I`al&;0sjOdjWS*>@2(9A0',^Em\Pd3D6\4)iXo>5(:m-;%)eI)C6ZP
%Wm`A&_R^gJ)D,0:"-(dn1@9cb:PqA\8`Go\BKiB=*HrF@K?6,58G'kVLdVX9l4&fPEY?>Rqq-p_6qa!:C*ukD1tUVUoSu[UUmUpJ
%TbC[%E>ee#;(#18b/+7?5WNt$;GNn_`l@5EKgNs@F^(cjZ?;49Es`X=lCCD$b15i8b+B=J3/tXSgLhF!?iK#6a;**u_D!uR8Xq<"
%'iIe&L>i;sGR>N2*<7j:3:q)X9Ej*T&&Mg;o'PTmaPQeHPCoQf\`1joIh#p-6e8F73qR<m(/=:EE.5h"F&1]j]JM8[&c>Wh4BO?Q
%\:#*$Cj7AL(h6p,)*d,q.aV:MT0nSY%g3jKcqq7B3VX6ga62Z2a>!n6$9EXQIoY.+7R%,!$]g#`CNM9*(kY$iIVc??$:$L3(kV*)
%qA=nPGUs8+URqUM"[@bdCDDH;aQMKJiQ/m."-S?C6]s/`*gEbR_6@GY%L4?Hc-amK/Qjbeg%Hd1Sug>c!Qt,::Edk'V-oCjW:N#C
%g$kn)A]'"GW3W\JVdO'tF&1c;_IEVi(`Nug`[ZarQF.ITY[rcB't=Z7*4d[j'+J9fk\0asVB$%P[QTS'0P_](6-OXt1lPQZ*=ZQ1
%]:VEX%=SXr2EVc#N5>%7Al3k2UtJ4mJsq[a4GG^4r"RclOY.^/N7"h\RtX(\2Zo'F39q60+jT)7d3*(AM-u^WZ'`QsBBMC<U!B*@
%/D+)u'FT-9fP&(,kU7#5N.Kr\B.5+RY\/B(0_!c(0,XO:4r=`X2B<qXriFG+#!gp4#=G0'(kP'#`bh<aTRjibKGGU;L">2F?tdHM
%_P)Yg"/86)cQU]QT7Wd@LVfd.gk(+))B93G[Z:h$8*fRKL.?%K;h275V\!R;Rp_>b7R)Z""+M%6/Nak"Xhi?"d_]MQde90HJ8%(e
%:Ee1J][<BdN/iZfgZW&'Zpk9fVmVo<_:(<=@/)QJ^C$Vlr$d;&GVFpl-GrnneA@g[WJ*i0WAQ^T9T@HiE,(Am##o)S32G87*=Jmu
%i+Q6#7RmQ][9q7Re\[r2X$qoNn7mr2%^6`J*+CK^)J"iT0>ae"IL<I5bG(]]=KZVIp"/Z)#e.h3Geg^V7mjGoIfE*g[16Fmm+RMH
%/FZh]NeUkUYG8qc>-ho;[7DS^J;qs[6EhJ[#f8JZ(l#/l"p;-<9#4>?D,<&+>7BLO**`2Z5dj3<(m;#iHj\"3r#D#Nio.[hNK&[)
%@rsgm)rD;>cdq=C!,]WG6F;<aK=!Ks)Q%@Y)@Y-Hk\-p'R!CMj>GG]eg,eQIJ8OhE@*#dB//kl)ZAs]W@rshP>GIsegNF55K=@E?
%4G7V\IL>!k3#KMLbj6d7>@6k>`[s:iaGiW:(!:Cg;_Y]MBK3J\%L.#bF?H@'ULQUG(`NqM[VpU'lo+VfZs2-W1q6bso+^%un5FkH
%iNWr4dG8l*\"0m.R(%=pLB>0@mb=q_]c@UeI,!ReaL>u&d@bD\SV(A.)Z1TMrIk3>cu1!G$iW'=8ML'H3tVl$In:StPBp?m'7o(t
%Q;]4,fC/Z=p%)2feDfcmOoH4.$ig'oJ`0tN^CC\hrh87h4Sln`E'5*K&BEuFL5=m;%gImVd>rs;gP3BO'aGcj(<>W?iSn4Z^CD*q
%iCiP)m<=![pS_?U_8(%!NeWR(Cclt?mhEk)d<H[$0)S(fjEU<LU#^MV)GH1=*t0O;UE9mmf:sDn.CV`n*EEY4*a!lOIMl>W6L6Kc
%^BuX/rQ6eO(GUCda;eP,%l;8iGbFliU$(Ladk=)6n+a'q3]GN*0^N&AQ"]*d\ZCCVkLX0G2=/@UfNbgHY,e9GY2BQ3;\s6_@gtS.
%jM!Q0IDREN#iqpR7:XD"S^@S8VRiF=69W2sW/!`0$1]Y;[4!X0:b0Fc_Bta!?;ld>:^o.VJ64W-KSE58L7WT)?N>:8TfS:_Sjn9V
%4djoq-hT)VTmR3^YYB=O$XtbX3\\p`(u@/M#!_i+)ufZ*:-U[P^F,3/q$\4UE$Y9#-bFin5cc0*KUqj_pWpZu]$\*KL'gB*BJR0#
%jDJX$^DqVh=(iotrr?O0PkV*MSu?@i:"B(0F#DXV=2q$)cM"TjNY^EXWb=;a&;0KN<GJINAB%n#"`W;fF&n&14/\$\E<mqaF2;l;
%/"L+gNH`0tc9Mel0hLug$9P]P?AbVC(<<hEfnuB$8sQr2q11Wkn+"3@CGq!)6]\6Yg(&,VQ`Y9lGV-f1\SJV>^#)4YD/*oU5qaSp
%)u!#_d.ZaV7%0f4REYt[bLee"kkXZf$E5fe1>^7+"c="GT'b%_h6@4f'h*iB[C)C&"SB?Rn8q,iC89s^4P$hop(h"TF:XVu=5jp^
%\UaE,8)b3<@@mm[V2d1%DO+aF'@-%0/f-=X`m-^fM0_THrbr2i*Y$A:8,oZin]jR0=OXS;$OcPh\es8YabqCH>E0b:onMTL>nsD3
%HSc<3I!b?lSPMBADbLV_]-kHHX;A&-gX2^!E]m`J9:!#LrqX[4a?t57%u=k[J^(_X[(]f!_K6AoOReCm_H3@7$3S2"PJ3'in66#+
%,gG:W[tlMK2f;j_gn!+R5[)4rijDHp&`YWIMcd,]/l#WP@EXYhQ/0;!SBWhQDQI(YhT[O-\X4pW7R^J*@nTfeTJP6;B]7"`eTi;T
%HS%&=f@_YV"C6t,m`HrbE\,ELOd)]D>KAe^h!UYhF1EA#0;NU`Ft^bS^?(VdYb!3Mf^nshmP20L6RJ2WR;,/;ajKNE[%c/\>(0i[
%YLhD-RksS5F3Snh?.W`6a0%)i?b.$:3p88-Vn-9TRL<H'[(qp8ofF\C`XOk@Ocq8RC1X1H)CYKi=,Km!C*aCN+WJ,OkZeg4g"QTB
%"[NsN/0PP+eplgkTa[e]qONDY$%08?Qn4JAIf$uIcQh3r46GOpA`bX+qa;,o^N!&&]Z;Y2XQdT.Y+8jcOL*6SW%Nhg&ZQ5r4I9qi
%Z(0<`lHV6bWQ?n;3MRF'!aef"6u.[>3a$'0c!=!/h,N&8gqlp-U(O[,1S-tdWJHFJTs3-_<Q%S3qOX>PK6rf,`DdI,7>3#TU0g>c
%/K_&8-@``WmHB-,'7`2hkFZE%:?6McFk6fjNj4DOhc;Xn#G%><WImDnA;VflXFf?1n.4`sqV\*@;(enqd8L^Z`p-@Z.2mQ]beEsI
%&@fsHZU6rY'pm)r^aYZe9aUZcf'd-Q9b46k,CCr:gB8CCSsWsHU;"[1,S6Z+cBa*MOM3Ni*a4jB,E6nGbI1^EKZ"/]c-QR)5b;NO
%J$[^%#_H+81>9!7AJHMGkmZGZ"T+jQmO?TZ't!Qg:',7cM`t&T0L:HaL^`32a(Nb;8r/%.^Xp?4T&#Z&PF.p(G=mI<i:m(:$f$<?
%[%j$*N5\e_54e156$c2s`<0`ma@OSgeL2(3)=FWJeYgV4@H9m,US/Q(RlkD`_09I'@@'e!I`*#,n:`92N<paIRk3M7CN#f@`\qq[
%a#MlGas7WafTgTEQ(3LbR%`S3k<W?%2JG`CWn$i&f9qoF#2`*if\EaO5,97K7-J=/BVThQ,m\uNlC=AJG>fl9L=&@jNI?*!G9S!]
%buqAUlgU@uEhg@b=DalF+SWiA^=h_]*,`7ENmiVYm+5"kE$lU1FA"/D]O6+=A;)l%7WcZP_s&eeD$0_p:NES/pc#/iSP36G<'@H/
%Ine,D8QK:F;dA2k?-/d-Z/=7DfNn!t/U)DUZZULm-TcB(<]g%]#m):OG'o'ZcpL!eB!J^!okWHJ(1<JXN."%=eDD5F.\;71j8gt.
%;^sX(5!t*S06OE<c"OiXBN<)*WSKuq[MjP-'Y`h?TS3J2Ei%-G*0-62J)!l)Y`?i20kYX@9L5kpDW*_pKVe&-4I=fT74hs"T::qW
%QX_Z_.Q>YkolD5XG)O&jlO_+^$-idBO7Sujrn_iN#K4toe&+LWkaXYdk$qa_%t[,4qSP?.S6L3Fg4KZ6W;ZF*'3a!r6%.bEccseJ
%hRfr.SDX"pokF$LT"aps([EgR=1&oP>KVJOD.VngQe!qN6$jJ]'XsIgeT%&r7RsRm(`TrR@<C:FVQUK`c7h4q4Zc0Sm:R7U[@j5H
%pF@3:*PXE2]^(7l9lSUFL=(!FR`I'o9bYK6m:dIZ[A\r5@l?3'NEarO*MR^7)uX;M"!4qR@Isf,CUZf`ftM(tO&n6J'+J-u^4(QG
%B-SD$[)!OpZaH>KUXh=k/qrY/k<";32pO<jF#sUrX_sYGbjG\]>KlY]Nf;ZJ::C&JqKBp2,PTUfGJZWb*+C4G<]C^ka::_OLfr^s
%1hMY-LISCckGJOOEBNM@Mk#Mcg#NEoXE(g<5%9j_T)0hWS@AHGBq7?U&)-49j9I8YqU#i,kjW9@8r(ek4.UeFcr,YHEEf!b12<on
%dtuiF`3Q*Q4,f3SlnJ9g<]_n\L[93\eIPgNn7^$hVjDePHDd`laF:$orK%0nO%*u2g@M6Xcdk$ga4"c+/U86S[H1h=fU@T3@='%"
%LFmfhr#qQ$<p)hN4l^]-Z0P!#N*>rQ[P>D<C\urts4%lK9JCAE_s"Uq&#80.5$shH[_<^[CTW"%*4PZNFPPl2d:&O%hh`8!*>g/>
%?eomkni76?Gm0s8*(gM*W(XW\$>,"57HRAWWXpD(<ZU$qN]s@cMAf)>IFIZm]+n1TL<eB^JaW.,=7:UE]#J%Pr:pjl'4G2,VU4<1
%7:7_/C];2%N8540G9O#5e:lo\XPn-sgaQs.lkp_uI.)aF<FqRU0%L89:]r.KIa4YaHS9J9d!os/N2Q,m2W1<\!+a38o(6+_jo/*$
%mIT&;Dl^tFH4sIYIZJD2=d]'Rc!S7;adq<qrpH9+5X1L9c&&\4it#-ZhdP`Z:]uS1OT,+%'tP1A6KcKs5<%3gHLJEW%H7Z[B?Pp8
%S&hX8IVqK]pF`C?E;nY`),K/eE[-&-=.H5h`VMY2m9E_D^)tqX%qU[o1UZ[Q5:klCS1#l@%-rSFCa<8=\sogg"uXL94etXM7I[OD
%aX1lIScrK:&g6GWIPiWIo)t2.Y]Xl,_$g0/.l4KfXSWkjd($)T3T$oN*Qe[4LJNf`Rqc-56mcQ^ieMG*(I@,gEJ]e1Ngl%.g6![s
%9B=TR8km@m1..1'jOrZ&0kHkJ`&*.VQTqO;@Qg5Um)fq<Tc_DM';J[%CF"S-Fs:X06bSO>[991=`b/(mW;En3^M9si?]E-0\DW-k
%,&dIlk24"79(je>"JXTE.X.oGVEFkCokbZ7cf`3EO(iD*N4rFZ,1L?O>#<J[^5`rI\?A!.aJLkSFYTEDQG'!a!@Pm5O`,a<?2pqF
%LQUP'/[6C4#0&c#S]0Hds"_`9E-8*]gX`^H)'9m-3);d(0<;*P91!65Nus,=.Zi3Xlm--%D-bkj]o>neHlLVr2\@@Zkap+lf4u>;
%;qf.4HkoPR2g_'ZA<b>U'MD'?W^n6W8I$'>)h-B-N.gF/4o'$Pk$c\X`3W-TZU;<BIXdNM^NdB%!jM:t'%=5,0I-MB0/,%WbS)G2
%[q!^c7rk689md!u47#F6.2JIAY_6f+9\gBbo,^fK;JPTW^#.u$bd<PJqko^WU6#S\VAGHliCp,X7tsuFL&-@E%@&ERZ+4=4%IP4`
%9@DU_-^<;3Zj/e<Ed&^qKdX3eii0';q00+/%<kj6i^Lq4]jD0"!^eX/q-jq:Sr-u&4GAtFr_Q7[Mp.^W'GM;JqZET^0ot-n[WBb2
%5AQLDr8K>`A3BC;<eOVdGQ,^9Na$ee[B/80e3!\Xn[mB\pKa"m>k*U<f"O@f:h4=850TSP_@DTrhAZuRn[nK]Q=*EsiHBTW;9at[
%B8!]sao`$*@?r,/NSRVQ9^eMI-29S'T34Z.p2Mh,+*r5uEP:s?'Zq7f\<GaSoVZAM1=>8losY[tG[2lIH<G?R7i$9)<8XfAZ<#Or
%mJ2;B"&5cNRHTR<q)"8[ojiY=oJBKe*uO,i1Q]/]WKRLdUF]XeNiRVAQcMY]-JLUhI<tS4`pLD)lk`;N[`#9G#PL[*=ajnH`AmQ9
%>8:Y[Z!c.pCQI8>2W],FT._O7ERhf?p+^W`c;-m^ERP1q*s854Yg+Q0YcLk5]2g1]X0&DIn229QH6@G&mH(Nd:8er5D0E84o8^;R
%C3*Q4(;JO-It[[ooCWfsQo,-I[jLZ)`n(tC$^\nA2!d+d-Mq,"rAq8+%$\>V]PdbG3N_Jd^XNa,Y!@49hahr;'?s8U3ZU*hH9:#;
%Z=L%N.nY<(IY$[!fC=7Y]=+YJW*C&b`fdNQ+_k(M`&9H5oBb^%'\cD"J>Loq@0n%ih"A;2:LR6Z8l8m_S.LIMo\[aUK0*=Aa1f4H
%kOlZ&E_g'4[pN+Kc3m[%B:^jq&q27oN&BPh/&"P.2>5noP%Acq2['Pc[$g8I]/ifRd#hqF_d99S_-:+ulM%=dc^pRH^NZ/Y)=b>_
%:#n=2Re*Bf^XO_LU.h7'F]=rS]&&BYj3pKRNEsuM7KPiKJ]$VHe*olrX0;j:Gisfh-ke4njD._S]MAG26ggEfc;,'/5/J3Jp+<0F
%F@^kbMrM_%lD:_dDP[aJ5.a3Y(gpK#M9G7+6=TT&P_iE"Kg(s$[7<5)>uo:dC2[V(YA@ef>kWC]Y5#nf//QC7:G,X[Q0Q;Oq<6A;
%Bf"?5oV;D")5UT$6q%leqsb<,f<nmVh'lAG^%hKu[O&VJok3XOl<XrZTc(,Nibch3=,l@O^\>0de`53DYepXMCN9tnS7YnFgO?_7
%2rCj8\SWd2!_VB5lD3Krht7e[ZB-[@<.R`/SoCF'Rt6-66i.Hp/`^Odbru:G,.;BjVtFJ??VnANp]oo[\!JbS=`d4"`=C3ZTm\0S
%Xei!7i>V"J1$&$ue<'N0%j"HR_X*-]cI:@!>n=t0!^]$)->duDT76>$hqP66-F]s(7[JqTl?6C&HT2P>TCYF8eEgc+'UT\PXkL*/
%+$E<C]k6"kZNF.K]I6P>fW;BBK0<#rL%^d.bO9-;i\<Y3_Km\%omn-WJopQZR]Hl37H"9[ZT2!"8[>cW/<R%l,RUaAPD'G2"04l6
%&3.TLf^^?o_OZCUqXl`fff`=Y^C]SY:`,-gDuB3P'iq3SP5Q#2MG*$7g?5U2#O[EcW]KhY:((KTP]g]3cTg`#%\dqr$W$\/Cb"n7
%m.:-26;6g;(7K$(gc='NMdQ//*U!pY(U!PNGNp#@%(,G`S/,p(V]5M\nXKM5<7R31D/AWqmb3l@V$E;gH16h!p5*Z7a"scuG&,pd
%o%ua*k$XC*,A+"R_@h?3RuS\`E+,B(RS8-;[<U9dqdQ0NIb.q/bcs"8+(*Yo*k?8_\E&_E^f4;r2EgP:TUQn?S:/+rREm'+B),nd
%5P-q1HuHY1H6K;.?#5cSb"J)+nm<ek/KK%A$)cE>lA_c,^Kg&j1lA7GFIs;L:Msufp/e?0pl/-KGte$bV_3pFiP2THD>f#c_bO-7
%]sH$$e,$850?_qfcHiCrr8Wh*WjnBtE4$X9Z<m8Sn=:56X!T!#$c$:W*Zg!@]p@F!?-jni?RU#KG47ft3I4%Xo(08LE26:uHL/5B
%k&3D2XE5h+96CK60>[eEU_,([Nk0U@6,/`G\?>m[)<:E-$Z1m1r7$<L3feo7`q-,+X6'eVDkGLI&,FH4mlZ)mjf"^7NiN9*p+NB5
%f0Hu>?9d`)p/,T#@J:#,6^MtCDOZT,rn=gMf"(Yk]ln5kgtYq[laln5En=6"$8;"KSj)i''N_>HIp7O?ofX6_S8[*5O]9Zr:&kC.
%FFUO`C4E[T^]ghsi93T4oB6&CY1G;,E)#eIbeIT^Xf%5.2BVj73p%`JIJN(+;k?@Ff@!upRR-k5B7gY,/l^+a*X\.Am9,]e=V:Rb
%MQ@glHlf;"99b./hLM?5-KR^]_hHX?TGV78p0Oj8G"HpM(IEuEh4"-\S"Zq<.c30DW%,I`Y&>47oT5?bK_N+FoWKB@(H+7_le)Z'
%T/IN9]:i4PDuXS6:#FJOq>AiM1KM?T@ojcs+Tt>I:]^eNIOsjVhb\`Q9sL.90F\/$+'Dn(30R:B7RaFr5%R:sA2A0_lQ$8o6P6IA
%/X5H\!lUBhH[!20XU>BS@ZbjR4#1:9p60/Z[hVa(fH't6Am7I#D]J<VHD7I1?2fpOdBV)N2D\UG?.I.o.'''q^)*XB\ou/0O]#FO
%,<ei6W(t"!\ark&<oo:VS@W\OSO^^Cqbm,tJLo=c-&%]K<+=(mWdsS?#_f4h37rg0Q+UIQm3Jo5D_Di7H)>;NAj%4dLn_2q=G7Y8
%`VPnuot@D-9P23\)$X<-8IRoucIe?*KWSjJMUIr,EjIoaXm%f]Fq!+]2Ne_*A*bV#h&PWBf'VWK-,?<7Ua@7,&95ORc%&BV+V&<u
%R7R[CS)^]W:-C.C#?pcQf;`l9JPbs_VPf(e=QPN7ZO6RGYbu6Jh6"u?"p1R%\QTSk*8R`03u^6*.B1IgTNrj4_&c^a>q"]U_*j/S
%J8FY80m9K%U.B4O!A*J3YeR&J?!6BihhOuG7CWe<l!UYeWbe)neHCjR9XiQp-OkBg.rBoP\3>-mR_@B01I?;>MKo-4D!R+U[1rL0
%>X(1#mLt)!^XP^?FS7@sUrs8d5YK;?Pg!$_d*?Njm]IS5EijXfnRAec;]4?UAFmkbfE^JUbs93mY`mgZ&H!^t'9lkq%9'IY"7@Sk
%7\JhYfFQ,=[FermALE:TVt2Io-8]7!0Mm`&#kS^pd!PcIDc7kZWsc[uZu"rsLH<8])sA/o9*E)4#=9rgrW-meeGMM.JXWH=AP5n&
%'_P<^hN"N!o&WhAdA41u$FTm+NIPNHSGe_656:)#J":36c/oqIWQL*u&<IVGS647qXJ.*cbbS)Q)cAW,"%l$l;\E@io'<FA\[Z=t
%7+?N?$JfH;j\cto5T'R]MC>e?-AmW@;38eP=0\qHp#Aa,4P#T=aHX;:5(u1><!tHoMnOcg%-,M71qDg0E.TKX$`>KX"t&]5D)]KW
%.32jBVo&+j.U+^)*`r;s2.I4@30oY$S$foG-h6=[TgD,a]2W')MC+^8&0aleb`6(85],HQ@=,(t/C=924lK^8/"c^m"1<`E.r#rI
%Dmq<p2Hh*-h;9bOm8#[jBu75qMLATX;J\Y0(-h6N/j19AU0JK5%!oA2,.9;P"oEEj,mOQ;fXVH<WuqgM8nLmW-:99e=sdei(%Q6c
%!nJ(!*\18^T1J'U'^KC*.$*=io,T`<TsXO!R2,jT!D19]aVkBqg8^-,eE7.D.P0+r3f6fn?H>B94%%SflWm,2Y2+Pg&J^-sJD):9
%7Kf/!!EEXETTe_clf8OPAR9pCK`Vh7U4=rGVp$IECqFL%$7?(YfFumKcm,&W8\5BP]o"qR(r*2CRa2RWW'*8[9^(N9J@1Yc$MM@[
%e5Y(hgV`)&U@?X[o"!#M<C^Fir`NH"?>Y3A)p;_F[2+,,aWmhLMbP&:B)Ou?AjM6PLru.U[?<%4Y9G[^RBGFc->;(6ObUd!dISL[
%&3EJQT*d1'N.Mk':(@#<HQt\e4GVa/4\U,l],a;G<F'"hAtPH+4B_:Tn>;I.0Bg9AY:j!\1HZ&?5+t@+f*nOn(`B&B_C/27gW>pp
%@-kkRQjS_EbiR4):,l0k2DAX,jIPA5fW(Klg:jh-^">J3O%%B0^S.udIcU!hS@YgC=giJ7cqRZOf;V40L,/T26#))=:O:NDhPFPW
%o(5=Ul"Gi(KSLB!5XffMf;TQ<9eHXLdirsTgW/9V8Sm#fIRsW!U#M0.0c+LOK@7e8PS%5l%D'@u^$g]m\HG,@;4_Nsg%+h+.T1mZ
%\9<2T+&Or#`j)`bOrG`R#Y<u%c8H,!M&Mr:&3<$Xm9o@)dW;iLKZ;s5R$u'`1pWL%Sr9I;@Fe`A@]4c"HX-&'247[OX(='6q<YD-
%Y>JC:I6B6*e!\daOZ'X8iBr:lS-1RJflfn<b99R++L"\^#"(@aEmi9gIQ.l!#NgnJ_n;45TH;H#a_,0N62Bdk!Ji%a\SCII7)&)"
%INH@0L7q<"_QcSo&J6j^j#PGtZ2_p?0:m\.M(K[3m-65Jc<K+E405R-jHb:Aa[7/?IA_Cq<GhB*^:-=E-sj//\jh'4<rh9W@G#8)
%:?kV]WWmGa7lL?od-1Q=U<-m"W`(PC'C!lUCn<+DZ96d@2$9NC;EgFq'^(;I,#_g!DG7h+>9S7,E-_Ffes2o$_r3L55h3Fub36AR
%9$n,F)J#[`THUo^.8&*?oW^rijUNH,KR@g8WJo0jPH%`+SA1p'Z<]p>T_^DHDEoZgN&!7.=;'ma+`U)P6OfGD1<E`koKY'S5c&54
%er:?i.<X<D]I.hO_Q'P^!RNmOWA1\>@9r>Ie"Sl`gI2;#n#7Po0.*SA(3"dDZ4R:f=SQJp>LJ)MpYcPF,uq@%c@]`b6mkA88dZD@
%+%/35DWagCIlk9Bg)F^>F7LhFj[q!k&VXYoeL<.(cn:?uTbC.i7C8Z$2Pd=BltU$*j^.!WOZm7qHn[d>O\3^Z$k(m--7N.;a?XM>
%DVUS)K:1"baFn@JN#`:%CBQX[9d6BF[R3dRC,\^VaEA"IG^+$33p"&l^1dt.96$!)ctkVuOVI%,fmoOL-rYS.'#/;'l.A^\@Gh9?
%g*A6Y`Gac%<JY<T^.]Kb_s9V[58$SF<[m)0<7bE^1AJ\&qB7#Ys!7TM,B)-E.7,DKP*q?5qq^ZGn1Js!M6c&;U(KcP<`>G;+D1U#
%Fp,rW'YB:':dB9=m(5.D1n=XIS)t@Q#&n8uZ>jm?q0R&V$Hh?rO53,8pAU8s%"6n"_/H'gJL/aj2Hah:;C2';RXU,3&h1E&R^\Wo
%%+QQ7G9iQCel6>36"Q/:lC5mWYW&oQ'U@=A%\cZ\Pco31s(8J+qbdk;8oU3G*jc,UH7Me^kc773#]V)g!eW(%j96l"+%j/h:<=<:
%`*,1n68uN38$eosYY;8[+'u"B.MTB>2]N+BZK&gO@XOY;,iMRf5r9`+TJ(nfE>i$toRrD3'?sdo$Z!EoD=k_6Z[#%^Y1A.9n;^W=
%i?\Bq`RXncE-Ld")Bqo<LHoGfhis_V+D*&cQ[Z<9M_9^Vih":uAiPj<'fW`B5SeGrJ/h#RF#O3BJSaXa'&=8'/p&gu/3g?U`NFEe
%Rb*-DRb.3AMiP2mn+,h&Y.m'MEDc_<'mDP*:TsKN/n8JJJ;qSbls,Au/!qpgSbH6gIUbb1LB)+J`W0rrDmr)JZFo8JTJ@[:Bt*t:
%*DGFtX"MI+_UsP"j_66lK?\^Ro57:0\94iHYZ`e;D]*nWb0Am-1q-Ym-OcI@8I9P*#tODUf@O<QZ;G?98UM*?O49S'l)03W<e_,B
%1g*H#S'YK_K;$A&C4;(T1VS[D.8VPIe@62@%<":ZY>J9h.#&q]ND'pUJO:#>$]<`-9aWt2JPJ\:85aI=SlNB\kmI37nT6Q"Wr!M-
%3`ctL.IL[Hi63e+`)Dpf@@PJUU94:E-C@(VRj.=#/RF'r9Qj8&J!@^@M%64mR<jOD'E[dD)W4ur#++2ImoO[d$URPP$Y71iG2i<?
%[^4)M<oi;ci"k'UA;Ijh6d]^GMUF-7$dL*RNKPlnK[U!&)3*NrL`P<:MiOENerm,&-%Z517=^([AS5u%kc4qe:r>Rq>3=GKR$-.r
%nHRZ%V;?.:2;`+5/G#4>lNiSkqXCgjUilji@G2:phDLFJeYPP/Xjr,6OWl\6JcrIOD(pO.X8mAE]1Om-AipcI:ej\''ai<[$2XG5
%UE%:,]B'6JV"S91c9jH\B0.amLaq'#\(`(Fp!(4#BGJ(g(I?;?Yn4kX-^RhX5)WX7D8m$F/JD1;J.6=Q7C+C5fG/e],je)a,D[4S
%-MYpf]o_JfPK"@o94`D<,W`r'8\0N,!2Q=4#EY$?%HPuU/)9t4kB:H$o\;7O^L,h8j[qFF6b@.<5Ao\**<NWIIU.^HrlIYHd/kp:
%*/p)_LN^9<)mm];+.ccbok,F(\K3FPJE5d34O/)D?mf(nB4ei_Ys5"@\008+oY^8;_rYO&-@a\P0%.XpG1d*Ad,pT8Z`?0:T`M1b
%3b'J)GE&_g/(<R=g1FslW)f%u]L>c3iP=_rM+&%\d7\5sN(hG+<gfJ5_J\ef0'Ml<n57j"1F4T&D''9$eq0L:l,H>gopE[X$fV)k
%b<B8h=@lsf(\3+rj0F;!WPS$GgXHZqfb1#/3<bst"DeV33BEFA@UDk)V@a]HNSoPD<sgQ5ACG*X9(Z^S\ua0G7^,,kY)7tIj4MTH
%5J56@nIsdH8m*fYZZ<l*a_&=F<,NK#0r'XLN3Ki<iZ6`08s1bgTBq?.%jfcmPF#d3hL*m6?A7na>m,B8_Ia-\KRB^?]&PG(F9*3(
%`ps4uFM#2$h<5#J2Z!9)AP3EUC6'=YY)-M'ILSE,-(HT:%<XhhlumEa#+?8&Q"kaW5i(L?qDA7hXVre%?_];jE@T#eap>PA*S:6.
%J.U"NF)0iHXKDltk(+Xff9b$Nr)?VgI<mVbV\+M:b-jM/-F@\PL=<8E#O0e>j;4o.2$h`IN7Qf'7-,J6[g&M*/)/ku.s/<Zmc`^<
%a*FH'@W=aG7G?PP)I,g6q->!XAb5c9G8,1hME*4]/AHgZCiC'@DLFQ(#aqXSILTa;W&FSmHuCpRT5KY*;F1n#NQddf^4?32WL96o
%SJp/7.bj[V^0'"S20q8?<n*WXgbPEqH8PEkZC*Gu4W6`cAn%u*\6hY_*fYkqVFP-i]Z#)G^n)mPpP*i+qn(5!E]WUsVBprN4>p,N
%SANr6ol>/lUJWq5#,a^nW.tdKgniuB@.@k`nB>/'QTp*5g+$A,N#/SeY%ngd8hGrto&GHW41(`j6\H_cqBc4]dLVX<+tA#Y2i3W,
%E8Mp-o!ck<.b)9*_fd.\Y3Wg4Teg#kd/ndM`k"_FUAX/jc.jQ]nER`kRtPCR8*S2DTt\GR4.)K?rF:3H4.VPHHWRIJ8Z'Z43M:Y&
%NUKD0&?agQ1JnnugKb`'.rIeZ.h8h>l3FP"EJQ8CjhZ5WJBJ\:r4mHo/allG\.u][\E+[\b7#>t*Db!fkjl@<l9fd='W2_8i4`1q
%!g2u4lL'/`3aAIs2o,me^5Ea1P*TXY7C9kURF,SOpB=jR]s'iOIFV2RGAh]A@KG(\pYj;a?gh.LAjMc+]]Qu3H*sBF&*Pa#N>BWf
%`Jj+M`!#?og8S4$$SQS68/@"E0D13i:oiY/4\-?RALEh#M8JU?&#5k0_048W"!LpV5g<ii;kKdQ6-/cY+\dj#/\C<DhF*9R+LY;m
%+sqgee#TB[E<dpr&5)1V:oG*bdR1qU;;E'A=qJ!OfgL`5\jVH<l9[m)Waj-]@(!9^2ou+/Bj\Ts&?J?*dPInTfW/P&"!q*Kbj66'
%U#NAc4ieC(O#g=p!jTCY_GB+lP::@.Nd/$ifDH19_2f:c?,R,P#G"(<6"4-3fB@7#/Z<#_gc"oolLG!egj-HCJ=9Kk0<^9lk2g__
%cujV>"Lqc:W1Dg`f+bui?*MpO$5=&T_h/5:H/[Nuoc[oKa06g"Y0c:L]&i86Kp+]qg#h+5EJ=)R6;^r)j&R$"cgGZlFW'3C%t0No
%`k:l4*EfX@pS]\QD*]!#[r2Z>Hubif!\6XOd"V5^#`jFDdsJOOml-!8TF:?56g50V$[NNQh7]7"<qJ.5'XX]%7,hs5-tC8t/LH8W
%2-2"fj@:okjYha/'ts&aW_XJp\piQ?NP33_T6m/j<gh.5VTK"pe9[\1-7n5fW]:3?DeG.$i3Is/d+.+&FgchDU*:68W9&$i=luRX
%U+YZ8W2O]"d^Uq[.iN%&/,MV3l[R1c$&%CA]"X9@nZJQtH%DFg-?VWr+G&N?(GM_[j2,sCOV2&?'lIhNKh+PBCG2bIDBkG5!\VR*
%msklO$7AhY^*@Ms?-pQ`32_@l@X6d34LOdjSZ2j!:*@]WVgU_1UpHl6Sq\0R%JOXT8E5m)VBFd$:>t5\f:QC?J-REPN3W@1L`s^t
%GS5NCF?R*C4^[f>O7e#`4.+rcF3G_.REU'1N?;HiZ?#OMQ;=TL9IoKB[CD*`/;@f^q7XjY(!/s/\%=1lTg0Zo/[?4dVDosF@Wf#C
%!]O8`Z4M$@QRl0?bKRpNa^S*FV9c?N(nA7GemG^"EaB6Bj!9PV<#NBS2d,Lg*eq5J@`L@h9,>-jP/WGq<M$MK0e^RI('@`4?Y-L[
%1-QLWCk3@)m"S9?lThUAIu%g@X=r5t>o3ZYT>$+efGM0^m\n[;?\PaH87@HRg"R^0&aD"D\1iZh."oZQ0d:J9L*"W/_)I9'`d')-
%D3;g4NUffFZIi#;#]5j<QF2(!0!a,]\h"%6+(LST!-JfdS[')/93#t7m%TIgMd7$=a^Q%eY#<m!X?-A%*@`JNaC<2mI)ASmj/QtN
%I[A$X_A3:;Z5ATUgOMt+N(8;;&&/K^$X6_dYmPuk.Ii`Y`b2,!YJSp*)niR\Q<?q"/9<c(JhAtg:il8(D&cP]=g.bC%p/D_LT$!.
%Fp^1Z#B.ta*kQsGY869+4\VMbeo'J*eI,[\AOo24Agpq]KO+$.+`]4S.fA_R%.*trM(QTt!a[Ld"Z-`.OZ%$.Bm9i(U_tY!*]0TS
%Rh/")g3GTXT9Hn6M!U&daFW0<Xc#TSU6kM*EliGd>+JJB\Sj8^fUlHrolhcr]-OM9.*lClQf\WLFRc$_#F,4o37*su?+0Ns^e,%D
%\e#>Y1Zp,(6U%%E#d,SuOu0fGkWl35paM\PaW,!<UogMT]Dmi/Zo?,3mQXVo/^Lg$c]HMR^*fu]%#;_UJ)#SZa=PC"5Z8ihh+b%!
%="9>5Q?kR<J2gi&"7='q^0A-CH;G&W'8!M>0%]'r7g_pre:(VLbQg,f"*t8_'il?OWN9'QUrg86pgmNKTdhJ#MVM=4$4b,T8.S[B
%U$F#9TZ8>u?)WYc:T0U&\tcTDk^oP@&Pb/=5M^e.gBCEGeh>$)^MBq8+.fRS?\Ga/eHJCd?h8&;O=@41QPmn"'Wf1rbiX;]m#?'Q
%erXl@JH2Dq.k/aFQVg'"F>Oc]#H=8UHRKK9HlbN'I]a?)8J-erH.Z6MFp>n1$kbXapB`7-[%?W.eX,+I@@=60'WW_8AE_[ZoIYu3
%jlQ(BA\hlNGYOa3EX3NFh$HXG0H?Ziq5=9VOJ]!i#,0k<(C!&*@TS,=6XX^tm(I$4:VHjOl:L@%"_cad%/gB>()Sa-4j>(U0\qKW
%<.iN-)&O$(K$7]dhp8!P!ZUf@XjFiG(uo%1=o)uoAIAo(;d*5T![+=a4;U0faN7Dbi9Y[<J2Z^8L]L]gjh(?("/W[]11e%pW6pRD
%TueV:b_.5mN"oOFf-*;lU(^5SS]^I74>qsb;t;d'g1-bR__hakRB_hSTm-#^p,]eqig]JOmQ#mK,8O=9cn0Xo!]ab9J&sJg,Up\$
%.i`NM"BnXJ"?Q!WC\B\CJa0aMN&/VeU)RkAQlh!`=6.Bn^8:s3<'JMr>9F@Adths+=FNlO9V@9?Ya8eA14^q'Z>-ij,SARMV;t`*
%&>1k[h$T_[<8$AN(eRP1@3oY@c&`54g6C!oA-)eV1MMQp(lDq6m_2Wp"otn\6s_[#J9ppKjT8Gjk1_I'QGH%@Epok?GV0P(cgn>G
%+@&FlB&.#N&3j5DI`Vc1;Dh5]nl2:)2U9@3E^Vb/-mW:J[HHe3ZW&(6;9L#7m&<8&9N(sT'r\Emj^Had]l`GKs)dl:i5fD3Jc.;K
%8aY3L:aQ771UeLJ2%bYoQ]eHn1P#P:`abE%.s,>(/Z<:`<L(C`1rJp@f-ZneQ:)ihq(QsI&qOeiXrPaj_Y78rgl_tsjYMM^9H^FK
%AP77p&GFOsj,s_%9t(g]cNU>UApQ-81FO#PaTYjFb6>c/m72)DV;ai*gFN>DjT9u?4CUso5j&rRqk?1k$];n10Mt'<_6`2,j7XI9
%dS`so(Pl:h]Vd%l#lI0:Yrro%%_JO&.hNLe4Ajj3JH0l.eYno<W?0m86m*UtpS%b]h?#NNh3gA>FhIA9!4JT9O6#;a-N[_^`dX4A
%TK7rdeg1n6-ttQBR6X#1Z-?Z#&=0.q>m/=RW_<FE&(.dE0/!!%-;\8oj0;3jIE$)1WBf+C]ljLg[bSpZ.mEGqE,=p_YA8iPp%qU(
%%otQ\a>4R0Z?`s.Q=g8MTG/C+R6X#PPNZSG5V$qf!j/D4!oXl`6DlpZ#SXHSOsLbI1Tp>R0G=_IPSH(IbQQpojCG,D%n"?KUqKuM
%*]&AOk@Vs-9HXs<D5L"O40iY&o#q5?mpXBBH>tgWYLOr.0ADhCrg2OAVSB,dq=[&Qp,?@YiI>Y#s8/Ggjm<TYh]Mmhhu;@:I/Q;/
%n8EgS^]*eZs6!1-r6'#.o5F[!LVNfXb9-`]kC<NX5Q'[ds2Xq2?iKFGJ,GB-r:du(n]QF[huE]U!l:Nii9T"prf@*FDh%BY"#?:Wec~>
%AI9_PrivateDataEnd
